Class {
	#name : #ABAPScanner,
	#superclass : #SmaCCScanner,
	#category : #GToolkit4ABAP
}

{ #category : #'generated-initialization' }
ABAPScanner class >> initializeKeywordMap [
	keywordMap := Dictionary new.
	#(#(954 'ABS' 876) #(954 'ABSTRACT' 33) #(954 'ACCEPT' 34) #(954 'ACCEPTING' 35) #(954 'ACCESS' 36) #(954 'ACCORDING' 37) #(954 'ACTION' 38) #(954 'ACTIVATION' 39) #(954 'ACTUAL' 40) #(954 'ADABAS' 41) #(954 'ADD' 42) #(954 'ADJACENT' 44) #(954 'ALIAS' 45) #(954 'ALIASES' 46) #(954 'ALIGN' 47) #(954 'ALL' 48) #(954 'ALLOCATE' 49) #(954 'ALPHA' 50) #(954 'AMDP' 51) #(954 'ANALYSIS' 52) #(954 'ANALYZER' 53) #(954 'AND' 54) #(954 'ANY' 55) #(954 'APPEND' 56) #(954 'APPENDING' 57) #(954 'APPLICATION' 58) #(954 'ARCHIVE' 59) #(954 'AREA' 60) #(954 'ARITHMETIC' 61) #(954 'AS' 62) #(954 'AS400' 63) #(954 'ASCENDING' 64) #(954 'ASSERT' 65) #(954 'ASSIGN' 66) #(954 'ASSIGNED' 67) #(954 'ASSIGNING' 68) #(954 'ASSOCIATION' 69) #(954 'ASYNCHRONOUS' 70) #(954 'AT' 71) #(954 'ATTRIBUTES' 72) #(954 'AUGMENTING' 73) #(954 'AUTHORITY' 74) #(954 'AUTHORIZATION' 76) #(954 'AUTO' 77) #(954 'AVG' 78) #(954 'BACK' 79) #(954 'BACKGROUND' 80) #(954 'BACKWARD' 81) #(954 'BADI' 82) #(954 'BASE' 83) #(954 'BEFORE' 84) #(954 'BEGIN' 85) #(954 'BEHAVIOR' 86) #(954 'BETWEEN' 87) #(954 'BINARY' 88) #(954 'BIT' 89) #(954 'BLANK' 94) #(954 'BLANKS' 95) #(954 'BLOCK' 96) #(954 'BLOCKS' 97) #(954 'BOOLC' 98) #(954 'BOUND' 99) #(954 'BOUNDARIES' 100) #(954 'BOUNDS' 101) #(954 'BOXED' 102) #(954 'BREAK' 103) #(954 'BUFFER' 105) #(954 'BY' 106) #(954 'BYPASSING' 107) #(954 'BYTE' 108) #(954 'CA' 116) #(954 'CALL' 117) #(954 'CALLING' 118) #(954 'CASE' 119) #(954 'CAST' 120) #(954 'CASTING' 121) #(954 'CATCH' 122) #(954 'CDS' 123) #(954 'CEIL' 877) #(954 'CENTER' 124) #(954 'CENTERED' 125) #(954 'CHAIN' 126) #(954 'CHANGE' 129) #(954 'CHANGING' 130) #(954 'CHANNELS' 131) #(954 'CHAR' 132) #(954 'CHARACTER' 134) #(954 'CHECK' 135) #(954 'CHECKBOX' 136) #(954 'CID' 137) #(954 'CIRCULAR' 138) #(954 'CLASS' 139) #(954 'CLEANUP' 143) #(954 'CLEAR' 144) #(954 'CLIENT' 145) #(954 'CLIENTS' 146) #(954 'CLOCK' 147) #(954 'CLONE' 148) #(954 'CLOSE' 149) #(954 'CN' 150) #(954 'CO' 151) #(954 'COALESCE' 878) #(954 'CODE' 152) #(954 'COLLECT' 153) #(954 'COLOR' 154) #(954 'COLUMN' 155) #(954 'COLUMNS' 156) #(954 'COL_BACKGROUND' 157) #(954 'COL_GROUP' 158) #(954 'COL_HEADING' 159) #(954 'COL_KEY' 160) #(954 'COL_NEGATIVE' 161) #(954 'COL_NORMAL' 162) #(954 'COL_POSITIVE' 163) #(954 'COL_TOTAL' 164) #(954 'COMMENT' 165) #(954 'COMMENTS' 166) #(954 'COMMIT' 167) #(954 'COMMON' 168) #(954 'COMMUNICATION' 169) #(954 'COMPARING' 170) #(954 'COMPONENT' 171) #(954 'COMPONENTS' 172) #(954 'COMPRESSION' 173) #(954 'COMPUTE' 174) #(954 'CONCAT' 879) #(954 'CONCATENATE' 175) #(954 'CONCAT_WITH_SPACE' 880) #(954 'COND' 176) #(954 'CONDENSE' 177) #(954 'CONDITION' 178) #(954 'CONNECTION' 179) #(954 'CONSTANT' 180) #(954 'CONSTANTS' 181) #(954 'CONTEXT' 182) #(954 'CONTEXTS' 183) #(954 'CONTINUE' 184) #(954 'CONTROL' 185) #(954 'CONTROLS' 186) #(954 'CONV' 187) #(954 'CONVERSION' 188) #(954 'CONVERT' 189) #(954 'COPIES' 190) #(954 'COPY' 191) #(954 'CORRESPONDING' 192) #(954 'COUNT' 193) #(954 'COUNTRY' 194) #(954 'COVER' 195) #(954 'CP' 196) #(954 'CPI' 197) #(954 'CREATE' 198) #(954 'CRITICAL' 199) #(954 'CS' 200) #(954 'CURRENCY' 201) #(954 'CURRENT' 202) #(954 'CURSOR' 203) #(954 'DANGEROUS' 205) #(954 'DATA' 206) #(954 'DATABASE' 207) #(954 'DATAINFO' 208) #(954 'DATASET' 209) #(954 'DATE' 210) #(954 'DAYLIGHT' 211) #(954 'DB2' 212) #(954 'DB6' 213) #(954 'DDL' 216) #(954 'DDMMYY' 217) #(954 'DEALLOCATE' 218) #(954 'DEC' 219) #(954 'DECIMALS' 220) #(954 'DECLARATIONS' 221) #(954 'DEEP' 222) #(954 'DEFAULT' 223) #(954 'DEFERRED' 224) #(954 'DEFINE' 225) #(954 'DEFINITION' 226) #(954 'DELETE' 227) #(954 'DELETING' 228) #(954 'DEMAND' 229) #(954 'DEPARTMENT' 230) #(954 'DESCENDING' 231) #(954 'DESCRIBE' 232) #(954 'DESTINATION' 233) #(954 'DETAIL' 234) #(954 'DETERMINATION' 235) #(954 'DETERMINE' 236) #(954 'DIALOG' 237) #(954 'DID' 238) #(954 'DIRECTORY' 239) #(954 'DISCARDING' 240) #(954 'DISPLAY' 241) #(954 'DISTANCE' 243) #(954 'DISTINCT' 244) #(954 'DIV' 245) #(954 'DIVIDE' 246) #(954 'DO' 247) #(954 'DUMMY' 248) #(954 'DUPLICATE' 249) #(954 'DUPLICATES' 250) #(954 'DURATION' 251) #(954 'DURING' 252) #(954 'DYNPRO' 253) #(954 'EARLY' 254) #(954 'EDIT' 255) #(954 'ELSE' 257) #(954 'ELSEIF' 258) #(954 'EMPTY' 259) #(954 'ENABLED' 260) #(954 'ENABLING' 261) #(954 'ENCODING' 262) #(954 'END' 263) #(954 'ENDAT' 270) #(954 'ENDCASE' 271) #(954 'ENDCATCH' 272) #(954 'ENDCHAIN' 273) #(954 'ENDCLASS' 274) #(954 'ENDDO' 275) #(954 'ENDENHANCEMENT' 276) #(954 'ENDEXEC' 277) #(954 'ENDFORM' 278) #(954 'ENDFUNCTION' 279) #(954 'ENDIAN' 280) #(954 'ENDIF' 281) #(954 'ENDING' 282) #(954 'ENDINTERFACE' 283) #(954 'ENDLOOP' 284) #(954 'ENDMETHOD' 285) #(954 'ENDMODULE' 286) #(954 'ENDON' 287) #(954 'ENDPROVIDE' 288) #(954 'ENDSELECT' 289) #(954 'ENDTRY' 290) #(954 'ENDWHILE' 291) #(954 'ENDWITH' 292) #(954 'ENGINEERING' 293) #(954 'ENHANCEMENT' 294) #(954 'ENHANCEMENTS' 297) #(954 'ENTITIES' 298) #(954 'ENTITY' 299) #(954 'ENTRIES' 300) #(954 'ENTRY' 301) #(954 'ENUM' 302) #(954 'ENVIRONMENT' 303) #(954 'EQ' 304) #(954 'EQUIV' 305) #(954 'ERRORS' 306) #(954 'ESCAPE' 307) #(954 'ESCAPING' 308) #(954 'EVENT' 309) #(954 'EVENTS' 310) #(954 'EXACT' 311) #(954 'EXCEPT' 312) #(954 'EXCEPTION' 313) #(954 'EXCEPTIONS' 315) #(954 'EXCLUDE' 316) #(954 'EXCLUDING' 317) #(954 'EXEC' 318) #(954 'EXECUTE' 319) #(954 'EXISTS' 320) #(954 'EXIT' 321) #(954 'EXPANDING' 323) #(954 'EXPIRATION' 324) #(954 'EXPLICIT' 325) #(954 'EXPONENT' 326) #(954 'EXPORT' 327) #(954 'EXPORTING' 328) #(954 'EXTENDED' 329) #(954 'EXTENSION' 330) #(954 'EXTRACT' 331) #(954 'FAIL' 332) #(954 'FAILED' 333) #(954 'FEATURES' 334) #(954 'FETCH' 335) #(954 'FIELD' 336) #(954 'FIELDS' 340) #(954 'FILE' 341) #(954 'FILL' 342) #(954 'FILTER' 343) #(954 'FILTERS' 344) #(954 'FINAL' 345) #(954 'FIND' 346) #(954 'FIRST' 347) #(954 'FLOOR' 881) #(954 'FLTP' 350) #(954 'FLUSH' 351) #(954 'FONT' 352) #(954 'FOR' 353) #(954 'FORM' 354) #(954 'FORMAT' 355) #(954 'FORWARD' 356) #(954 'FOUND' 357) #(954 'FRAME' 358) #(954 'FRAMES' 359) #(954 'FREE' 360) #(954 'FRIENDS' 361) #(954 'FROM' 362) #(954 'FULL' 363) #(954 'FUNCTION' 364) #(954 'FURTHER' 366) #(954 'GE' 367) #(954 'GENERATE' 368) #(954 'GET' 369) #(954 'GIVING' 370) #(954 'GLOBAL' 371) #(954 'GRAPH' 372) #(954 'GROUP' 373) #(954 'GROUPS' 374) #(954 'GT' 375) #(954 'HANDLE' 376) #(954 'HANDLER' 377) #(954 'HARMLESS' 378) #(954 'HASHED' 379) #(954 'HAVING' 380) #(954 'HDB' 381) #(954 'HEADER' 382) #(954 'HEADERS' 383) #(954 'HEADING' 384) #(954 'HIDE' 387) #(954 'HIERARCHY' 388) #(954 'HIGH' 389) #(954 'HINT' 390) #(954 'HOLD' 391) #(954 'HOTSPOT' 392) #(954 'ICON' 393) #(954 'ID' 394) #(954 'IDENTIFICATION' 395) #(954 'IDENTIFIER' 396) #(954 'IDS' 397) #(954 'IF' 398) #(954 'IGNORE' 399) #(954 'IGNORING' 400) #(954 'IMMEDIATELY' 401) #(954 'IMPLEMENTATION' 402) #(954 'IMPLEMENTED' 403) #(954 'IMPLICIT' 404) #(954 'IMPORT' 405) #(954 'IMPORTING' 406) #(954 'IN' 407) #(954 'INACTIVE' 408) #(954 'INCL' 409) #(954 'INCLUDE' 410) #(954 'INCLUDES' 411) #(954 'INCREMENT' 412) #(954 'INDEX' 413) #(954 'INFORMIX' 415) #(954 'INFOTYPES' 416) #(954 'INHERITING' 417) #(954 'INIT' 418) #(954 'INITIAL' 419) #(954 'INITIALIZATION' 420) #(954 'INNER' 421) #(954 'INPUT' 422) #(954 'INSERT' 423) #(954 'INSTANCE' 424) #(954 'INSTANCES' 425) #(954 'INT2' 426) #(954 'INT4' 427) #(954 'INT8' 428) #(954 'INTENSIFIED' 429) #(954 'INTERFACE' 430) #(954 'INTERFACES' 431) #(954 'INTERNAL' 432) #(954 'INTERVALS' 433) #(954 'INTO' 434) #(954 'INVERSE' 435) #(954 'IS' 437) #(954 'ISO' 438) #(954 'JOB' 439) #(954 'JOIN' 440) #(954 'KEEP' 441) #(954 'KEEPING' 442) #(954 'KERNEL' 443) #(954 'KEY' 444) #(954 'KEYS' 445) #(954 'KEYWORDS' 446) #(954 'KIND' 447) #(954 'LANGUAGE' 448) #(954 'LAST' 449) #(954 'LATE' 450) #(954 'LAYOUT' 451) #(954 'LE' 452) #(954 'LEADING' 453) #(954 'LEAVE' 454) #(954 'LEFT' 455) #(954 'LEFTPLUS' 457) #(954 'LEFTSPACE' 458) #(954 'LEGACY' 459) #(954 'LENGTH' 460) #(954 'LET' 461) #(954 'LEVEL' 462) #(954 'LEVELS' 463) #(954 'LIKE' 464) #(954 'LINE' 465) #(954 'LINEFEED' 469) #(954 'LINES' 470) #(954 'LINK' 471) #(954 'LIST' 472) #(954 'LISTBOX' 474) #(954 'LOAD' 475) #(954 'LOCAL' 477) #(954 'LOCALE' 478) #(954 'LOCK' 479) #(954 'LOCKS' 480) #(954 'LOGFILE' 482) #(954 'LOGICAL' 483) #(954 'LONG' 484) #(954 'LOOP' 485) #(954 'LOW' 486) #(954 'LOWER' 487) #(954 'LPI' 488) #(954 'LT' 489) #(954 'LTRIM' 882) #(954 'MAIN' 491) #(954 'MAPPED' 492) #(954 'MAPPING' 493) #(954 'MARGIN' 494) #(954 'MARK' 495) #(954 'MASK' 496) #(954 'MATCH' 497) #(954 'MATCHCODE' 498) #(954 'MAX' 499) #(954 'MAXIMUM' 500) #(954 'MEDIUM' 501) #(954 'MEMBERS' 502) #(954 'MEMORY' 503) #(954 'MESH' 504) #(954 'MESSAGE' 505) #(954 'MESSAGES' 507) #(954 'MESSAGING' 508) #(954 'METHOD' 509) #(954 'METHODS' 510) #(954 'MIN' 511) #(954 'MMDDYY' 514) #(954 'MOD' 515) #(954 'MODE' 516) #(954 'MODIF' 517) #(954 'MODIFIER' 518) #(954 'MODIFY' 519) #(954 'MODULE' 520) #(954 'MOVE' 521) #(954 'MSSQLNT' 523) #(954 'MULTIPLY' 524) #(954 'NA' 526) #(954 'NAME' 527) #(954 'NAMETAB' 528) #(954 'NATIVE' 529) #(954 'NE' 530) #(954 'NESTED' 531) #(954 'NESTING' 532) #(954 'NEW' 533) #(954 'NEXT' 537) #(954 'NO' 538) #(954 'NODES' 550) #(954 'NOT' 553) #(954 'NP' 554) #(954 'NS' 555) #(954 'NULL' 556) #(954 'NUMBER' 557) #(954 'NUMBERING' 558) #(954 'NUMC' 559) #(954 'OBJECT' 561) #(954 'OBJECTS' 562) #(954 'OBJMGR' 563) #(954 'OBLIGATORY' 564) #(954 'OCCURENCE' 565) #(954 'OCCURENCES' 566) #(954 'OCCURRENCE' 567) #(954 'OCCURRENCES' 568) #(954 'OCCURS' 569) #(954 'OF' 570) #(954 'OFF' 571) #(954 'OFFSET' 572) #(954 'ON' 573) #(954 'ONE' 574) #(954 'ONLY' 575) #(954 'OPEN' 576) #(954 'OPTION' 577) #(954 'OPTIONAL' 578) #(954 'OPTIONS' 579) #(954 'OR' 580) #(954 'ORACLE' 581) #(954 'ORDER' 582) #(954 'OTHERS' 583) #(954 'OUT' 584) #(954 'OUTER' 585) #(954 'OUTPUT' 586) #(954 'OVERFLOW' 588) #(954 'OVERLAY' 589) #(954 'PACK' 590) #(954 'PACKAGE' 591) #(954 'PAD' 592) #(954 'PADDING' 593) #(954 'PAGE' 594) #(954 'PAGES' 595) #(954 'PARAMETER' 596) #(954 'PARAMETERS' 598) #(954 'PART' 599) #(954 'PARTIALLY' 600) #(954 'PCRE' 601) #(954 'PERCENTAGE' 602) #(954 'PERFORM' 603) #(954 'PERFORMING' 604) #(954 'PERMISSIONS' 605) #(954 'PLACES' 607) #(954 'POOL' 608) #(954 'POSITION' 609) #(954 'POS_HIGH' 610) #(954 'POS_LOW' 611) #(954 'PRAGMAS' 612) #(954 'PRECHECK' 613) #(954 'PRECOMPILED' 614) #(954 'PREFERRED' 615) #(954 'PRESERVING' 616) #(954 'PRIMARY' 617) #(954 'PRINT' 618) #(954 'PRIVATE' 620) #(954 'PRIVILEGED' 621) #(954 'PROCEDURE' 622) #(954 'PROGRAM' 623) #(954 'PROPERTY' 624) #(954 'PROTECTED' 625) #(954 'PROVIDE' 626) #(954 'PUBLIC' 627) #(954 'PUSH' 628) #(954 'PUSHBUTTON' 629) #(954 'PUT' 630) #(954 'QUEUEONLY' 632) #(954 'QUICKINFO' 633) #(954 'RADIOBUTTON' 634) #(954 'RAISE' 635) #(954 'RAISING' 636) #(954 'RANGE' 637) #(954 'RANGES' 638) #(954 'RAW' 639) #(954 'READ' 640) #(954 'RECEIVE' 642) #(954 'RECEIVED' 643) #(954 'RECEIVER' 644) #(954 'RECEIVING' 645) #(954 'REDEFINITION' 646) #(954 'REDUCE' 647) #(954 'REF' 648) #(954 'REFERENCE' 649) #(954 'REFRESH' 650) #(954 'REGEX' 651) #(954 'REJECT' 652) #(954 'RELATING' 653) #(954 'RENAMING' 654) #(954 'REPLACE' 655) #(954 'REPLACEMENT' 656) #(954 'REPLACING' 657) #(954 'REPORT' 658) #(954 'REPORTED' 659) #(954 'REQUEST' 660) #(954 'REQUESTED' 661) #(954 'REQUIRED' 662) #(954 'RESERVE' 663) #(954 'RESET' 664) #(954 'RESOLUTION' 665) #(954 'RESPECTING' 666) #(954 'RESPONSE' 667) #(954 'RESPONSES' 668) #(954 'RESULT' 669) #(954 'RESULTS' 670) #(954 'RESUMABLE' 671) #(954 'RESUME' 672) #(954 'RETRY' 673) #(954 'RETURN' 674) #(954 'RETURNCODE' 675) #(954 'RETURNING' 676) #(954 'RIGHT' 677) #(954 'RIGHTPLUS' 679) #(954 'RIGHTSPACE' 680) #(954 'RISK' 681) #(954 'ROLLBACK' 682) #(954 'ROUND' 683) #(954 'ROWS' 684) #(954 'RTRIM' 883) #(954 'RUN' 685) #(954 'SAP' 686) #(954 'SAVE' 688) #(954 'SAVING' 689) #(954 'SCALE_PRESERVING' 690) #(954 'SCALE_PRESERVING_SCIENTIFIC' 691) #(954 'SCAN' 692) #(954 'SCIENTIFIC' 693) #(954 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(954 'SCREEN' 695) #(954 'SCROLL' 696) #(954 'SCROLLING' 698) #(954 'SEARCH' 699) #(954 'SECONDARY' 700) #(954 'SECONDS' 701) #(954 'SECTION' 702) #(954 'SELECT' 703) #(954 'SELECTION' 705) #(954 'SELECTIONS' 710) #(954 'SEND' 711) #(954 'SEPARATE' 712) #(954 'SEPARATED' 713) #(954 'SESSION' 714) #(954 'SET' 715) #(954 'SHARED' 716) #(954 'SHIFT' 717) #(954 'SHORT' 718) #(954 'SHORTDUMP' 719) #(954 'SIGN' 721) #(954 'SIGN_AS_POSTFIX' 722) #(954 'SIMPLE' 723) #(954 'SIMULATION' 724) #(954 'SINGLE' 725) #(954 'SIZE' 726) #(954 'SKIP' 727) #(954 'SKIPPING' 728) #(954 'SMART' 729) #(954 'SOME' 730) #(954 'SORT' 731) #(954 'SORTABLE' 732) #(954 'SORTED' 733) #(954 'SOURCE' 734) #(954 'SPACE' 735) #(954 'SPECIFIED' 736) #(954 'SPLIT' 737) #(954 'SPOOL' 738) #(954 'SPOTS' 739) #(954 'SQL' 740) #(954 'SQLSCRIPT' 741) #(954 'STABLE' 742) #(954 'STAMP' 743) #(954 'STANDARD' 744) #(954 'STARTING' 746) #(954 'STATE' 747) #(954 'STATEMENT' 748) #(954 'STATEMENTS' 749) #(954 'STATIC' 750) #(954 'STATICS' 751) #(954 'STATUSINFO' 752) #(954 'STEP' 753) #(954 'STOP' 755) #(954 'STRUCTURE' 756) #(954 'STRUCTURES' 757) #(954 'STYLE' 758) #(954 'SUBKEY' 759) #(954 'SUBMATCHES' 760) #(954 'SUBMIT' 761) #(954 'SUBROUTINE' 762) #(954 'SUBSCREEN' 763) #(954 'SUBSTRING' 764) #(954 'SUBTRACT' 765) #(954 'SUFFIX' 767) #(954 'SUM' 768) #(954 'SUMMARY' 769) #(954 'SUPPLIED' 770) #(954 'SUPPLY' 771) #(954 'SUPPRESS' 772) #(954 'SWITCH' 773) #(954 'SYBASE' 774) #(954 'SYMBOL' 775) #(954 'T000' 779) #(954 'TAB' 780) #(954 'TABBED' 781) #(954 'TABLE' 782) #(954 'TABLES' 783) #(954 'TABLEVIEW' 784) #(954 'TABSTRIP' 785) #(954 'TARGET' 786) #(954 'TASK' 787) #(954 'TASKS' 788) #(954 'TEST' 789) #(954 'TESTING' 792) #(954 'TEXT' 793) #(954 'TEXTPOOL' 794) #(954 'THEN' 795) #(954 'THROW' 796) #(954 'TIME' 797) #(954 'TIMES' 798) #(954 'TIMESTAMP' 799) #(954 'TIMEZONE' 800) #(954 'TITLE' 801) #(954 'TITLEBAR' 802) #(954 'TO' 803) #(954 'TOKENIZATION' 804) #(954 'TOKENS' 805) #(954 'TRAILING' 810) #(954 'TRANSACTION' 811) #(954 'TRANSFER' 812) #(954 'TRANSFORMATION' 813) #(954 'TRANSLATE' 814) #(954 'TRANSPORTING' 815) #(954 'TRMAC' 816) #(954 'TRUNCATION' 817) #(954 'TRY' 818) #(954 'TYPE' 819) #(954 'TYPES' 822) #(954 'ULINE' 823) #(954 'UNASSIGN' 824) #(954 'UNDER' 825) #(954 'UNICODE' 826) #(954 'UNION' 827) #(954 'UNIQUE' 828) #(954 'UNIT' 829) #(954 'UNIX' 830) #(954 'UNPACK' 831) #(954 'UNTIL' 832) #(954 'UNWIND' 833) #(954 'UP' 834) #(954 'UPDATE' 835) #(954 'UPPER' 836) #(954 'USER' 837) #(954 'USING' 839) #(954 'UTCLONG' 840) #(954 'UUID' 884) #(954 'VALID' 842) #(954 'VALIDATE' 843) #(954 'VALUE' 844) #(954 'VALUES' 846) #(954 'VARY' 847) #(954 'VARYING' 848) #(954 'VERSION' 849) #(954 'VIA' 850) #(954 'VISIBLE' 851) #(954 'WAIT' 852) #(954 'WHEN' 853) #(954 'WHERE' 854) #(954 'WHILE' 855) #(954 'WIDTH' 856) #(954 'WINDOW' 857) #(954 'WINDOWS' 858) #(954 'WITH' 859) #(954 'WITHOUT' 862) #(954 'WORD' 863) #(954 'WORK' 864) #(954 'WORKSPACE' 865) #(954 'WRITE' 866) #(954 'WRITER' 867) #(954 'XML' 868) #(954 'XSD' 869) #(954 'XSDBOOL' 870) #(954 'YES' 871) #(954 'YYMMDD' 872) #(954 'ZERO' 874) #(954 'ZONE' 875) #(896 '=>' 26) #(916 '%_FINAL' 2) #(916 '%_HINTS' 3) #(916 '%_PREDEFINED' 4) #(916 '?TO' 31) #(916 'ABS' 876) #(916 'ABSTRACT' 33) #(916 'ACCEPT' 34) #(916 'ACCEPTING' 35) #(916 'ACCESS' 36) #(916 'ACCORDING' 37) #(916 'ACTION' 38) #(916 'ACTIVATION' 39) #(916 'ACTUAL' 40) #(916 'ADABAS' 41) #(916 'ADD' 42) #(916 'ADJACENT' 44) #(916 'ALIAS' 45) #(916 'ALIASES' 46) #(916 'ALIGN' 47) #(916 'ALL' 48) #(916 'ALLOCATE' 49) #(916 'ALPHA' 50) #(916 'AMDP' 51) #(916 'ANALYSIS' 52) #(916 'ANALYZER' 53) #(916 'AND' 54) #(916 'ANY' 55) #(916 'APPEND' 56) #(916 'APPENDING' 57) #(916 'APPLICATION' 58) #(916 'ARCHIVE' 59) #(916 'AREA' 60) #(916 'ARITHMETIC' 61) #(916 'AS' 62) #(916 'AS400' 63) #(916 'ASCENDING' 64) #(916 'ASSERT' 65) #(916 'ASSIGN' 66) #(916 'ASSIGNED' 67) #(916 'ASSIGNING' 68) #(916 'ASSOCIATION' 69) #(916 'ASYNCHRONOUS' 70) #(916 'AT' 71) #(916 'ATTRIBUTES' 72) #(916 'AUGMENTING' 73) #(916 'AUTHORITY' 74) #(916 'AUTHORIZATION' 76) #(916 'AUTO' 77) #(916 'AVG' 78) #(916 'BACK' 79) #(916 'BACKGROUND' 80) #(916 'BACKWARD' 81) #(916 'BADI' 82) #(916 'BASE' 83) #(916 'BEFORE' 84) #(916 'BEGIN' 85) #(916 'BEHAVIOR' 86) #(916 'BETWEEN' 87) #(916 'BINARY' 88) #(916 'BIT' 89) #(916 'BLANK' 94) #(916 'BLANKS' 95) #(916 'BLOCK' 96) #(916 'BLOCKS' 97) #(916 'BOOLC' 98) #(916 'BOUND' 99) #(916 'BOUNDARIES' 100) #(916 'BOUNDS' 101) #(916 'BOXED' 102) #(916 'BREAK' 103) #(916 'BUFFER' 105) #(916 'BY' 106) #(916 'BYPASSING' 107) #(916 'BYTE' 108) #(916 'CA' 116) #(916 'CALL' 117) #(916 'CALLING' 118) #(916 'CASE' 119) #(916 'CAST' 120) #(916 'CASTING' 121) #(916 'CATCH' 122) #(916 'CDS' 123) #(916 'CEIL' 877) #(916 'CENTER' 124) #(916 'CENTERED' 125) #(916 'CHAIN' 126) #(916 'CHANGE' 129) #(916 'CHANGING' 130) #(916 'CHANNELS' 131) #(916 'CHAR' 132) #(916 'CHARACTER' 134) #(916 'CHECK' 135) #(916 'CHECKBOX' 136) #(916 'CID' 137) #(916 'CIRCULAR' 138) #(916 'CLASS' 139) #(916 'CLEANUP' 143) #(916 'CLEAR' 144) #(916 'CLIENT' 145) #(916 'CLIENTS' 146) #(916 'CLOCK' 147) #(916 'CLONE' 148) #(916 'CLOSE' 149) #(916 'CN' 150) #(916 'CO' 151) #(916 'COALESCE' 878) #(916 'CODE' 152) #(916 'COLLECT' 153) #(916 'COLOR' 154) #(916 'COLUMN' 155) #(916 'COLUMNS' 156) #(916 'COL_BACKGROUND' 157) #(916 'COL_GROUP' 158) #(916 'COL_HEADING' 159) #(916 'COL_KEY' 160) #(916 'COL_NEGATIVE' 161) #(916 'COL_NORMAL' 162) #(916 'COL_POSITIVE' 163) #(916 'COL_TOTAL' 164) #(916 'COMMENT' 165) #(916 'COMMENTS' 166) #(916 'COMMIT' 167) #(916 'COMMON' 168) #(916 'COMMUNICATION' 169) #(916 'COMPARING' 170) #(916 'COMPONENT' 171) #(916 'COMPONENTS' 172) #(916 'COMPRESSION' 173) #(916 'COMPUTE' 174) #(916 'CONCAT' 879) #(916 'CONCATENATE' 175) #(916 'CONCAT_WITH_SPACE' 880) #(916 'COND' 176) #(916 'CONDENSE' 177) #(916 'CONDITION' 178) #(916 'CONNECTION' 179) #(916 'CONSTANT' 180) #(916 'CONSTANTS' 181) #(916 'CONTEXT' 182) #(916 'CONTEXTS' 183) #(916 'CONTINUE' 184) #(916 'CONTROL' 185) #(916 'CONTROLS' 186) #(916 'CONV' 187) #(916 'CONVERSION' 188) #(916 'CONVERT' 189) #(916 'COPIES' 190) #(916 'COPY' 191) #(916 'CORRESPONDING' 192) #(916 'COUNT' 193) #(916 'COUNTRY' 194) #(916 'COVER' 195) #(916 'CP' 196) #(916 'CPI' 197) #(916 'CREATE' 198) #(916 'CRITICAL' 199) #(916 'CS' 200) #(916 'CURRENCY' 201) #(916 'CURRENT' 202) #(916 'CURSOR' 203) #(916 'DANGEROUS' 205) #(916 'DATA' 206) #(916 'DATABASE' 207) #(916 'DATAINFO' 208) #(916 'DATASET' 209) #(916 'DATE' 210) #(916 'DAYLIGHT' 211) #(916 'DB2' 212) #(916 'DB6' 213) #(916 'DDL' 216) #(916 'DDMMYY' 217) #(916 'DEALLOCATE' 218) #(916 'DEC' 219) #(916 'DECIMALS' 220) #(916 'DECLARATIONS' 221) #(916 'DEEP' 222) #(916 'DEFAULT' 223) #(916 'DEFERRED' 224) #(916 'DEFINE' 225) #(916 'DEFINITION' 226) #(916 'DELETE' 227) #(916 'DELETING' 228) #(916 'DEMAND' 229) #(916 'DEPARTMENT' 230) #(916 'DESCENDING' 231) #(916 'DESCRIBE' 232) #(916 'DESTINATION' 233) #(916 'DETAIL' 234) #(916 'DETERMINATION' 235) #(916 'DETERMINE' 236) #(916 'DIALOG' 237) #(916 'DID' 238) #(916 'DIRECTORY' 239) #(916 'DISCARDING' 240) #(916 'DISPLAY' 241) #(916 'DISTANCE' 243) #(916 'DISTINCT' 244) #(916 'DIV' 245) #(916 'DIVIDE' 246) #(916 'DO' 247) #(916 'DUMMY' 248) #(916 'DUPLICATE' 249) #(916 'DUPLICATES' 250) #(916 'DURATION' 251) #(916 'DURING' 252) #(916 'DYNPRO' 253) #(916 'EARLY' 254) #(916 'EDIT' 255) #(916 'ELSE' 257) #(916 'ELSEIF' 258) #(916 'EMPTY' 259) #(916 'ENABLED' 260) #(916 'ENABLING' 261) #(916 'ENCODING' 262) #(916 'END' 263) #(916 'ENDAT' 270) #(916 'ENDCASE' 271) #(916 'ENDCATCH' 272) #(916 'ENDCHAIN' 273) #(916 'ENDCLASS' 274) #(916 'ENDDO' 275) #(916 'ENDENHANCEMENT' 276) #(916 'ENDEXEC' 277) #(916 'ENDFORM' 278) #(916 'ENDFUNCTION' 279) #(916 'ENDIAN' 280) #(916 'ENDIF' 281) #(916 'ENDING' 282) #(916 'ENDINTERFACE' 283) #(916 'ENDLOOP' 284) #(916 'ENDMETHOD' 285) #(916 'ENDMODULE' 286) #(916 'ENDON' 287) #(916 'ENDPROVIDE' 288) #(916 'ENDSELECT' 289) #(916 'ENDTRY' 290) #(916 'ENDWHILE' 291) #(916 'ENDWITH' 292) #(916 'ENGINEERING' 293) #(916 'ENHANCEMENT' 294) #(916 'ENHANCEMENTS' 297) #(916 'ENTITIES' 298) #(916 'ENTITY' 299) #(916 'ENTRIES' 300) #(916 'ENTRY' 301) #(916 'ENUM' 302) #(916 'ENVIRONMENT' 303) #(916 'EQ' 304) #(916 'EQUIV' 305) #(916 'ERRORS' 306) #(916 'ESCAPE' 307) #(916 'ESCAPING' 308) #(916 'EVENT' 309) #(916 'EVENTS' 310) #(916 'EXACT' 311) #(916 'EXCEPT' 312) #(916 'EXCEPTION' 313) #(916 'EXCEPTIONS' 315) #(916 'EXCLUDE' 316) #(916 'EXCLUDING' 317) #(916 'EXEC' 318) #(916 'EXECUTE' 319) #(916 'EXISTS' 320) #(916 'EXIT' 321) #(916 'EXPANDING' 323) #(916 'EXPIRATION' 324) #(916 'EXPLICIT' 325) #(916 'EXPONENT' 326) #(916 'EXPORT' 327) #(916 'EXPORTING' 328) #(916 'EXTENDED' 329) #(916 'EXTENSION' 330) #(916 'EXTRACT' 331) #(916 'FAIL' 332) #(916 'FAILED' 333) #(916 'FEATURES' 334) #(916 'FETCH' 335) #(916 'FIELD' 336) #(916 'FIELDS' 340) #(916 'FILE' 341) #(916 'FILL' 342) #(916 'FILTER' 343) #(916 'FILTERS' 344) #(916 'FINAL' 345) #(916 'FIND' 346) #(916 'FIRST' 347) #(916 'FLOOR' 881) #(916 'FLTP' 350) #(916 'FLUSH' 351) #(916 'FONT' 352) #(916 'FOR' 353) #(916 'FORM' 354) #(916 'FORMAT' 355) #(916 'FORWARD' 356) #(916 'FOUND' 357) #(916 'FRAME' 358) #(916 'FRAMES' 359) #(916 'FREE' 360) #(916 'FRIENDS' 361) #(916 'FROM' 362) #(916 'FULL' 363) #(916 'FUNCTION' 364) #(916 'FURTHER' 366) #(916 'GE' 367) #(916 'GENERATE' 368) #(916 'GET' 369) #(916 'GIVING' 370) #(916 'GLOBAL' 371) #(916 'GRAPH' 372) #(916 'GROUP' 373) #(916 'GROUPS' 374) #(916 'GT' 375) #(916 'HANDLE' 376) #(916 'HANDLER' 377) #(916 'HARMLESS' 378) #(916 'HASHED' 379) #(916 'HAVING' 380) #(916 'HDB' 381) #(916 'HEADER' 382) #(916 'HEADERS' 383) #(916 'HEADING' 384) #(916 'HIDE' 387) #(916 'HIERARCHY' 388) #(916 'HIGH' 389) #(916 'HINT' 390) #(916 'HOLD' 391) #(916 'HOTSPOT' 392) #(916 'ICON' 393) #(916 'ID' 394) #(916 'IDENTIFICATION' 395) #(916 'IDENTIFIER' 396) #(916 'IDS' 397) #(916 'IF' 398) #(916 'IGNORE' 399) #(916 'IGNORING' 400) #(916 'IMMEDIATELY' 401) #(916 'IMPLEMENTATION' 402) #(916 'IMPLEMENTED' 403) #(916 'IMPLICIT' 404) #(916 'IMPORT' 405) #(916 'IMPORTING' 406) #(916 'IN' 407) #(916 'INACTIVE' 408) #(916 'INCL' 409) #(916 'INCLUDE' 410) #(916 'INCLUDES' 411) #(916 'INCREMENT' 412) #(916 'INDEX' 413) #(916 'INFORMIX' 415) #(916 'INFOTYPES' 416) #(916 'INHERITING' 417) #(916 'INIT' 418) #(916 'INITIAL' 419) #(916 'INITIALIZATION' 420) #(916 'INNER' 421) #(916 'INPUT' 422) #(916 'INSERT' 423) #(916 'INSTANCE' 424) #(916 'INSTANCES' 425) #(916 'INT2' 426) #(916 'INT4' 427) #(916 'INT8' 428) #(916 'INTENSIFIED' 429) #(916 'INTERFACE' 430) #(916 'INTERFACES' 431) #(916 'INTERNAL' 432) #(916 'INTERVALS' 433) #(916 'INTO' 434) #(916 'INVERSE' 435) #(916 'IS' 437) #(916 'ISO' 438) #(916 'JOB' 439) #(916 'JOIN' 440) #(916 'KEEP' 441) #(916 'KEEPING' 442) #(916 'KERNEL' 443) #(916 'KEY' 444) #(916 'KEYS' 445) #(916 'KEYWORDS' 446) #(916 'KIND' 447) #(916 'LANGUAGE' 448) #(916 'LAST' 449) #(916 'LATE' 450) #(916 'LAYOUT' 451) #(916 'LE' 452) #(916 'LEADING' 453) #(916 'LEAVE' 454) #(916 'LEFT' 455) #(916 'LEFTPLUS' 457) #(916 'LEFTSPACE' 458) #(916 'LEGACY' 459) #(916 'LENGTH' 460) #(916 'LET' 461) #(916 'LEVEL' 462) #(916 'LEVELS' 463) #(916 'LIKE' 464) #(916 'LINE' 465) #(916 'LINEFEED' 469) #(916 'LINES' 470) #(916 'LINK' 471) #(916 'LIST' 472) #(916 'LISTBOX' 474) #(916 'LOAD' 475) #(916 'LOCAL' 477) #(916 'LOCALE' 478) #(916 'LOCK' 479) #(916 'LOCKS' 480) #(916 'LOGFILE' 482) #(916 'LOGICAL' 483) #(916 'LONG' 484) #(916 'LOOP' 485) #(916 'LOW' 486) #(916 'LOWER' 487) #(916 'LPI' 488) #(916 'LT' 489) #(916 'LTRIM' 882) #(916 'MAIN' 491) #(916 'MAPPED' 492) #(916 'MAPPING' 493) #(916 'MARGIN' 494) #(916 'MARK' 495) #(916 'MASK' 496) #(916 'MATCH' 497) #(916 'MATCHCODE' 498) #(916 'MAX' 499) #(916 'MAXIMUM' 500) #(916 'MEDIUM' 501) #(916 'MEMBERS' 502) #(916 'MEMORY' 503) #(916 'MESH' 504) #(916 'MESSAGE' 505) #(916 'MESSAGES' 507) #(916 'MESSAGING' 508) #(916 'METHOD' 509) #(916 'METHODS' 510) #(916 'MIN' 511) #(916 'MMDDYY' 514) #(916 'MOD' 515) #(916 'MODE' 516) #(916 'MODIF' 517) #(916 'MODIFIER' 518) #(916 'MODIFY' 519) #(916 'MODULE' 520) #(916 'MOVE' 521) #(916 'MSSQLNT' 523) #(916 'MULTIPLY' 524) #(916 'NA' 526) #(916 'NAME' 527) #(916 'NAMETAB' 528) #(916 'NATIVE' 529) #(916 'NE' 530) #(916 'NESTED' 531) #(916 'NESTING' 532) #(916 'NEW' 533) #(916 'NEXT' 537) #(916 'NO' 538) #(916 'NODES' 550) #(916 'NOT' 553) #(916 'NP' 554) #(916 'NS' 555) #(916 'NULL' 556) #(916 'NUMBER' 557) #(916 'NUMBERING' 558) #(916 'NUMC' 559) #(916 'OBJECT' 561) #(916 'OBJECTS' 562) #(916 'OBJMGR' 563) #(916 'OBLIGATORY' 564) #(916 'OCCURENCE' 565) #(916 'OCCURENCES' 566) #(916 'OCCURRENCE' 567) #(916 'OCCURRENCES' 568) #(916 'OCCURS' 569) #(916 'OF' 570) #(916 'OFF' 571) #(916 'OFFSET' 572) #(916 'ON' 573) #(916 'ONE' 574) #(916 'ONLY' 575) #(916 'OPEN' 576) #(916 'OPTION' 577) #(916 'OPTIONAL' 578) #(916 'OPTIONS' 579) #(916 'OR' 580) #(916 'ORACLE' 581) #(916 'ORDER' 582) #(916 'OTHERS' 583) #(916 'OUT' 584) #(916 'OUTER' 585) #(916 'OUTPUT' 586) #(916 'OVERFLOW' 588) #(916 'OVERLAY' 589) #(916 'PACK' 590) #(916 'PACKAGE' 591) #(916 'PAD' 592) #(916 'PADDING' 593) #(916 'PAGE' 594) #(916 'PAGES' 595) #(916 'PARAMETER' 596) #(916 'PARAMETERS' 598) #(916 'PART' 599) #(916 'PARTIALLY' 600) #(916 'PCRE' 601) #(916 'PERCENTAGE' 602) #(916 'PERFORM' 603) #(916 'PERFORMING' 604) #(916 'PERMISSIONS' 605) #(916 'PLACES' 607) #(916 'POOL' 608) #(916 'POSITION' 609) #(916 'POS_HIGH' 610) #(916 'POS_LOW' 611) #(916 'PRAGMAS' 612) #(916 'PRECHECK' 613) #(916 'PRECOMPILED' 614) #(916 'PREFERRED' 615) #(916 'PRESERVING' 616) #(916 'PRIMARY' 617) #(916 'PRINT' 618) #(916 'PRIVATE' 620) #(916 'PRIVILEGED' 621) #(916 'PROCEDURE' 622) #(916 'PROGRAM' 623) #(916 'PROPERTY' 624) #(916 'PROTECTED' 625) #(916 'PROVIDE' 626) #(916 'PUBLIC' 627) #(916 'PUSH' 628) #(916 'PUSHBUTTON' 629) #(916 'PUT' 630) #(916 'QUEUEONLY' 632) #(916 'QUICKINFO' 633) #(916 'RADIOBUTTON' 634) #(916 'RAISE' 635) #(916 'RAISING' 636) #(916 'RANGE' 637) #(916 'RANGES' 638) #(916 'RAW' 639) #(916 'READ' 640) #(916 'RECEIVE' 642) #(916 'RECEIVED' 643) #(916 'RECEIVER' 644) #(916 'RECEIVING' 645) #(916 'REDEFINITION' 646) #(916 'REDUCE' 647) #(916 'REF' 648) #(916 'REFERENCE' 649) #(916 'REFRESH' 650) #(916 'REGEX' 651) #(916 'REJECT' 652) #(916 'RELATING' 653) #(916 'RENAMING' 654) #(916 'REPLACE' 655) #(916 'REPLACEMENT' 656) #(916 'REPLACING' 657) #(916 'REPORT' 658) #(916 'REPORTED' 659) #(916 'REQUEST' 660) #(916 'REQUESTED' 661) #(916 'REQUIRED' 662) #(916 'RESERVE' 663) #(916 'RESET' 664) #(916 'RESOLUTION' 665) #(916 'RESPECTING' 666) #(916 'RESPONSE' 667) #(916 'RESPONSES' 668) #(916 'RESULT' 669) #(916 'RESULTS' 670) #(916 'RESUMABLE' 671) #(916 'RESUME' 672) #(916 'RETRY' 673) #(916 'RETURN' 674) #(916 'RETURNCODE' 675) #(916 'RETURNING' 676) #(916 'RIGHT' 677) #(916 'RIGHTPLUS' 679) #(916 'RIGHTSPACE' 680) #(916 'RISK' 681) #(916 'ROLLBACK' 682) #(916 'ROUND' 683) #(916 'ROWS' 684) #(916 'RTRIM' 883) #(916 'RUN' 685) #(916 'SAP' 686) #(916 'SAVE' 688) #(916 'SAVING' 689) #(916 'SCALE_PRESERVING' 690) #(916 'SCALE_PRESERVING_SCIENTIFIC' 691) #(916 'SCAN' 692) #(916 'SCIENTIFIC' 693) #(916 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(916 'SCREEN' 695) #(916 'SCROLL' 696) #(916 'SCROLLING' 698) #(916 'SEARCH' 699) #(916 'SECONDARY' 700) #(916 'SECONDS' 701) #(916 'SECTION' 702) #(916 'SELECT' 703) #(916 'SELECTION' 705) #(916 'SELECTIONS' 710) #(916 'SEND' 711) #(916 'SEPARATE' 712) #(916 'SEPARATED' 713) #(916 'SESSION' 714) #(916 'SET' 715) #(916 'SHARED' 716) #(916 'SHIFT' 717) #(916 'SHORT' 718) #(916 'SHORTDUMP' 719) #(916 'SIGN' 721) #(916 'SIGN_AS_POSTFIX' 722) #(916 'SIMPLE' 723) #(916 'SIMULATION' 724) #(916 'SINGLE' 725) #(916 'SIZE' 726) #(916 'SKIP' 727) #(916 'SKIPPING' 728) #(916 'SMART' 729) #(916 'SOME' 730) #(916 'SORT' 731) #(916 'SORTABLE' 732) #(916 'SORTED' 733) #(916 'SOURCE' 734) #(916 'SPACE' 735) #(916 'SPECIFIED' 736) #(916 'SPLIT' 737) #(916 'SPOOL' 738) #(916 'SPOTS' 739) #(916 'SQL' 740) #(916 'SQLSCRIPT' 741) #(916 'STABLE' 742) #(916 'STAMP' 743) #(916 'STANDARD' 744) #(916 'STARTING' 746) #(916 'STATE' 747) #(916 'STATEMENT' 748) #(916 'STATEMENTS' 749) #(916 'STATIC' 750) #(916 'STATICS' 751) #(916 'STATUSINFO' 752) #(916 'STEP' 753) #(916 'STOP' 755) #(916 'STRUCTURE' 756) #(916 'STRUCTURES' 757) #(916 'STYLE' 758) #(916 'SUBKEY' 759) #(916 'SUBMATCHES' 760) #(916 'SUBMIT' 761) #(916 'SUBROUTINE' 762) #(916 'SUBSCREEN' 763) #(916 'SUBSTRING' 764) #(916 'SUBTRACT' 765) #(916 'SUFFIX' 767) #(916 'SUM' 768) #(916 'SUMMARY' 769) #(916 'SUPPLIED' 770) #(916 'SUPPLY' 771) #(916 'SUPPRESS' 772) #(916 'SWITCH' 773) #(916 'SYBASE' 774) #(916 'SYMBOL' 775) #(916 'T000' 779) #(916 'TAB' 780) #(916 'TABBED' 781) #(916 'TABLE' 782) #(916 'TABLES' 783) #(916 'TABLEVIEW' 784) #(916 'TABSTRIP' 785) #(916 'TARGET' 786) #(916 'TASK' 787) #(916 'TASKS' 788) #(916 'TEST' 789) #(916 'TESTING' 792) #(916 'TEXT' 793) #(916 'TEXTPOOL' 794) #(916 'THEN' 795) #(916 'THROW' 796) #(916 'TIME' 797) #(916 'TIMES' 798) #(916 'TIMESTAMP' 799) #(916 'TIMEZONE' 800) #(916 'TITLE' 801) #(916 'TITLEBAR' 802) #(916 'TO' 803) #(916 'TOKENIZATION' 804) #(916 'TOKENS' 805) #(916 'TRAILING' 810) #(916 'TRANSACTION' 811) #(916 'TRANSFER' 812) #(916 'TRANSFORMATION' 813) #(916 'TRANSLATE' 814) #(916 'TRANSPORTING' 815) #(916 'TRMAC' 816) #(916 'TRUNCATION' 817) #(916 'TRY' 818) #(916 'TYPE' 819) #(916 'TYPES' 822) #(916 'ULINE' 823) #(916 'UNASSIGN' 824) #(916 'UNDER' 825) #(916 'UNICODE' 826) #(916 'UNION' 827) #(916 'UNIQUE' 828) #(916 'UNIT' 829) #(916 'UNIX' 830) #(916 'UNPACK' 831) #(916 'UNTIL' 832) #(916 'UNWIND' 833) #(916 'UP' 834) #(916 'UPDATE' 835) #(916 'UPPER' 836) #(916 'USER' 837) #(916 'USING' 839) #(916 'UTCLONG' 840) #(916 'UUID' 884) #(916 'VALID' 842) #(916 'VALIDATE' 843) #(916 'VALUE' 844) #(916 'VALUES' 846) #(916 'VARY' 847) #(916 'VARYING' 848) #(916 'VERSION' 849) #(916 'VIA' 850) #(916 'VISIBLE' 851) #(916 'WAIT' 852) #(916 'WHEN' 853) #(916 'WHERE' 854) #(916 'WHILE' 855) #(916 'WIDTH' 856) #(916 'WINDOW' 857) #(916 'WINDOWS' 858) #(916 'WITH' 859) #(916 'WITHOUT' 862) #(916 'WORD' 863) #(916 'WORK' 864) #(916 'WORKSPACE' 865) #(916 'WRITE' 866) #(916 'WRITER' 867) #(916 'XML' 868) #(916 'XSD' 869) #(916 'XSDBOOL' 870) #(916 'YES' 871) #(916 'YYMMDD' 872) #(916 'ZERO' 874) #(916 'ZONE' 875) #(917 '%_FINAL' 2) #(917 '%_HINTS' 3) #(917 '%_PREDEFINED' 4) #(917 '**' 8) #(917 'ABS' 876) #(917 'ABSTRACT' 33) #(917 'ACCEPT' 34) #(917 'ACCEPTING' 35) #(917 'ACCESS' 36) #(917 'ACCORDING' 37) #(917 'ACTION' 38) #(917 'ACTIVATION' 39) #(917 'ACTUAL' 40) #(917 'ADABAS' 41) #(917 'ADD' 42) #(917 'ADJACENT' 44) #(917 'ALIAS' 45) #(917 'ALIASES' 46) #(917 'ALIGN' 47) #(917 'ALL' 48) #(917 'ALLOCATE' 49) #(917 'ALPHA' 50) #(917 'AMDP' 51) #(917 'ANALYSIS' 52) #(917 'ANALYZER' 53) #(917 'AND' 54) #(917 'ANY' 55) #(917 'APPEND' 56) #(917 'APPENDING' 57) #(917 'APPLICATION' 58) #(917 'ARCHIVE' 59) #(917 'AREA' 60) #(917 'ARITHMETIC' 61) #(917 'AS' 62) #(917 'AS400' 63) #(917 'ASCENDING' 64) #(917 'ASSERT' 65) #(917 'ASSIGN' 66) #(917 'ASSIGNED' 67) #(917 'ASSIGNING' 68) #(917 'ASSOCIATION' 69) #(917 'ASYNCHRONOUS' 70) #(917 'AT' 71) #(917 'ATTRIBUTES' 72) #(917 'AUGMENTING' 73) #(917 'AUTHORITY' 74) #(917 'AUTHORIZATION' 76) #(917 'AUTO' 77) #(917 'AVG' 78) #(917 'BACK' 79) #(917 'BACKGROUND' 80) #(917 'BACKWARD' 81) #(917 'BADI' 82) #(917 'BASE' 83) #(917 'BEFORE' 84) #(917 'BEGIN' 85) #(917 'BEHAVIOR' 86) #(917 'BETWEEN' 87) #(917 'BINARY' 88) #(917 'BIT' 89) #(917 'BLANK' 94) #(917 'BLANKS' 95) #(917 'BLOCK' 96) #(917 'BLOCKS' 97) #(917 'BOOLC' 98) #(917 'BOUND' 99) #(917 'BOUNDARIES' 100) #(917 'BOUNDS' 101) #(917 'BOXED' 102) #(917 'BREAK' 103) #(917 'BUFFER' 105) #(917 'BY' 106) #(917 'BYPASSING' 107) #(917 'BYTE' 108) #(917 'CA' 116) #(917 'CALL' 117) #(917 'CALLING' 118) #(917 'CASE' 119) #(917 'CAST' 120) #(917 'CASTING' 121) #(917 'CATCH' 122) #(917 'CDS' 123) #(917 'CEIL' 877) #(917 'CENTER' 124) #(917 'CENTERED' 125) #(917 'CHAIN' 126) #(917 'CHANGE' 129) #(917 'CHANGING' 130) #(917 'CHANNELS' 131) #(917 'CHAR' 132) #(917 'CHARACTER' 134) #(917 'CHECK' 135) #(917 'CHECKBOX' 136) #(917 'CID' 137) #(917 'CIRCULAR' 138) #(917 'CLASS' 139) #(917 'CLEANUP' 143) #(917 'CLEAR' 144) #(917 'CLIENT' 145) #(917 'CLIENTS' 146) #(917 'CLOCK' 147) #(917 'CLONE' 148) #(917 'CLOSE' 149) #(917 'CN' 150) #(917 'CO' 151) #(917 'COALESCE' 878) #(917 'CODE' 152) #(917 'COLLECT' 153) #(917 'COLOR' 154) #(917 'COLUMN' 155) #(917 'COLUMNS' 156) #(917 'COL_BACKGROUND' 157) #(917 'COL_GROUP' 158) #(917 'COL_HEADING' 159) #(917 'COL_KEY' 160) #(917 'COL_NEGATIVE' 161) #(917 'COL_NORMAL' 162) #(917 'COL_POSITIVE' 163) #(917 'COL_TOTAL' 164) #(917 'COMMENT' 165) #(917 'COMMENTS' 166) #(917 'COMMIT' 167) #(917 'COMMON' 168) #(917 'COMMUNICATION' 169) #(917 'COMPARING' 170) #(917 'COMPONENT' 171) #(917 'COMPONENTS' 172) #(917 'COMPRESSION' 173) #(917 'COMPUTE' 174) #(917 'CONCAT' 879) #(917 'CONCATENATE' 175) #(917 'CONCAT_WITH_SPACE' 880) #(917 'COND' 176) #(917 'CONDENSE' 177) #(917 'CONDITION' 178) #(917 'CONNECTION' 179) #(917 'CONSTANT' 180) #(917 'CONSTANTS' 181) #(917 'CONTEXT' 182) #(917 'CONTEXTS' 183) #(917 'CONTINUE' 184) #(917 'CONTROL' 185) #(917 'CONTROLS' 186) #(917 'CONV' 187) #(917 'CONVERSION' 188) #(917 'CONVERT' 189) #(917 'COPIES' 190) #(917 'COPY' 191) #(917 'CORRESPONDING' 192) #(917 'COUNT' 193) #(917 'COUNTRY' 194) #(917 'COVER' 195) #(917 'CP' 196) #(917 'CPI' 197) #(917 'CREATE' 198) #(917 'CRITICAL' 199) #(917 'CS' 200) #(917 'CURRENCY' 201) #(917 'CURRENT' 202) #(917 'CURSOR' 203) #(917 'DANGEROUS' 205) #(917 'DATA' 206) #(917 'DATABASE' 207) #(917 'DATAINFO' 208) #(917 'DATASET' 209) #(917 'DATE' 210) #(917 'DAYLIGHT' 211) #(917 'DB2' 212) #(917 'DB6' 213) #(917 'DDL' 216) #(917 'DDMMYY' 217) #(917 'DEALLOCATE' 218) #(917 'DEC' 219) #(917 'DECIMALS' 220) #(917 'DECLARATIONS' 221) #(917 'DEEP' 222) #(917 'DEFAULT' 223) #(917 'DEFERRED' 224) #(917 'DEFINE' 225) #(917 'DEFINITION' 226) #(917 'DELETE' 227) #(917 'DELETING' 228) #(917 'DEMAND' 229) #(917 'DEPARTMENT' 230) #(917 'DESCENDING' 231) #(917 'DESCRIBE' 232) #(917 'DESTINATION' 233) #(917 'DETAIL' 234) #(917 'DETERMINATION' 235) #(917 'DETERMINE' 236) #(917 'DIALOG' 237) #(917 'DID' 238) #(917 'DIRECTORY' 239) #(917 'DISCARDING' 240) #(917 'DISPLAY' 241) #(917 'DISTANCE' 243) #(917 'DISTINCT' 244) #(917 'DIV' 245) #(917 'DIVIDE' 246) #(917 'DO' 247) #(917 'DUMMY' 248) #(917 'DUPLICATE' 249) #(917 'DUPLICATES' 250) #(917 'DURATION' 251) #(917 'DURING' 252) #(917 'DYNPRO' 253) #(917 'EARLY' 254) #(917 'EDIT' 255) #(917 'ELSE' 257) #(917 'ELSEIF' 258) #(917 'EMPTY' 259) #(917 'ENABLED' 260) #(917 'ENABLING' 261) #(917 'ENCODING' 262) #(917 'END' 263) #(917 'ENDAT' 270) #(917 'ENDCASE' 271) #(917 'ENDCATCH' 272) #(917 'ENDCHAIN' 273) #(917 'ENDCLASS' 274) #(917 'ENDDO' 275) #(917 'ENDENHANCEMENT' 276) #(917 'ENDEXEC' 277) #(917 'ENDFORM' 278) #(917 'ENDFUNCTION' 279) #(917 'ENDIAN' 280) #(917 'ENDIF' 281) #(917 'ENDING' 282) #(917 'ENDINTERFACE' 283) #(917 'ENDLOOP' 284) #(917 'ENDMETHOD' 285) #(917 'ENDMODULE' 286) #(917 'ENDON' 287) #(917 'ENDPROVIDE' 288) #(917 'ENDSELECT' 289) #(917 'ENDTRY' 290) #(917 'ENDWHILE' 291) #(917 'ENDWITH' 292) #(917 'ENGINEERING' 293) #(917 'ENHANCEMENT' 294) #(917 'ENHANCEMENTS' 297) #(917 'ENTITIES' 298) #(917 'ENTITY' 299) #(917 'ENTRIES' 300) #(917 'ENTRY' 301) #(917 'ENUM' 302) #(917 'ENVIRONMENT' 303) #(917 'EQ' 304) #(917 'EQUIV' 305) #(917 'ERRORS' 306) #(917 'ESCAPE' 307) #(917 'ESCAPING' 308) #(917 'EVENT' 309) #(917 'EVENTS' 310) #(917 'EXACT' 311) #(917 'EXCEPT' 312) #(917 'EXCEPTION' 313) #(917 'EXCEPTIONS' 315) #(917 'EXCLUDE' 316) #(917 'EXCLUDING' 317) #(917 'EXEC' 318) #(917 'EXECUTE' 319) #(917 'EXISTS' 320) #(917 'EXIT' 321) #(917 'EXPANDING' 323) #(917 'EXPIRATION' 324) #(917 'EXPLICIT' 325) #(917 'EXPONENT' 326) #(917 'EXPORT' 327) #(917 'EXPORTING' 328) #(917 'EXTENDED' 329) #(917 'EXTENSION' 330) #(917 'EXTRACT' 331) #(917 'FAIL' 332) #(917 'FAILED' 333) #(917 'FEATURES' 334) #(917 'FETCH' 335) #(917 'FIELD' 336) #(917 'FIELDS' 340) #(917 'FILE' 341) #(917 'FILL' 342) #(917 'FILTER' 343) #(917 'FILTERS' 344) #(917 'FINAL' 345) #(917 'FIND' 346) #(917 'FIRST' 347) #(917 'FLOOR' 881) #(917 'FLTP' 350) #(917 'FLUSH' 351) #(917 'FONT' 352) #(917 'FOR' 353) #(917 'FORM' 354) #(917 'FORMAT' 355) #(917 'FORWARD' 356) #(917 'FOUND' 357) #(917 'FRAME' 358) #(917 'FRAMES' 359) #(917 'FREE' 360) #(917 'FRIENDS' 361) #(917 'FROM' 362) #(917 'FULL' 363) #(917 'FUNCTION' 364) #(917 'FURTHER' 366) #(917 'GE' 367) #(917 'GENERATE' 368) #(917 'GET' 369) #(917 'GIVING' 370) #(917 'GLOBAL' 371) #(917 'GRAPH' 372) #(917 'GROUP' 373) #(917 'GROUPS' 374) #(917 'GT' 375) #(917 'HANDLE' 376) #(917 'HANDLER' 377) #(917 'HARMLESS' 378) #(917 'HASHED' 379) #(917 'HAVING' 380) #(917 'HDB' 381) #(917 'HEADER' 382) #(917 'HEADERS' 383) #(917 'HEADING' 384) #(917 'HIDE' 387) #(917 'HIERARCHY' 388) #(917 'HIGH' 389) #(917 'HINT' 390) #(917 'HOLD' 391) #(917 'HOTSPOT' 392) #(917 'ICON' 393) #(917 'ID' 394) #(917 'IDENTIFICATION' 395) #(917 'IDENTIFIER' 396) #(917 'IDS' 397) #(917 'IF' 398) #(917 'IGNORE' 399) #(917 'IGNORING' 400) #(917 'IMMEDIATELY' 401) #(917 'IMPLEMENTATION' 402) #(917 'IMPLEMENTED' 403) #(917 'IMPLICIT' 404) #(917 'IMPORT' 405) #(917 'IMPORTING' 406) #(917 'IN' 407) #(917 'INACTIVE' 408) #(917 'INCL' 409) #(917 'INCLUDE' 410) #(917 'INCLUDES' 411) #(917 'INCREMENT' 412) #(917 'INDEX' 413) #(917 'INFORMIX' 415) #(917 'INFOTYPES' 416) #(917 'INHERITING' 417) #(917 'INIT' 418) #(917 'INITIAL' 419) #(917 'INITIALIZATION' 420) #(917 'INNER' 421) #(917 'INPUT' 422) #(917 'INSERT' 423) #(917 'INSTANCE' 424) #(917 'INSTANCES' 425) #(917 'INT2' 426) #(917 'INT4' 427) #(917 'INT8' 428) #(917 'INTENSIFIED' 429) #(917 'INTERFACE' 430) #(917 'INTERFACES' 431) #(917 'INTERNAL' 432) #(917 'INTERVALS' 433) #(917 'INTO' 434) #(917 'INVERSE' 435) #(917 'IS' 437) #(917 'ISO' 438) #(917 'JOB' 439) #(917 'JOIN' 440) #(917 'KEEP' 441) #(917 'KEEPING' 442) #(917 'KERNEL' 443) #(917 'KEY' 444) #(917 'KEYS' 445) #(917 'KEYWORDS' 446) #(917 'KIND' 447) #(917 'LANGUAGE' 448) #(917 'LAST' 449) #(917 'LATE' 450) #(917 'LAYOUT' 451) #(917 'LE' 452) #(917 'LEADING' 453) #(917 'LEAVE' 454) #(917 'LEFT' 455) #(917 'LEFTPLUS' 457) #(917 'LEFTSPACE' 458) #(917 'LEGACY' 459) #(917 'LENGTH' 460) #(917 'LET' 461) #(917 'LEVEL' 462) #(917 'LEVELS' 463) #(917 'LIKE' 464) #(917 'LINE' 465) #(917 'LINEFEED' 469) #(917 'LINES' 470) #(917 'LINK' 471) #(917 'LIST' 472) #(917 'LISTBOX' 474) #(917 'LOAD' 475) #(917 'LOCAL' 477) #(917 'LOCALE' 478) #(917 'LOCK' 479) #(917 'LOCKS' 480) #(917 'LOGFILE' 482) #(917 'LOGICAL' 483) #(917 'LONG' 484) #(917 'LOOP' 485) #(917 'LOW' 486) #(917 'LOWER' 487) #(917 'LPI' 488) #(917 'LT' 489) #(917 'LTRIM' 882) #(917 'MAIN' 491) #(917 'MAPPED' 492) #(917 'MAPPING' 493) #(917 'MARGIN' 494) #(917 'MARK' 495) #(917 'MASK' 496) #(917 'MATCH' 497) #(917 'MATCHCODE' 498) #(917 'MAX' 499) #(917 'MAXIMUM' 500) #(917 'MEDIUM' 501) #(917 'MEMBERS' 502) #(917 'MEMORY' 503) #(917 'MESH' 504) #(917 'MESSAGE' 505) #(917 'MESSAGES' 507) #(917 'MESSAGING' 508) #(917 'METHOD' 509) #(917 'METHODS' 510) #(917 'MIN' 511) #(917 'MMDDYY' 514) #(917 'MOD' 515) #(917 'MODE' 516) #(917 'MODIF' 517) #(917 'MODIFIER' 518) #(917 'MODIFY' 519) #(917 'MODULE' 520) #(917 'MOVE' 521) #(917 'MSSQLNT' 523) #(917 'MULTIPLY' 524) #(917 'NA' 526) #(917 'NAME' 527) #(917 'NAMETAB' 528) #(917 'NATIVE' 529) #(917 'NE' 530) #(917 'NESTED' 531) #(917 'NESTING' 532) #(917 'NEW' 533) #(917 'NEXT' 537) #(917 'NO' 538) #(917 'NODES' 550) #(917 'NOT' 553) #(917 'NP' 554) #(917 'NS' 555) #(917 'NULL' 556) #(917 'NUMBER' 557) #(917 'NUMBERING' 558) #(917 'NUMC' 559) #(917 'OBJECT' 561) #(917 'OBJECTS' 562) #(917 'OBJMGR' 563) #(917 'OBLIGATORY' 564) #(917 'OCCURENCE' 565) #(917 'OCCURENCES' 566) #(917 'OCCURRENCE' 567) #(917 'OCCURRENCES' 568) #(917 'OCCURS' 569) #(917 'OF' 570) #(917 'OFF' 571) #(917 'OFFSET' 572) #(917 'ON' 573) #(917 'ONE' 574) #(917 'ONLY' 575) #(917 'OPEN' 576) #(917 'OPTION' 577) #(917 'OPTIONAL' 578) #(917 'OPTIONS' 579) #(917 'OR' 580) #(917 'ORACLE' 581) #(917 'ORDER' 582) #(917 'OTHERS' 583) #(917 'OUT' 584) #(917 'OUTER' 585) #(917 'OUTPUT' 586) #(917 'OVERFLOW' 588) #(917 'OVERLAY' 589) #(917 'PACK' 590) #(917 'PACKAGE' 591) #(917 'PAD' 592) #(917 'PADDING' 593) #(917 'PAGE' 594) #(917 'PAGES' 595) #(917 'PARAMETER' 596) #(917 'PARAMETERS' 598) #(917 'PART' 599) #(917 'PARTIALLY' 600) #(917 'PCRE' 601) #(917 'PERCENTAGE' 602) #(917 'PERFORM' 603) #(917 'PERFORMING' 604) #(917 'PERMISSIONS' 605) #(917 'PLACES' 607) #(917 'POOL' 608) #(917 'POSITION' 609) #(917 'POS_HIGH' 610) #(917 'POS_LOW' 611) #(917 'PRAGMAS' 612) #(917 'PRECHECK' 613) #(917 'PRECOMPILED' 614) #(917 'PREFERRED' 615) #(917 'PRESERVING' 616) #(917 'PRIMARY' 617) #(917 'PRINT' 618) #(917 'PRIVATE' 620) #(917 'PRIVILEGED' 621) #(917 'PROCEDURE' 622) #(917 'PROGRAM' 623) #(917 'PROPERTY' 624) #(917 'PROTECTED' 625) #(917 'PROVIDE' 626) #(917 'PUBLIC' 627) #(917 'PUSH' 628) #(917 'PUSHBUTTON' 629) #(917 'PUT' 630) #(917 'QUEUEONLY' 632) #(917 'QUICKINFO' 633) #(917 'RADIOBUTTON' 634) #(917 'RAISE' 635) #(917 'RAISING' 636) #(917 'RANGE' 637) #(917 'RANGES' 638) #(917 'RAW' 639) #(917 'READ' 640) #(917 'RECEIVE' 642) #(917 'RECEIVED' 643) #(917 'RECEIVER' 644) #(917 'RECEIVING' 645) #(917 'REDEFINITION' 646) #(917 'REDUCE' 647) #(917 'REF' 648) #(917 'REFERENCE' 649) #(917 'REFRESH' 650) #(917 'REGEX' 651) #(917 'REJECT' 652) #(917 'RELATING' 653) #(917 'RENAMING' 654) #(917 'REPLACE' 655) #(917 'REPLACEMENT' 656) #(917 'REPLACING' 657) #(917 'REPORT' 658) #(917 'REPORTED' 659) #(917 'REQUEST' 660) #(917 'REQUESTED' 661) #(917 'REQUIRED' 662) #(917 'RESERVE' 663) #(917 'RESET' 664) #(917 'RESOLUTION' 665) #(917 'RESPECTING' 666) #(917 'RESPONSE' 667) #(917 'RESPONSES' 668) #(917 'RESULT' 669) #(917 'RESULTS' 670) #(917 'RESUMABLE' 671) #(917 'RESUME' 672) #(917 'RETRY' 673) #(917 'RETURN' 674) #(917 'RETURNCODE' 675) #(917 'RETURNING' 676) #(917 'RIGHT' 677) #(917 'RIGHTPLUS' 679) #(917 'RIGHTSPACE' 680) #(917 'RISK' 681) #(917 'ROLLBACK' 682) #(917 'ROUND' 683) #(917 'ROWS' 684) #(917 'RTRIM' 883) #(917 'RUN' 685) #(917 'SAP' 686) #(917 'SAVE' 688) #(917 'SAVING' 689) #(917 'SCALE_PRESERVING' 690) #(917 'SCALE_PRESERVING_SCIENTIFIC' 691) #(917 'SCAN' 692) #(917 'SCIENTIFIC' 693) #(917 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(917 'SCREEN' 695) #(917 'SCROLL' 696) #(917 'SCROLLING' 698) #(917 'SEARCH' 699) #(917 'SECONDARY' 700) #(917 'SECONDS' 701) #(917 'SECTION' 702) #(917 'SELECT' 703) #(917 'SELECTION' 705) #(917 'SELECTIONS' 710) #(917 'SEND' 711) #(917 'SEPARATE' 712) #(917 'SEPARATED' 713) #(917 'SESSION' 714) #(917 'SET' 715) #(917 'SHARED' 716) #(917 'SHIFT' 717) #(917 'SHORT' 718) #(917 'SHORTDUMP' 719) #(917 'SIGN' 721) #(917 'SIGN_AS_POSTFIX' 722) #(917 'SIMPLE' 723) #(917 'SIMULATION' 724) #(917 'SINGLE' 725) #(917 'SIZE' 726) #(917 'SKIP' 727) #(917 'SKIPPING' 728) #(917 'SMART' 729) #(917 'SOME' 730) #(917 'SORT' 731) #(917 'SORTABLE' 732) #(917 'SORTED' 733) #(917 'SOURCE' 734) #(917 'SPACE' 735) #(917 'SPECIFIED' 736) #(917 'SPLIT' 737) #(917 'SPOOL' 738) #(917 'SPOTS' 739) #(917 'SQL' 740) #(917 'SQLSCRIPT' 741) #(917 'STABLE' 742) #(917 'STAMP' 743) #(917 'STANDARD' 744) #(917 'STARTING' 746) #(917 'STATE' 747) #(917 'STATEMENT' 748) #(917 'STATEMENTS' 749) #(917 'STATIC' 750) #(917 'STATICS' 751) #(917 'STATUSINFO' 752) #(917 'STEP' 753) #(917 'STOP' 755) #(917 'STRUCTURE' 756) #(917 'STRUCTURES' 757) #(917 'STYLE' 758) #(917 'SUBKEY' 759) #(917 'SUBMATCHES' 760) #(917 'SUBMIT' 761) #(917 'SUBROUTINE' 762) #(917 'SUBSCREEN' 763) #(917 'SUBSTRING' 764) #(917 'SUBTRACT' 765) #(917 'SUFFIX' 767) #(917 'SUM' 768) #(917 'SUMMARY' 769) #(917 'SUPPLIED' 770) #(917 'SUPPLY' 771) #(917 'SUPPRESS' 772) #(917 'SWITCH' 773) #(917 'SYBASE' 774) #(917 'SYMBOL' 775) #(917 'T000' 779) #(917 'TAB' 780) #(917 'TABBED' 781) #(917 'TABLE' 782) #(917 'TABLES' 783) #(917 'TABLEVIEW' 784) #(917 'TABSTRIP' 785) #(917 'TARGET' 786) #(917 'TASK' 787) #(917 'TASKS' 788) #(917 'TEST' 789) #(917 'TESTING' 792) #(917 'TEXT' 793) #(917 'TEXTPOOL' 794) #(917 'THEN' 795) #(917 'THROW' 796) #(917 'TIME' 797) #(917 'TIMES' 798) #(917 'TIMESTAMP' 799) #(917 'TIMEZONE' 800) #(917 'TITLE' 801) #(917 'TITLEBAR' 802) #(917 'TO' 803) #(917 'TOKENIZATION' 804) #(917 'TOKENS' 805) #(917 'TRAILING' 810) #(917 'TRANSACTION' 811) #(917 'TRANSFER' 812) #(917 'TRANSFORMATION' 813) #(917 'TRANSLATE' 814) #(917 'TRANSPORTING' 815) #(917 'TRMAC' 816) #(917 'TRUNCATION' 817) #(917 'TRY' 818) #(917 'TYPE' 819) #(917 'TYPES' 822) #(917 'ULINE' 823) #(917 'UNASSIGN' 824) #(917 'UNDER' 825) #(917 'UNICODE' 826) #(917 'UNION' 827) #(917 'UNIQUE' 828) #(917 'UNIT' 829) #(917 'UNIX' 830) #(917 'UNPACK' 831) #(917 'UNTIL' 832) #(917 'UNWIND' 833) #(917 'UP' 834) #(917 'UPDATE' 835) #(917 'UPPER' 836) #(917 'USER' 837) #(917 'USING' 839) #(917 'UTCLONG' 840) #(917 'UUID' 884) #(917 'VALID' 842) #(917 'VALIDATE' 843) #(917 'VALUE' 844) #(917 'VALUES' 846) #(917 'VARY' 847) #(917 'VARYING' 848) #(917 'VERSION' 849) #(917 'VIA' 850) #(917 'VISIBLE' 851) #(917 'WAIT' 852) #(917 'WHEN' 853) #(917 'WHERE' 854) #(917 'WHILE' 855) #(917 'WIDTH' 856) #(917 'WINDOW' 857) #(917 'WINDOWS' 858) #(917 'WITH' 859) #(917 'WITHOUT' 862) #(917 'WORD' 863) #(917 'WORK' 864) #(917 'WORKSPACE' 865) #(917 'WRITE' 866) #(917 'WRITER' 867) #(917 'XML' 868) #(917 'XSD' 869) #(917 'XSDBOOL' 870) #(917 'YES' 871) #(917 'YYMMDD' 872) #(917 'ZERO' 874) #(917 'ZONE' 875) #(956 '%_FINAL' 2) #(956 '%_HINTS' 3) #(956 '%_PREDEFINED' 4) #(956 '&&' 6) #(956 '**' 8) #(956 '?TO' 31) #(956 'ABS' 876) #(956 'ABSTRACT' 33) #(956 'ACCEPT' 34) #(956 'ACCEPTING' 35) #(956 'ACCESS' 36) #(956 'ACCORDING' 37) #(956 'ACTION' 38) #(956 'ACTIVATION' 39) #(956 'ACTUAL' 40) #(956 'ADABAS' 41) #(956 'ADD' 42) #(956 'ADJACENT' 44) #(956 'ALIAS' 45) #(956 'ALIASES' 46) #(956 'ALIGN' 47) #(956 'ALL' 48) #(956 'ALLOCATE' 49) #(956 'ALPHA' 50) #(956 'AMDP' 51) #(956 'ANALYSIS' 52) #(956 'ANALYZER' 53) #(956 'AND' 54) #(956 'ANY' 55) #(956 'APPEND' 56) #(956 'APPENDING' 57) #(956 'APPLICATION' 58) #(956 'ARCHIVE' 59) #(956 'AREA' 60) #(956 'ARITHMETIC' 61) #(956 'AS' 62) #(956 'AS400' 63) #(956 'ASCENDING' 64) #(956 'ASSERT' 65) #(956 'ASSIGN' 66) #(956 'ASSIGNED' 67) #(956 'ASSIGNING' 68) #(956 'ASSOCIATION' 69) #(956 'ASYNCHRONOUS' 70) #(956 'AT' 71) #(956 'ATTRIBUTES' 72) #(956 'AUGMENTING' 73) #(956 'AUTHORITY' 74) #(956 'AUTHORIZATION' 76) #(956 'AUTO' 77) #(956 'AVG' 78) #(956 'BACK' 79) #(956 'BACKGROUND' 80) #(956 'BACKWARD' 81) #(956 'BADI' 82) #(956 'BASE' 83) #(956 'BEFORE' 84) #(956 'BEGIN' 85) #(956 'BEHAVIOR' 86) #(956 'BETWEEN' 87) #(956 'BINARY' 88) #(956 'BIT' 89) #(956 'BLANK' 94) #(956 'BLANKS' 95) #(956 'BLOCK' 96) #(956 'BLOCKS' 97) #(956 'BOOLC' 98) #(956 'BOUND' 99) #(956 'BOUNDARIES' 100) #(956 'BOUNDS' 101) #(956 'BOXED' 102) #(956 'BREAK' 103) #(956 'BUFFER' 105) #(956 'BY' 106) #(956 'BYPASSING' 107) #(956 'BYTE' 108) #(956 'CA' 116) #(956 'CALL' 117) #(956 'CALLING' 118) #(956 'CASE' 119) #(956 'CAST' 120) #(956 'CASTING' 121) #(956 'CATCH' 122) #(956 'CDS' 123) #(956 'CEIL' 877) #(956 'CENTER' 124) #(956 'CENTERED' 125) #(956 'CHAIN' 126) #(956 'CHANGE' 129) #(956 'CHANGING' 130) #(956 'CHANNELS' 131) #(956 'CHAR' 132) #(956 'CHARACTER' 134) #(956 'CHECK' 135) #(956 'CHECKBOX' 136) #(956 'CID' 137) #(956 'CIRCULAR' 138) #(956 'CLASS' 139) #(956 'CLEANUP' 143) #(956 'CLEAR' 144) #(956 'CLIENT' 145) #(956 'CLIENTS' 146) #(956 'CLOCK' 147) #(956 'CLONE' 148) #(956 'CLOSE' 149) #(956 'CN' 150) #(956 'CO' 151) #(956 'COALESCE' 878) #(956 'CODE' 152) #(956 'COLLECT' 153) #(956 'COLOR' 154) #(956 'COLUMN' 155) #(956 'COLUMNS' 156) #(956 'COL_BACKGROUND' 157) #(956 'COL_GROUP' 158) #(956 'COL_HEADING' 159) #(956 'COL_KEY' 160) #(956 'COL_NEGATIVE' 161) #(956 'COL_NORMAL' 162) #(956 'COL_POSITIVE' 163) #(956 'COL_TOTAL' 164) #(956 'COMMENT' 165) #(956 'COMMENTS' 166) #(956 'COMMIT' 167) #(956 'COMMON' 168) #(956 'COMMUNICATION' 169) #(956 'COMPARING' 170) #(956 'COMPONENT' 171) #(956 'COMPONENTS' 172) #(956 'COMPRESSION' 173) #(956 'COMPUTE' 174) #(956 'CONCAT' 879) #(956 'CONCATENATE' 175) #(956 'CONCAT_WITH_SPACE' 880) #(956 'COND' 176) #(956 'CONDENSE' 177) #(956 'CONDITION' 178) #(956 'CONNECTION' 179) #(956 'CONSTANT' 180) #(956 'CONSTANTS' 181) #(956 'CONTEXT' 182) #(956 'CONTEXTS' 183) #(956 'CONTINUE' 184) #(956 'CONTROL' 185) #(956 'CONTROLS' 186) #(956 'CONV' 187) #(956 'CONVERSION' 188) #(956 'CONVERT' 189) #(956 'COPIES' 190) #(956 'COPY' 191) #(956 'CORRESPONDING' 192) #(956 'COUNT' 193) #(956 'COUNTRY' 194) #(956 'COVER' 195) #(956 'CP' 196) #(956 'CPI' 197) #(956 'CREATE' 198) #(956 'CRITICAL' 199) #(956 'CS' 200) #(956 'CURRENCY' 201) #(956 'CURRENT' 202) #(956 'CURSOR' 203) #(956 'DANGEROUS' 205) #(956 'DATA' 206) #(956 'DATABASE' 207) #(956 'DATAINFO' 208) #(956 'DATASET' 209) #(956 'DATE' 210) #(956 'DAYLIGHT' 211) #(956 'DB2' 212) #(956 'DB6' 213) #(956 'DDL' 216) #(956 'DDMMYY' 217) #(956 'DEALLOCATE' 218) #(956 'DEC' 219) #(956 'DECIMALS' 220) #(956 'DECLARATIONS' 221) #(956 'DEEP' 222) #(956 'DEFAULT' 223) #(956 'DEFERRED' 224) #(956 'DEFINE' 225) #(956 'DEFINITION' 226) #(956 'DELETE' 227) #(956 'DELETING' 228) #(956 'DEMAND' 229) #(956 'DEPARTMENT' 230) #(956 'DESCENDING' 231) #(956 'DESCRIBE' 232) #(956 'DESTINATION' 233) #(956 'DETAIL' 234) #(956 'DETERMINATION' 235) #(956 'DETERMINE' 236) #(956 'DIALOG' 237) #(956 'DID' 238) #(956 'DIRECTORY' 239) #(956 'DISCARDING' 240) #(956 'DISPLAY' 241) #(956 'DISTANCE' 243) #(956 'DISTINCT' 244) #(956 'DIV' 245) #(956 'DIVIDE' 246) #(956 'DO' 247) #(956 'DUMMY' 248) #(956 'DUPLICATE' 249) #(956 'DUPLICATES' 250) #(956 'DURATION' 251) #(956 'DURING' 252) #(956 'DYNPRO' 253) #(956 'EARLY' 254) #(956 'EDIT' 255) #(956 'ELSE' 257) #(956 'ELSEIF' 258) #(956 'EMPTY' 259) #(956 'ENABLED' 260) #(956 'ENABLING' 261) #(956 'ENCODING' 262) #(956 'END' 263) #(956 'ENDAT' 270) #(956 'ENDCASE' 271) #(956 'ENDCATCH' 272) #(956 'ENDCHAIN' 273) #(956 'ENDCLASS' 274) #(956 'ENDDO' 275) #(956 'ENDENHANCEMENT' 276) #(956 'ENDEXEC' 277) #(956 'ENDFORM' 278) #(956 'ENDFUNCTION' 279) #(956 'ENDIAN' 280) #(956 'ENDIF' 281) #(956 'ENDING' 282) #(956 'ENDINTERFACE' 283) #(956 'ENDLOOP' 284) #(956 'ENDMETHOD' 285) #(956 'ENDMODULE' 286) #(956 'ENDON' 287) #(956 'ENDPROVIDE' 288) #(956 'ENDSELECT' 289) #(956 'ENDTRY' 290) #(956 'ENDWHILE' 291) #(956 'ENDWITH' 292) #(956 'ENGINEERING' 293) #(956 'ENHANCEMENT' 294) #(956 'ENHANCEMENTS' 297) #(956 'ENTITIES' 298) #(956 'ENTITY' 299) #(956 'ENTRIES' 300) #(956 'ENTRY' 301) #(956 'ENUM' 302) #(956 'ENVIRONMENT' 303) #(956 'EQ' 304) #(956 'EQUIV' 305) #(956 'ERRORS' 306) #(956 'ESCAPE' 307) #(956 'ESCAPING' 308) #(956 'EVENT' 309) #(956 'EVENTS' 310) #(956 'EXACT' 311) #(956 'EXCEPT' 312) #(956 'EXCEPTION' 313) #(956 'EXCEPTIONS' 315) #(956 'EXCLUDE' 316) #(956 'EXCLUDING' 317) #(956 'EXEC' 318) #(956 'EXECUTE' 319) #(956 'EXISTS' 320) #(956 'EXIT' 321) #(956 'EXPANDING' 323) #(956 'EXPIRATION' 324) #(956 'EXPLICIT' 325) #(956 'EXPONENT' 326) #(956 'EXPORT' 327) #(956 'EXPORTING' 328) #(956 'EXTENDED' 329) #(956 'EXTENSION' 330) #(956 'EXTRACT' 331) #(956 'FAIL' 332) #(956 'FAILED' 333) #(956 'FEATURES' 334) #(956 'FETCH' 335) #(956 'FIELD' 336) #(956 'FIELDS' 340) #(956 'FILE' 341) #(956 'FILL' 342) #(956 'FILTER' 343) #(956 'FILTERS' 344) #(956 'FINAL' 345) #(956 'FIND' 346) #(956 'FIRST' 347) #(956 'FLOOR' 881) #(956 'FLTP' 350) #(956 'FLUSH' 351) #(956 'FONT' 352) #(956 'FOR' 353) #(956 'FORM' 354) #(956 'FORMAT' 355) #(956 'FORWARD' 356) #(956 'FOUND' 357) #(956 'FRAME' 358) #(956 'FRAMES' 359) #(956 'FREE' 360) #(956 'FRIENDS' 361) #(956 'FROM' 362) #(956 'FULL' 363) #(956 'FUNCTION' 364) #(956 'FURTHER' 366) #(956 'GE' 367) #(956 'GENERATE' 368) #(956 'GET' 369) #(956 'GIVING' 370) #(956 'GLOBAL' 371) #(956 'GRAPH' 372) #(956 'GROUP' 373) #(956 'GROUPS' 374) #(956 'GT' 375) #(956 'HANDLE' 376) #(956 'HANDLER' 377) #(956 'HARMLESS' 378) #(956 'HASHED' 379) #(956 'HAVING' 380) #(956 'HDB' 381) #(956 'HEADER' 382) #(956 'HEADERS' 383) #(956 'HEADING' 384) #(956 'HIDE' 387) #(956 'HIERARCHY' 388) #(956 'HIGH' 389) #(956 'HINT' 390) #(956 'HOLD' 391) #(956 'HOTSPOT' 392) #(956 'ICON' 393) #(956 'ID' 394) #(956 'IDENTIFICATION' 395) #(956 'IDENTIFIER' 396) #(956 'IDS' 397) #(956 'IF' 398) #(956 'IGNORE' 399) #(956 'IGNORING' 400) #(956 'IMMEDIATELY' 401) #(956 'IMPLEMENTATION' 402) #(956 'IMPLEMENTED' 403) #(956 'IMPLICIT' 404) #(956 'IMPORT' 405) #(956 'IMPORTING' 406) #(956 'IN' 407) #(956 'INACTIVE' 408) #(956 'INCL' 409) #(956 'INCLUDE' 410) #(956 'INCLUDES' 411) #(956 'INCREMENT' 412) #(956 'INDEX' 413) #(956 'INFORMIX' 415) #(956 'INFOTYPES' 416) #(956 'INHERITING' 417) #(956 'INIT' 418) #(956 'INITIAL' 419) #(956 'INITIALIZATION' 420) #(956 'INNER' 421) #(956 'INPUT' 422) #(956 'INSERT' 423) #(956 'INSTANCE' 424) #(956 'INSTANCES' 425) #(956 'INT2' 426) #(956 'INT4' 427) #(956 'INT8' 428) #(956 'INTENSIFIED' 429) #(956 'INTERFACE' 430) #(956 'INTERFACES' 431) #(956 'INTERNAL' 432) #(956 'INTERVALS' 433) #(956 'INTO' 434) #(956 'INVERSE' 435) #(956 'IS' 437) #(956 'ISO' 438) #(956 'JOB' 439) #(956 'JOIN' 440) #(956 'KEEP' 441) #(956 'KEEPING' 442) #(956 'KERNEL' 443) #(956 'KEY' 444) #(956 'KEYS' 445) #(956 'KEYWORDS' 446) #(956 'KIND' 447) #(956 'LANGUAGE' 448) #(956 'LAST' 449) #(956 'LATE' 450) #(956 'LAYOUT' 451) #(956 'LE' 452) #(956 'LEADING' 453) #(956 'LEAVE' 454) #(956 'LEFT' 455) #(956 'LEFTPLUS' 457) #(956 'LEFTSPACE' 458) #(956 'LEGACY' 459) #(956 'LENGTH' 460) #(956 'LET' 461) #(956 'LEVEL' 462) #(956 'LEVELS' 463) #(956 'LIKE' 464) #(956 'LINE' 465) #(956 'LINEFEED' 469) #(956 'LINES' 470) #(956 'LINK' 471) #(956 'LIST' 472) #(956 'LISTBOX' 474) #(956 'LOAD' 475) #(956 'LOCAL' 477) #(956 'LOCALE' 478) #(956 'LOCK' 479) #(956 'LOCKS' 480) #(956 'LOGFILE' 482) #(956 'LOGICAL' 483) #(956 'LONG' 484) #(956 'LOOP' 485) #(956 'LOW' 486) #(956 'LOWER' 487) #(956 'LPI' 488) #(956 'LT' 489) #(956 'LTRIM' 882) #(956 'MAIN' 491) #(956 'MAPPED' 492) #(956 'MAPPING' 493) #(956 'MARGIN' 494) #(956 'MARK' 495) #(956 'MASK' 496) #(956 'MATCH' 497) #(956 'MATCHCODE' 498) #(956 'MAX' 499) #(956 'MAXIMUM' 500) #(956 'MEDIUM' 501) #(956 'MEMBERS' 502) #(956 'MEMORY' 503) #(956 'MESH' 504) #(956 'MESSAGE' 505) #(956 'MESSAGES' 507) #(956 'MESSAGING' 508) #(956 'METHOD' 509) #(956 'METHODS' 510) #(956 'MIN' 511) #(956 'MMDDYY' 514) #(956 'MOD' 515) #(956 'MODE' 516) #(956 'MODIF' 517) #(956 'MODIFIER' 518) #(956 'MODIFY' 519) #(956 'MODULE' 520) #(956 'MOVE' 521) #(956 'MSSQLNT' 523) #(956 'MULTIPLY' 524) #(956 'NA' 526) #(956 'NAME' 527) #(956 'NAMETAB' 528) #(956 'NATIVE' 529) #(956 'NE' 530) #(956 'NESTED' 531) #(956 'NESTING' 532) #(956 'NEW' 533) #(956 'NEXT' 537) #(956 'NO' 538) #(956 'NODES' 550) #(956 'NOT' 553) #(956 'NP' 554) #(956 'NS' 555) #(956 'NULL' 556) #(956 'NUMBER' 557) #(956 'NUMBERING' 558) #(956 'NUMC' 559) #(956 'OBJECT' 561) #(956 'OBJECTS' 562) #(956 'OBJMGR' 563) #(956 'OBLIGATORY' 564) #(956 'OCCURENCE' 565) #(956 'OCCURENCES' 566) #(956 'OCCURRENCE' 567) #(956 'OCCURRENCES' 568) #(956 'OCCURS' 569) #(956 'OF' 570) #(956 'OFF' 571) #(956 'OFFSET' 572) #(956 'ON' 573) #(956 'ONE' 574) #(956 'ONLY' 575) #(956 'OPEN' 576) #(956 'OPTION' 577) #(956 'OPTIONAL' 578) #(956 'OPTIONS' 579) #(956 'OR' 580) #(956 'ORACLE' 581) #(956 'ORDER' 582) #(956 'OTHERS' 583) #(956 'OUT' 584) #(956 'OUTER' 585) #(956 'OUTPUT' 586) #(956 'OVERFLOW' 588) #(956 'OVERLAY' 589) #(956 'PACK' 590) #(956 'PACKAGE' 591) #(956 'PAD' 592) #(956 'PADDING' 593) #(956 'PAGE' 594) #(956 'PAGES' 595) #(956 'PARAMETER' 596) #(956 'PARAMETERS' 598) #(956 'PART' 599) #(956 'PARTIALLY' 600) #(956 'PCRE' 601) #(956 'PERCENTAGE' 602) #(956 'PERFORM' 603) #(956 'PERFORMING' 604) #(956 'PERMISSIONS' 605) #(956 'PLACES' 607) #(956 'POOL' 608) #(956 'POSITION' 609) #(956 'POS_HIGH' 610) #(956 'POS_LOW' 611) #(956 'PRAGMAS' 612) #(956 'PRECHECK' 613) #(956 'PRECOMPILED' 614) #(956 'PREFERRED' 615) #(956 'PRESERVING' 616) #(956 'PRIMARY' 617) #(956 'PRINT' 618) #(956 'PRIVATE' 620) #(956 'PRIVILEGED' 621) #(956 'PROCEDURE' 622) #(956 'PROGRAM' 623) #(956 'PROPERTY' 624) #(956 'PROTECTED' 625) #(956 'PROVIDE' 626) #(956 'PUBLIC' 627) #(956 'PUSH' 628) #(956 'PUSHBUTTON' 629) #(956 'PUT' 630) #(956 'QUEUEONLY' 632) #(956 'QUICKINFO' 633) #(956 'RADIOBUTTON' 634) #(956 'RAISE' 635) #(956 'RAISING' 636) #(956 'RANGE' 637) #(956 'RANGES' 638) #(956 'RAW' 639) #(956 'READ' 640) #(956 'RECEIVE' 642) #(956 'RECEIVED' 643) #(956 'RECEIVER' 644) #(956 'RECEIVING' 645) #(956 'REDEFINITION' 646) #(956 'REDUCE' 647) #(956 'REF' 648) #(956 'REFERENCE' 649) #(956 'REFRESH' 650) #(956 'REGEX' 651) #(956 'REJECT' 652) #(956 'RELATING' 653) #(956 'RENAMING' 654) #(956 'REPLACE' 655) #(956 'REPLACEMENT' 656) #(956 'REPLACING' 657) #(956 'REPORT' 658) #(956 'REPORTED' 659) #(956 'REQUEST' 660) #(956 'REQUESTED' 661) #(956 'REQUIRED' 662) #(956 'RESERVE' 663) #(956 'RESET' 664) #(956 'RESOLUTION' 665) #(956 'RESPECTING' 666) #(956 'RESPONSE' 667) #(956 'RESPONSES' 668) #(956 'RESULT' 669) #(956 'RESULTS' 670) #(956 'RESUMABLE' 671) #(956 'RESUME' 672) #(956 'RETRY' 673) #(956 'RETURN' 674) #(956 'RETURNCODE' 675) #(956 'RETURNING' 676) #(956 'RIGHT' 677) #(956 'RIGHTPLUS' 679) #(956 'RIGHTSPACE' 680) #(956 'RISK' 681) #(956 'ROLLBACK' 682) #(956 'ROUND' 683) #(956 'ROWS' 684) #(956 'RTRIM' 883) #(956 'RUN' 685) #(956 'SAP' 686) #(956 'SAVE' 688) #(956 'SAVING' 689) #(956 'SCALE_PRESERVING' 690) #(956 'SCALE_PRESERVING_SCIENTIFIC' 691) #(956 'SCAN' 692) #(956 'SCIENTIFIC' 693) #(956 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(956 'SCREEN' 695) #(956 'SCROLL' 696) #(956 'SCROLLING' 698) #(956 'SEARCH' 699) #(956 'SECONDARY' 700) #(956 'SECONDS' 701) #(956 'SECTION' 702) #(956 'SELECT' 703) #(956 'SELECTION' 705) #(956 'SELECTIONS' 710) #(956 'SEND' 711) #(956 'SEPARATE' 712) #(956 'SEPARATED' 713) #(956 'SESSION' 714) #(956 'SET' 715) #(956 'SHARED' 716) #(956 'SHIFT' 717) #(956 'SHORT' 718) #(956 'SHORTDUMP' 719) #(956 'SIGN' 721) #(956 'SIGN_AS_POSTFIX' 722) #(956 'SIMPLE' 723) #(956 'SIMULATION' 724) #(956 'SINGLE' 725) #(956 'SIZE' 726) #(956 'SKIP' 727) #(956 'SKIPPING' 728) #(956 'SMART' 729) #(956 'SOME' 730) #(956 'SORT' 731) #(956 'SORTABLE' 732) #(956 'SORTED' 733) #(956 'SOURCE' 734) #(956 'SPACE' 735) #(956 'SPECIFIED' 736) #(956 'SPLIT' 737) #(956 'SPOOL' 738) #(956 'SPOTS' 739) #(956 'SQL' 740) #(956 'SQLSCRIPT' 741) #(956 'STABLE' 742) #(956 'STAMP' 743) #(956 'STANDARD' 744) #(956 'STARTING' 746) #(956 'STATE' 747) #(956 'STATEMENT' 748) #(956 'STATEMENTS' 749) #(956 'STATIC' 750) #(956 'STATICS' 751) #(956 'STATUSINFO' 752) #(956 'STEP' 753) #(956 'STOP' 755) #(956 'STRUCTURE' 756) #(956 'STRUCTURES' 757) #(956 'STYLE' 758) #(956 'SUBKEY' 759) #(956 'SUBMATCHES' 760) #(956 'SUBMIT' 761) #(956 'SUBROUTINE' 762) #(956 'SUBSCREEN' 763) #(956 'SUBSTRING' 764) #(956 'SUBTRACT' 765) #(956 'SUFFIX' 767) #(956 'SUM' 768) #(956 'SUMMARY' 769) #(956 'SUPPLIED' 770) #(956 'SUPPLY' 771) #(956 'SUPPRESS' 772) #(956 'SWITCH' 773) #(956 'SYBASE' 774) #(956 'SYMBOL' 775) #(956 'T000' 779) #(956 'TAB' 780) #(956 'TABBED' 781) #(956 'TABLE' 782) #(956 'TABLES' 783) #(956 'TABLEVIEW' 784) #(956 'TABSTRIP' 785) #(956 'TARGET' 786) #(956 'TASK' 787) #(956 'TASKS' 788) #(956 'TEST' 789) #(956 'TESTING' 792) #(956 'TEXT' 793) #(956 'TEXTPOOL' 794) #(956 'THEN' 795) #(956 'THROW' 796) #(956 'TIME' 797) #(956 'TIMES' 798) #(956 'TIMESTAMP' 799) #(956 'TIMEZONE' 800) #(956 'TITLE' 801) #(956 'TITLEBAR' 802) #(956 'TO' 803) #(956 'TOKENIZATION' 804) #(956 'TOKENS' 805) #(956 'TRAILING' 810) #(956 'TRANSACTION' 811) #(956 'TRANSFER' 812) #(956 'TRANSFORMATION' 813) #(956 'TRANSLATE' 814) #(956 'TRANSPORTING' 815) #(956 'TRMAC' 816) #(956 'TRUNCATION' 817) #(956 'TRY' 818) #(956 'TYPE' 819) #(956 'TYPES' 822) #(956 'ULINE' 823) #(956 'UNASSIGN' 824) #(956 'UNDER' 825) #(956 'UNICODE' 826) #(956 'UNION' 827) #(956 'UNIQUE' 828) #(956 'UNIT' 829) #(956 'UNIX' 830) #(956 'UNPACK' 831) #(956 'UNTIL' 832) #(956 'UNWIND' 833) #(956 'UP' 834) #(956 'UPDATE' 835) #(956 'UPPER' 836) #(956 'USER' 837) #(956 'USING' 839) #(956 'UTCLONG' 840) #(956 'UUID' 884) #(956 'VALID' 842) #(956 'VALIDATE' 843) #(956 'VALUE' 844) #(956 'VALUES' 846) #(956 'VARY' 847) #(956 'VARYING' 848) #(956 'VERSION' 849) #(956 'VIA' 850) #(956 'VISIBLE' 851) #(956 'WAIT' 852) #(956 'WHEN' 853) #(956 'WHERE' 854) #(956 'WHILE' 855) #(956 'WIDTH' 856) #(956 'WINDOW' 857) #(956 'WINDOWS' 858) #(956 'WITH' 859) #(956 'WITHOUT' 862) #(956 'WORD' 863) #(956 'WORK' 864) #(956 'WORKSPACE' 865) #(956 'WRITE' 866) #(956 'WRITER' 867) #(956 'XML' 868) #(956 'XSD' 869) #(956 'XSDBOOL' 870) #(956 'YES' 871) #(956 'YYMMDD' 872) #(956 'ZERO' 874) #(956 'ZONE' 875) #(920 'ABS' 876) #(920 'ABSTRACT' 33) #(920 'ACCEPT' 34) #(920 'ACCEPTING' 35) #(920 'ACCESS' 36) #(920 'ACCORDING' 37) #(920 'ACTION' 38) #(920 'ACTIVATION' 39) #(920 'ACTUAL' 40) #(920 'ADABAS' 41) #(920 'ADD' 42) #(920 'ADJACENT' 44) #(920 'ALIAS' 45) #(920 'ALIASES' 46) #(920 'ALIGN' 47) #(920 'ALL' 48) #(920 'ALLOCATE' 49) #(920 'ALPHA' 50) #(920 'AMDP' 51) #(920 'ANALYSIS' 52) #(920 'ANALYZER' 53) #(920 'AND' 54) #(920 'ANY' 55) #(920 'APPEND' 56) #(920 'APPENDING' 57) #(920 'APPLICATION' 58) #(920 'ARCHIVE' 59) #(920 'AREA' 60) #(920 'ARITHMETIC' 61) #(920 'AS' 62) #(920 'AS400' 63) #(920 'ASCENDING' 64) #(920 'ASSERT' 65) #(920 'ASSIGN' 66) #(920 'ASSIGNED' 67) #(920 'ASSIGNING' 68) #(920 'ASSOCIATION' 69) #(920 'ASYNCHRONOUS' 70) #(920 'AT' 71) #(920 'ATTRIBUTES' 72) #(920 'AUGMENTING' 73) #(920 'AUTHORITY' 74) #(920 'AUTHORIZATION' 76) #(920 'AUTO' 77) #(920 'AVG' 78) #(920 'BACK' 79) #(920 'BACKGROUND' 80) #(920 'BACKWARD' 81) #(920 'BADI' 82) #(920 'BASE' 83) #(920 'BEFORE' 84) #(920 'BEGIN' 85) #(920 'BEHAVIOR' 86) #(920 'BETWEEN' 87) #(920 'BINARY' 88) #(920 'BIT' 89) #(920 'BLANK' 94) #(920 'BLANKS' 95) #(920 'BLOCK' 96) #(920 'BLOCKS' 97) #(920 'BOOLC' 98) #(920 'BOUND' 99) #(920 'BOUNDARIES' 100) #(920 'BOUNDS' 101) #(920 'BOXED' 102) #(920 'BREAK' 103) #(920 'BUFFER' 105) #(920 'BY' 106) #(920 'BYPASSING' 107) #(920 'BYTE' 108) #(920 'CA' 116) #(920 'CALL' 117) #(920 'CALLING' 118) #(920 'CASE' 119) #(920 'CAST' 120) #(920 'CASTING' 121) #(920 'CATCH' 122) #(920 'CDS' 123) #(920 'CEIL' 877) #(920 'CENTER' 124) #(920 'CENTERED' 125) #(920 'CHAIN' 126) #(920 'CHANGE' 129) #(920 'CHANGING' 130) #(920 'CHANNELS' 131) #(920 'CHAR' 132) #(920 'CHARACTER' 134) #(920 'CHECK' 135) #(920 'CHECKBOX' 136) #(920 'CID' 137) #(920 'CIRCULAR' 138) #(920 'CLASS' 139) #(920 'CLEANUP' 143) #(920 'CLEAR' 144) #(920 'CLIENT' 145) #(920 'CLIENTS' 146) #(920 'CLOCK' 147) #(920 'CLONE' 148) #(920 'CLOSE' 149) #(920 'CN' 150) #(920 'CO' 151) #(920 'COALESCE' 878) #(920 'CODE' 152) #(920 'COLLECT' 153) #(920 'COLOR' 154) #(920 'COLUMN' 155) #(920 'COLUMNS' 156) #(920 'COL_BACKGROUND' 157) #(920 'COL_GROUP' 158) #(920 'COL_HEADING' 159) #(920 'COL_KEY' 160) #(920 'COL_NEGATIVE' 161) #(920 'COL_NORMAL' 162) #(920 'COL_POSITIVE' 163) #(920 'COL_TOTAL' 164) #(920 'COMMENT' 165) #(920 'COMMENTS' 166) #(920 'COMMIT' 167) #(920 'COMMON' 168) #(920 'COMMUNICATION' 169) #(920 'COMPARING' 170) #(920 'COMPONENT' 171) #(920 'COMPONENTS' 172) #(920 'COMPRESSION' 173) #(920 'COMPUTE' 174) #(920 'CONCAT' 879) #(920 'CONCATENATE' 175) #(920 'CONCAT_WITH_SPACE' 880) #(920 'COND' 176) #(920 'CONDENSE' 177) #(920 'CONDITION' 178) #(920 'CONNECTION' 179) #(920 'CONSTANT' 180) #(920 'CONSTANTS' 181) #(920 'CONTEXT' 182) #(920 'CONTEXTS' 183) #(920 'CONTINUE' 184) #(920 'CONTROL' 185) #(920 'CONTROLS' 186) #(920 'CONV' 187) #(920 'CONVERSION' 188) #(920 'CONVERT' 189) #(920 'COPIES' 190) #(920 'COPY' 191) #(920 'CORRESPONDING' 192) #(920 'COUNT' 193) #(920 'COUNTRY' 194) #(920 'COVER' 195) #(920 'CP' 196) #(920 'CPI' 197) #(920 'CREATE' 198) #(920 'CRITICAL' 199) #(920 'CS' 200) #(920 'CURRENCY' 201) #(920 'CURRENT' 202) #(920 'CURSOR' 203) #(920 'DANGEROUS' 205) #(920 'DATA' 206) #(920 'DATABASE' 207) #(920 'DATAINFO' 208) #(920 'DATASET' 209) #(920 'DATE' 210) #(920 'DAYLIGHT' 211) #(920 'DB2' 212) #(920 'DB6' 213) #(920 'DDL' 216) #(920 'DDMMYY' 217) #(920 'DEALLOCATE' 218) #(920 'DEC' 219) #(920 'DECIMALS' 220) #(920 'DECLARATIONS' 221) #(920 'DEEP' 222) #(920 'DEFAULT' 223) #(920 'DEFERRED' 224) #(920 'DEFINE' 225) #(920 'DEFINITION' 226) #(920 'DELETE' 227) #(920 'DELETING' 228) #(920 'DEMAND' 229) #(920 'DEPARTMENT' 230) #(920 'DESCENDING' 231) #(920 'DESCRIBE' 232) #(920 'DESTINATION' 233) #(920 'DETAIL' 234) #(920 'DETERMINATION' 235) #(920 'DETERMINE' 236) #(920 'DIALOG' 237) #(920 'DID' 238) #(920 'DIRECTORY' 239) #(920 'DISCARDING' 240) #(920 'DISPLAY' 241) #(920 'DISTANCE' 243) #(920 'DISTINCT' 244) #(920 'DIV' 245) #(920 'DIVIDE' 246) #(920 'DO' 247) #(920 'DUMMY' 248) #(920 'DUPLICATE' 249) #(920 'DUPLICATES' 250) #(920 'DURATION' 251) #(920 'DURING' 252) #(920 'DYNPRO' 253) #(920 'EARLY' 254) #(920 'EDIT' 255) #(920 'ELSE' 257) #(920 'ELSEIF' 258) #(920 'EMPTY' 259) #(920 'ENABLED' 260) #(920 'ENABLING' 261) #(920 'ENCODING' 262) #(920 'END' 263) #(920 'ENDAT' 270) #(920 'ENDCASE' 271) #(920 'ENDCATCH' 272) #(920 'ENDCHAIN' 273) #(920 'ENDCLASS' 274) #(920 'ENDDO' 275) #(920 'ENDENHANCEMENT' 276) #(920 'ENDEXEC' 277) #(920 'ENDFORM' 278) #(920 'ENDFUNCTION' 279) #(920 'ENDIAN' 280) #(920 'ENDIF' 281) #(920 'ENDING' 282) #(920 'ENDINTERFACE' 283) #(920 'ENDLOOP' 284) #(920 'ENDMETHOD' 285) #(920 'ENDMODULE' 286) #(920 'ENDON' 287) #(920 'ENDPROVIDE' 288) #(920 'ENDSELECT' 289) #(920 'ENDTRY' 290) #(920 'ENDWHILE' 291) #(920 'ENDWITH' 292) #(920 'ENGINEERING' 293) #(920 'ENHANCEMENT' 294) #(920 'ENHANCEMENTS' 297) #(920 'ENTITIES' 298) #(920 'ENTITY' 299) #(920 'ENTRIES' 300) #(920 'ENTRY' 301) #(920 'ENUM' 302) #(920 'ENVIRONMENT' 303) #(920 'EQ' 304) #(920 'EQUIV' 305) #(920 'ERRORS' 306) #(920 'ESCAPE' 307) #(920 'ESCAPING' 308) #(920 'EVENT' 309) #(920 'EVENTS' 310) #(920 'EXACT' 311) #(920 'EXCEPT' 312) #(920 'EXCEPTION' 313) #(920 'EXCEPTIONS' 315) #(920 'EXCLUDE' 316) #(920 'EXCLUDING' 317) #(920 'EXEC' 318) #(920 'EXECUTE' 319) #(920 'EXISTS' 320) #(920 'EXIT' 321) #(920 'EXPANDING' 323) #(920 'EXPIRATION' 324) #(920 'EXPLICIT' 325) #(920 'EXPONENT' 326) #(920 'EXPORT' 327) #(920 'EXPORTING' 328) #(920 'EXTENDED' 329) #(920 'EXTENSION' 330) #(920 'EXTRACT' 331) #(920 'FAIL' 332) #(920 'FAILED' 333) #(920 'FEATURES' 334) #(920 'FETCH' 335) #(920 'FIELD' 336) #(920 'FIELDS' 340) #(920 'FILE' 341) #(920 'FILL' 342) #(920 'FILTER' 343) #(920 'FILTERS' 344) #(920 'FINAL' 345) #(920 'FIND' 346) #(920 'FIRST' 347) #(920 'FLOOR' 881) #(920 'FLTP' 350) #(920 'FLUSH' 351) #(920 'FONT' 352) #(920 'FOR' 353) #(920 'FORM' 354) #(920 'FORMAT' 355) #(920 'FORWARD' 356) #(920 'FOUND' 357) #(920 'FRAME' 358) #(920 'FRAMES' 359) #(920 'FREE' 360) #(920 'FRIENDS' 361) #(920 'FROM' 362) #(920 'FULL' 363) #(920 'FUNCTION' 364) #(920 'FURTHER' 366) #(920 'GE' 367) #(920 'GENERATE' 368) #(920 'GET' 369) #(920 'GIVING' 370) #(920 'GLOBAL' 371) #(920 'GRAPH' 372) #(920 'GROUP' 373) #(920 'GROUPS' 374) #(920 'GT' 375) #(920 'HANDLE' 376) #(920 'HANDLER' 377) #(920 'HARMLESS' 378) #(920 'HASHED' 379) #(920 'HAVING' 380) #(920 'HDB' 381) #(920 'HEADER' 382) #(920 'HEADERS' 383) #(920 'HEADING' 384) #(920 'HIDE' 387) #(920 'HIERARCHY' 388) #(920 'HIGH' 389) #(920 'HINT' 390) #(920 'HOLD' 391) #(920 'HOTSPOT' 392) #(920 'ICON' 393) #(920 'ID' 394) #(920 'IDENTIFICATION' 395) #(920 'IDENTIFIER' 396) #(920 'IDS' 397) #(920 'IF' 398) #(920 'IGNORE' 399) #(920 'IGNORING' 400) #(920 'IMMEDIATELY' 401) #(920 'IMPLEMENTATION' 402) #(920 'IMPLEMENTED' 403) #(920 'IMPLICIT' 404) #(920 'IMPORT' 405) #(920 'IMPORTING' 406) #(920 'IN' 407) #(920 'INACTIVE' 408) #(920 'INCL' 409) #(920 'INCLUDE' 410) #(920 'INCLUDES' 411) #(920 'INCREMENT' 412) #(920 'INDEX' 413) #(920 'INFORMIX' 415) #(920 'INFOTYPES' 416) #(920 'INHERITING' 417) #(920 'INIT' 418) #(920 'INITIAL' 419) #(920 'INITIALIZATION' 420) #(920 'INNER' 421) #(920 'INPUT' 422) #(920 'INSERT' 423) #(920 'INSTANCE' 424) #(920 'INSTANCES' 425) #(920 'INT2' 426) #(920 'INT4' 427) #(920 'INT8' 428) #(920 'INTENSIFIED' 429) #(920 'INTERFACE' 430) #(920 'INTERFACES' 431) #(920 'INTERNAL' 432) #(920 'INTERVALS' 433) #(920 'INTO' 434) #(920 'INVERSE' 435) #(920 'IS' 437) #(920 'ISO' 438) #(920 'JOB' 439) #(920 'JOIN' 440) #(920 'KEEP' 441) #(920 'KEEPING' 442) #(920 'KERNEL' 443) #(920 'KEY' 444) #(920 'KEYS' 445) #(920 'KEYWORDS' 446) #(920 'KIND' 447) #(920 'LANGUAGE' 448) #(920 'LAST' 449) #(920 'LATE' 450) #(920 'LAYOUT' 451) #(920 'LE' 452) #(920 'LEADING' 453) #(920 'LEAVE' 454) #(920 'LEFT' 455) #(920 'LEFTPLUS' 457) #(920 'LEFTSPACE' 458) #(920 'LEGACY' 459) #(920 'LENGTH' 460) #(920 'LET' 461) #(920 'LEVEL' 462) #(920 'LEVELS' 463) #(920 'LIKE' 464) #(920 'LINE' 465) #(920 'LINEFEED' 469) #(920 'LINES' 470) #(920 'LINK' 471) #(920 'LIST' 472) #(920 'LISTBOX' 474) #(920 'LOAD' 475) #(920 'LOCAL' 477) #(920 'LOCALE' 478) #(920 'LOCK' 479) #(920 'LOCKS' 480) #(920 'LOGFILE' 482) #(920 'LOGICAL' 483) #(920 'LONG' 484) #(920 'LOOP' 485) #(920 'LOW' 486) #(920 'LOWER' 487) #(920 'LPI' 488) #(920 'LT' 489) #(920 'LTRIM' 882) #(920 'MAIN' 491) #(920 'MAPPED' 492) #(920 'MAPPING' 493) #(920 'MARGIN' 494) #(920 'MARK' 495) #(920 'MASK' 496) #(920 'MATCH' 497) #(920 'MATCHCODE' 498) #(920 'MAX' 499) #(920 'MAXIMUM' 500) #(920 'MEDIUM' 501) #(920 'MEMBERS' 502) #(920 'MEMORY' 503) #(920 'MESH' 504) #(920 'MESSAGE' 505) #(920 'MESSAGES' 507) #(920 'MESSAGING' 508) #(920 'METHOD' 509) #(920 'METHODS' 510) #(920 'MIN' 511) #(920 'MMDDYY' 514) #(920 'MOD' 515) #(920 'MODE' 516) #(920 'MODIF' 517) #(920 'MODIFIER' 518) #(920 'MODIFY' 519) #(920 'MODULE' 520) #(920 'MOVE' 521) #(920 'MSSQLNT' 523) #(920 'MULTIPLY' 524) #(920 'NA' 526) #(920 'NAME' 527) #(920 'NAMETAB' 528) #(920 'NATIVE' 529) #(920 'NE' 530) #(920 'NESTED' 531) #(920 'NESTING' 532) #(920 'NEW' 533) #(920 'NEXT' 537) #(920 'NO' 538) #(920 'NODES' 550) #(920 'NOT' 553) #(920 'NP' 554) #(920 'NS' 555) #(920 'NULL' 556) #(920 'NUMBER' 557) #(920 'NUMBERING' 558) #(920 'NUMC' 559) #(920 'OBJECT' 561) #(920 'OBJECTS' 562) #(920 'OBJMGR' 563) #(920 'OBLIGATORY' 564) #(920 'OCCURENCE' 565) #(920 'OCCURENCES' 566) #(920 'OCCURRENCE' 567) #(920 'OCCURRENCES' 568) #(920 'OCCURS' 569) #(920 'OF' 570) #(920 'OFF' 571) #(920 'OFFSET' 572) #(920 'ON' 573) #(920 'ONE' 574) #(920 'ONLY' 575) #(920 'OPEN' 576) #(920 'OPTION' 577) #(920 'OPTIONAL' 578) #(920 'OPTIONS' 579) #(920 'OR' 580) #(920 'ORACLE' 581) #(920 'ORDER' 582) #(920 'OTHERS' 583) #(920 'OUT' 584) #(920 'OUTER' 585) #(920 'OUTPUT' 586) #(920 'OVERFLOW' 588) #(920 'OVERLAY' 589) #(920 'PACK' 590) #(920 'PACKAGE' 591) #(920 'PAD' 592) #(920 'PADDING' 593) #(920 'PAGE' 594) #(920 'PAGES' 595) #(920 'PARAMETER' 596) #(920 'PARAMETERS' 598) #(920 'PART' 599) #(920 'PARTIALLY' 600) #(920 'PCRE' 601) #(920 'PERCENTAGE' 602) #(920 'PERFORM' 603) #(920 'PERFORMING' 604) #(920 'PERMISSIONS' 605) #(920 'PLACES' 607) #(920 'POOL' 608) #(920 'POSITION' 609) #(920 'POS_HIGH' 610) #(920 'POS_LOW' 611) #(920 'PRAGMAS' 612) #(920 'PRECHECK' 613) #(920 'PRECOMPILED' 614) #(920 'PREFERRED' 615) #(920 'PRESERVING' 616) #(920 'PRIMARY' 617) #(920 'PRINT' 618) #(920 'PRIVATE' 620) #(920 'PRIVILEGED' 621) #(920 'PROCEDURE' 622) #(920 'PROGRAM' 623) #(920 'PROPERTY' 624) #(920 'PROTECTED' 625) #(920 'PROVIDE' 626) #(920 'PUBLIC' 627) #(920 'PUSH' 628) #(920 'PUSHBUTTON' 629) #(920 'PUT' 630) #(920 'QUEUEONLY' 632) #(920 'QUICKINFO' 633) #(920 'RADIOBUTTON' 634) #(920 'RAISE' 635) #(920 'RAISING' 636) #(920 'RANGE' 637) #(920 'RANGES' 638) #(920 'RAW' 639) #(920 'READ' 640) #(920 'RECEIVE' 642) #(920 'RECEIVED' 643) #(920 'RECEIVER' 644) #(920 'RECEIVING' 645) #(920 'REDEFINITION' 646) #(920 'REDUCE' 647) #(920 'REF' 648) #(920 'REFERENCE' 649) #(920 'REFRESH' 650) #(920 'REGEX' 651) #(920 'REJECT' 652) #(920 'RELATING' 653) #(920 'RENAMING' 654) #(920 'REPLACE' 655) #(920 'REPLACEMENT' 656) #(920 'REPLACING' 657) #(920 'REPORT' 658) #(920 'REPORTED' 659) #(920 'REQUEST' 660) #(920 'REQUESTED' 661) #(920 'REQUIRED' 662) #(920 'RESERVE' 663) #(920 'RESET' 664) #(920 'RESOLUTION' 665) #(920 'RESPECTING' 666) #(920 'RESPONSE' 667) #(920 'RESPONSES' 668) #(920 'RESULT' 669) #(920 'RESULTS' 670) #(920 'RESUMABLE' 671) #(920 'RESUME' 672) #(920 'RETRY' 673) #(920 'RETURN' 674) #(920 'RETURNCODE' 675) #(920 'RETURNING' 676) #(920 'RIGHT' 677) #(920 'RIGHTPLUS' 679) #(920 'RIGHTSPACE' 680) #(920 'RISK' 681) #(920 'ROLLBACK' 682) #(920 'ROUND' 683) #(920 'ROWS' 684) #(920 'RTRIM' 883) #(920 'RUN' 685) #(920 'SAP' 686) #(920 'SAVE' 688) #(920 'SAVING' 689) #(920 'SCALE_PRESERVING' 690) #(920 'SCALE_PRESERVING_SCIENTIFIC' 691) #(920 'SCAN' 692) #(920 'SCIENTIFIC' 693) #(920 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(920 'SCREEN' 695) #(920 'SCROLL' 696) #(920 'SCROLLING' 698) #(920 'SEARCH' 699) #(920 'SECONDARY' 700) #(920 'SECONDS' 701) #(920 'SECTION' 702) #(920 'SELECT' 703) #(920 'SELECTION' 705) #(920 'SELECTIONS' 710) #(920 'SEND' 711) #(920 'SEPARATE' 712) #(920 'SEPARATED' 713) #(920 'SESSION' 714) #(920 'SET' 715) #(920 'SHARED' 716) #(920 'SHIFT' 717) #(920 'SHORT' 718) #(920 'SHORTDUMP' 719) #(920 'SIGN' 721) #(920 'SIGN_AS_POSTFIX' 722) #(920 'SIMPLE' 723) #(920 'SIMULATION' 724) #(920 'SINGLE' 725) #(920 'SIZE' 726) #(920 'SKIP' 727) #(920 'SKIPPING' 728) #(920 'SMART' 729) #(920 'SOME' 730) #(920 'SORT' 731) #(920 'SORTABLE' 732) #(920 'SORTED' 733) #(920 'SOURCE' 734) #(920 'SPACE' 735) #(920 'SPECIFIED' 736) #(920 'SPLIT' 737) #(920 'SPOOL' 738) #(920 'SPOTS' 739) #(920 'SQL' 740) #(920 'SQLSCRIPT' 741) #(920 'STABLE' 742) #(920 'STAMP' 743) #(920 'STANDARD' 744) #(920 'STARTING' 746) #(920 'STATE' 747) #(920 'STATEMENT' 748) #(920 'STATEMENTS' 749) #(920 'STATIC' 750) #(920 'STATICS' 751) #(920 'STATUSINFO' 752) #(920 'STEP' 753) #(920 'STOP' 755) #(920 'STRUCTURE' 756) #(920 'STRUCTURES' 757) #(920 'STYLE' 758) #(920 'SUBKEY' 759) #(920 'SUBMATCHES' 760) #(920 'SUBMIT' 761) #(920 'SUBROUTINE' 762) #(920 'SUBSCREEN' 763) #(920 'SUBSTRING' 764) #(920 'SUBTRACT' 765) #(920 'SUFFIX' 767) #(920 'SUM' 768) #(920 'SUMMARY' 769) #(920 'SUPPLIED' 770) #(920 'SUPPLY' 771) #(920 'SUPPRESS' 772) #(920 'SWITCH' 773) #(920 'SYBASE' 774) #(920 'SYMBOL' 775) #(920 'T000' 779) #(920 'TAB' 780) #(920 'TABBED' 781) #(920 'TABLE' 782) #(920 'TABLES' 783) #(920 'TABLEVIEW' 784) #(920 'TABSTRIP' 785) #(920 'TARGET' 786) #(920 'TASK' 787) #(920 'TASKS' 788) #(920 'TEST' 789) #(920 'TESTING' 792) #(920 'TEXT' 793) #(920 'TEXTPOOL' 794) #(920 'THEN' 795) #(920 'THROW' 796) #(920 'TIME' 797) #(920 'TIMES' 798) #(920 'TIMESTAMP' 799) #(920 'TIMEZONE' 800) #(920 'TITLE' 801) #(920 'TITLEBAR' 802) #(920 'TO' 803) #(920 'TOKENIZATION' 804) #(920 'TOKENS' 805) #(920 'TRAILING' 810) #(920 'TRANSACTION' 811) #(920 'TRANSFER' 812) #(920 'TRANSFORMATION' 813) #(920 'TRANSLATE' 814) #(920 'TRANSPORTING' 815) #(920 'TRMAC' 816) #(920 'TRUNCATION' 817) #(920 'TRY' 818) #(920 'TYPE' 819) #(920 'TYPES' 822) #(920 'ULINE' 823) #(920 'UNASSIGN' 824) #(920 'UNDER' 825) #(920 'UNICODE' 826) #(920 'UNION' 827) #(920 'UNIQUE' 828) #(920 'UNIT' 829) #(920 'UNIX' 830) #(920 'UNPACK' 831) #(920 'UNTIL' 832) #(920 'UNWIND' 833) #(920 'UP' 834) #(920 'UPDATE' 835) #(920 'UPPER' 836) #(920 'USER' 837) #(920 'USING' 839) #(920 'UTCLONG' 840) #(920 'UUID' 884) #(920 'VALID' 842) #(920 'VALIDATE' 843) #(920 'VALUE' 844) #(920 'VALUES' 846) #(920 'VARY' 847) #(920 'VARYING' 848) #(920 'VERSION' 849) #(920 'VIA' 850) #(920 'VISIBLE' 851) #(920 'WAIT' 852) #(920 'WHEN' 853) #(920 'WHERE' 854) #(920 'WHILE' 855) #(920 'WIDTH' 856) #(920 'WINDOW' 857) #(920 'WINDOWS' 858) #(920 'WITH' 859) #(920 'WITHOUT' 862) #(920 'WORD' 863) #(920 'WORK' 864) #(920 'WORKSPACE' 865) #(920 'WRITE' 866) #(920 'WRITER' 867) #(920 'XML' 868) #(920 'XSD' 869) #(920 'XSDBOOL' 870) #(920 'YES' 871) #(920 'YYMMDD' 872) #(920 'ZERO' 874) #(920 'ZONE' 875) #(921 '%_FINAL' 2) #(921 '%_HINTS' 3) #(921 '%_PREDEFINED' 4) #(921 'ABS' 876) #(921 'ABSTRACT' 33) #(921 'ACCEPT' 34) #(921 'ACCEPTING' 35) #(921 'ACCESS' 36) #(921 'ACCORDING' 37) #(921 'ACTION' 38) #(921 'ACTIVATION' 39) #(921 'ACTUAL' 40) #(921 'ADABAS' 41) #(921 'ADD' 42) #(921 'ADJACENT' 44) #(921 'ALIAS' 45) #(921 'ALIASES' 46) #(921 'ALIGN' 47) #(921 'ALL' 48) #(921 'ALLOCATE' 49) #(921 'ALPHA' 50) #(921 'AMDP' 51) #(921 'ANALYSIS' 52) #(921 'ANALYZER' 53) #(921 'AND' 54) #(921 'ANY' 55) #(921 'APPEND' 56) #(921 'APPENDING' 57) #(921 'APPLICATION' 58) #(921 'ARCHIVE' 59) #(921 'AREA' 60) #(921 'ARITHMETIC' 61) #(921 'AS' 62) #(921 'AS400' 63) #(921 'ASCENDING' 64) #(921 'ASSERT' 65) #(921 'ASSIGN' 66) #(921 'ASSIGNED' 67) #(921 'ASSIGNING' 68) #(921 'ASSOCIATION' 69) #(921 'ASYNCHRONOUS' 70) #(921 'AT' 71) #(921 'ATTRIBUTES' 72) #(921 'AUGMENTING' 73) #(921 'AUTHORITY' 74) #(921 'AUTHORIZATION' 76) #(921 'AUTO' 77) #(921 'AVG' 78) #(921 'BACK' 79) #(921 'BACKGROUND' 80) #(921 'BACKWARD' 81) #(921 'BADI' 82) #(921 'BASE' 83) #(921 'BEFORE' 84) #(921 'BEGIN' 85) #(921 'BEHAVIOR' 86) #(921 'BETWEEN' 87) #(921 'BINARY' 88) #(921 'BIT' 89) #(921 'BLANK' 94) #(921 'BLANKS' 95) #(921 'BLOCK' 96) #(921 'BLOCKS' 97) #(921 'BOOLC' 98) #(921 'BOUND' 99) #(921 'BOUNDARIES' 100) #(921 'BOUNDS' 101) #(921 'BOXED' 102) #(921 'BREAK' 103) #(921 'BUFFER' 105) #(921 'BY' 106) #(921 'BYPASSING' 107) #(921 'BYTE' 108) #(921 'CA' 116) #(921 'CALL' 117) #(921 'CALLING' 118) #(921 'CASE' 119) #(921 'CAST' 120) #(921 'CASTING' 121) #(921 'CATCH' 122) #(921 'CDS' 123) #(921 'CEIL' 877) #(921 'CENTER' 124) #(921 'CENTERED' 125) #(921 'CHAIN' 126) #(921 'CHANGE' 129) #(921 'CHANGING' 130) #(921 'CHANNELS' 131) #(921 'CHAR' 132) #(921 'CHARACTER' 134) #(921 'CHECK' 135) #(921 'CHECKBOX' 136) #(921 'CID' 137) #(921 'CIRCULAR' 138) #(921 'CLASS' 139) #(921 'CLEANUP' 143) #(921 'CLEAR' 144) #(921 'CLIENT' 145) #(921 'CLIENTS' 146) #(921 'CLOCK' 147) #(921 'CLONE' 148) #(921 'CLOSE' 149) #(921 'CN' 150) #(921 'CO' 151) #(921 'COALESCE' 878) #(921 'CODE' 152) #(921 'COLLECT' 153) #(921 'COLOR' 154) #(921 'COLUMN' 155) #(921 'COLUMNS' 156) #(921 'COL_BACKGROUND' 157) #(921 'COL_GROUP' 158) #(921 'COL_HEADING' 159) #(921 'COL_KEY' 160) #(921 'COL_NEGATIVE' 161) #(921 'COL_NORMAL' 162) #(921 'COL_POSITIVE' 163) #(921 'COL_TOTAL' 164) #(921 'COMMENT' 165) #(921 'COMMENTS' 166) #(921 'COMMIT' 167) #(921 'COMMON' 168) #(921 'COMMUNICATION' 169) #(921 'COMPARING' 170) #(921 'COMPONENT' 171) #(921 'COMPONENTS' 172) #(921 'COMPRESSION' 173) #(921 'COMPUTE' 174) #(921 'CONCAT' 879) #(921 'CONCATENATE' 175) #(921 'CONCAT_WITH_SPACE' 880) #(921 'COND' 176) #(921 'CONDENSE' 177) #(921 'CONDITION' 178) #(921 'CONNECTION' 179) #(921 'CONSTANT' 180) #(921 'CONSTANTS' 181) #(921 'CONTEXT' 182) #(921 'CONTEXTS' 183) #(921 'CONTINUE' 184) #(921 'CONTROL' 185) #(921 'CONTROLS' 186) #(921 'CONV' 187) #(921 'CONVERSION' 188) #(921 'CONVERT' 189) #(921 'COPIES' 190) #(921 'COPY' 191) #(921 'CORRESPONDING' 192) #(921 'COUNT' 193) #(921 'COUNTRY' 194) #(921 'COVER' 195) #(921 'CP' 196) #(921 'CPI' 197) #(921 'CREATE' 198) #(921 'CRITICAL' 199) #(921 'CS' 200) #(921 'CURRENCY' 201) #(921 'CURRENT' 202) #(921 'CURSOR' 203) #(921 'DANGEROUS' 205) #(921 'DATA' 206) #(921 'DATABASE' 207) #(921 'DATAINFO' 208) #(921 'DATASET' 209) #(921 'DATE' 210) #(921 'DAYLIGHT' 211) #(921 'DB2' 212) #(921 'DB6' 213) #(921 'DD/MM/YY' 214) #(921 'DD/MM/YYYY' 215) #(921 'DDL' 216) #(921 'DDMMYY' 217) #(921 'DEALLOCATE' 218) #(921 'DEC' 219) #(921 'DECIMALS' 220) #(921 'DECLARATIONS' 221) #(921 'DEEP' 222) #(921 'DEFAULT' 223) #(921 'DEFERRED' 224) #(921 'DEFINE' 225) #(921 'DEFINITION' 226) #(921 'DELETE' 227) #(921 'DELETING' 228) #(921 'DEMAND' 229) #(921 'DEPARTMENT' 230) #(921 'DESCENDING' 231) #(921 'DESCRIBE' 232) #(921 'DESTINATION' 233) #(921 'DETAIL' 234) #(921 'DETERMINATION' 235) #(921 'DETERMINE' 236) #(921 'DIALOG' 237) #(921 'DID' 238) #(921 'DIRECTORY' 239) #(921 'DISCARDING' 240) #(921 'DISPLAY' 241) #(921 'DISTANCE' 243) #(921 'DISTINCT' 244) #(921 'DIV' 245) #(921 'DIVIDE' 246) #(921 'DO' 247) #(921 'DUMMY' 248) #(921 'DUPLICATE' 249) #(921 'DUPLICATES' 250) #(921 'DURATION' 251) #(921 'DURING' 252) #(921 'DYNPRO' 253) #(921 'EARLY' 254) #(921 'EDIT' 255) #(921 'ELSE' 257) #(921 'ELSEIF' 258) #(921 'EMPTY' 259) #(921 'ENABLED' 260) #(921 'ENABLING' 261) #(921 'ENCODING' 262) #(921 'END' 263) #(921 'ENDAT' 270) #(921 'ENDCASE' 271) #(921 'ENDCATCH' 272) #(921 'ENDCHAIN' 273) #(921 'ENDCLASS' 274) #(921 'ENDDO' 275) #(921 'ENDENHANCEMENT' 276) #(921 'ENDEXEC' 277) #(921 'ENDFORM' 278) #(921 'ENDFUNCTION' 279) #(921 'ENDIAN' 280) #(921 'ENDIF' 281) #(921 'ENDING' 282) #(921 'ENDINTERFACE' 283) #(921 'ENDLOOP' 284) #(921 'ENDMETHOD' 285) #(921 'ENDMODULE' 286) #(921 'ENDON' 287) #(921 'ENDPROVIDE' 288) #(921 'ENDSELECT' 289) #(921 'ENDTRY' 290) #(921 'ENDWHILE' 291) #(921 'ENDWITH' 292) #(921 'ENGINEERING' 293) #(921 'ENHANCEMENT' 294) #(921 'ENHANCEMENTS' 297) #(921 'ENTITIES' 298) #(921 'ENTITY' 299) #(921 'ENTRIES' 300) #(921 'ENTRY' 301) #(921 'ENUM' 302) #(921 'ENVIRONMENT' 303) #(921 'EQ' 304) #(921 'EQUIV' 305) #(921 'ERRORS' 306) #(921 'ESCAPE' 307) #(921 'ESCAPING' 308) #(921 'EVENT' 309) #(921 'EVENTS' 310) #(921 'EXACT' 311) #(921 'EXCEPT' 312) #(921 'EXCEPTION' 313) #(921 'EXCEPTIONS' 315) #(921 'EXCLUDE' 316) #(921 'EXCLUDING' 317) #(921 'EXEC' 318) #(921 'EXECUTE' 319) #(921 'EXISTS' 320) #(921 'EXIT' 321) #(921 'EXPANDING' 323) #(921 'EXPIRATION' 324) #(921 'EXPLICIT' 325) #(921 'EXPONENT' 326) #(921 'EXPORT' 327) #(921 'EXPORTING' 328) #(921 'EXTENDED' 329) #(921 'EXTENSION' 330) #(921 'EXTRACT' 331) #(921 'FAIL' 332) #(921 'FAILED' 333) #(921 'FEATURES' 334) #(921 'FETCH' 335) #(921 'FIELD' 336) #(921 'FIELDS' 340) #(921 'FILE' 341) #(921 'FILL' 342) #(921 'FILTER' 343) #(921 'FILTERS' 344) #(921 'FINAL' 345) #(921 'FIND' 346) #(921 'FIRST' 347) #(921 'FLOOR' 881) #(921 'FLTP' 350) #(921 'FLUSH' 351) #(921 'FONT' 352) #(921 'FOR' 353) #(921 'FORM' 354) #(921 'FORMAT' 355) #(921 'FORWARD' 356) #(921 'FOUND' 357) #(921 'FRAME' 358) #(921 'FRAMES' 359) #(921 'FREE' 360) #(921 'FRIENDS' 361) #(921 'FROM' 362) #(921 'FULL' 363) #(921 'FUNCTION' 364) #(921 'FURTHER' 366) #(921 'GE' 367) #(921 'GENERATE' 368) #(921 'GET' 369) #(921 'GIVING' 370) #(921 'GLOBAL' 371) #(921 'GRAPH' 372) #(921 'GROUP' 373) #(921 'GROUPS' 374) #(921 'GT' 375) #(921 'HANDLE' 376) #(921 'HANDLER' 377) #(921 'HARMLESS' 378) #(921 'HASHED' 379) #(921 'HAVING' 380) #(921 'HDB' 381) #(921 'HEADER' 382) #(921 'HEADERS' 383) #(921 'HEADING' 384) #(921 'HIDE' 387) #(921 'HIERARCHY' 388) #(921 'HIGH' 389) #(921 'HINT' 390) #(921 'HOLD' 391) #(921 'HOTSPOT' 392) #(921 'ICON' 393) #(921 'ID' 394) #(921 'IDENTIFICATION' 395) #(921 'IDENTIFIER' 396) #(921 'IDS' 397) #(921 'IF' 398) #(921 'IGNORE' 399) #(921 'IGNORING' 400) #(921 'IMMEDIATELY' 401) #(921 'IMPLEMENTATION' 402) #(921 'IMPLEMENTED' 403) #(921 'IMPLICIT' 404) #(921 'IMPORT' 405) #(921 'IMPORTING' 406) #(921 'IN' 407) #(921 'INACTIVE' 408) #(921 'INCL' 409) #(921 'INCLUDE' 410) #(921 'INCLUDES' 411) #(921 'INCREMENT' 412) #(921 'INDEX' 413) #(921 'INFORMIX' 415) #(921 'INFOTYPES' 416) #(921 'INHERITING' 417) #(921 'INIT' 418) #(921 'INITIAL' 419) #(921 'INITIALIZATION' 420) #(921 'INNER' 421) #(921 'INPUT' 422) #(921 'INSERT' 423) #(921 'INSTANCE' 424) #(921 'INSTANCES' 425) #(921 'INT2' 426) #(921 'INT4' 427) #(921 'INT8' 428) #(921 'INTENSIFIED' 429) #(921 'INTERFACE' 430) #(921 'INTERFACES' 431) #(921 'INTERNAL' 432) #(921 'INTERVALS' 433) #(921 'INTO' 434) #(921 'INVERSE' 435) #(921 'IS' 437) #(921 'ISO' 438) #(921 'JOB' 439) #(921 'JOIN' 440) #(921 'KEEP' 441) #(921 'KEEPING' 442) #(921 'KERNEL' 443) #(921 'KEY' 444) #(921 'KEYS' 445) #(921 'KEYWORDS' 446) #(921 'KIND' 447) #(921 'LANGUAGE' 448) #(921 'LAST' 449) #(921 'LATE' 450) #(921 'LAYOUT' 451) #(921 'LE' 452) #(921 'LEADING' 453) #(921 'LEAVE' 454) #(921 'LEFT' 455) #(921 'LEFTPLUS' 457) #(921 'LEFTSPACE' 458) #(921 'LEGACY' 459) #(921 'LENGTH' 460) #(921 'LET' 461) #(921 'LEVEL' 462) #(921 'LEVELS' 463) #(921 'LIKE' 464) #(921 'LINE' 465) #(921 'LINEFEED' 469) #(921 'LINES' 470) #(921 'LINK' 471) #(921 'LIST' 472) #(921 'LISTBOX' 474) #(921 'LOAD' 475) #(921 'LOCAL' 477) #(921 'LOCALE' 478) #(921 'LOCK' 479) #(921 'LOCKS' 480) #(921 'LOGFILE' 482) #(921 'LOGICAL' 483) #(921 'LONG' 484) #(921 'LOOP' 485) #(921 'LOW' 486) #(921 'LOWER' 487) #(921 'LPI' 488) #(921 'LT' 489) #(921 'LTRIM' 882) #(921 'MAIN' 491) #(921 'MAPPED' 492) #(921 'MAPPING' 493) #(921 'MARGIN' 494) #(921 'MARK' 495) #(921 'MASK' 496) #(921 'MATCH' 497) #(921 'MATCHCODE' 498) #(921 'MAX' 499) #(921 'MAXIMUM' 500) #(921 'MEDIUM' 501) #(921 'MEMBERS' 502) #(921 'MEMORY' 503) #(921 'MESH' 504) #(921 'MESSAGE' 505) #(921 'MESSAGES' 507) #(921 'MESSAGING' 508) #(921 'METHOD' 509) #(921 'METHODS' 510) #(921 'MIN' 511) #(921 'MM/DD/YY' 512) #(921 'MM/DD/YYYY' 513) #(921 'MMDDYY' 514) #(921 'MOD' 515) #(921 'MODE' 516) #(921 'MODIF' 517) #(921 'MODIFIER' 518) #(921 'MODIFY' 519) #(921 'MODULE' 520) #(921 'MOVE' 521) #(921 'MSSQLNT' 523) #(921 'MULTIPLY' 524) #(921 'NA' 526) #(921 'NAME' 527) #(921 'NAMETAB' 528) #(921 'NATIVE' 529) #(921 'NE' 530) #(921 'NESTED' 531) #(921 'NESTING' 532) #(921 'NEW' 533) #(921 'NEXT' 537) #(921 'NO' 538) #(921 'NODES' 550) #(921 'NOT' 553) #(921 'NP' 554) #(921 'NS' 555) #(921 'NULL' 556) #(921 'NUMBER' 557) #(921 'NUMBERING' 558) #(921 'NUMC' 559) #(921 'OBJECT' 561) #(921 'OBJECTS' 562) #(921 'OBJMGR' 563) #(921 'OBLIGATORY' 564) #(921 'OCCURENCE' 565) #(921 'OCCURENCES' 566) #(921 'OCCURRENCE' 567) #(921 'OCCURRENCES' 568) #(921 'OCCURS' 569) #(921 'OF' 570) #(921 'OFF' 571) #(921 'OFFSET' 572) #(921 'ON' 573) #(921 'ONE' 574) #(921 'ONLY' 575) #(921 'OPEN' 576) #(921 'OPTION' 577) #(921 'OPTIONAL' 578) #(921 'OPTIONS' 579) #(921 'OR' 580) #(921 'ORACLE' 581) #(921 'ORDER' 582) #(921 'OTHERS' 583) #(921 'OUT' 584) #(921 'OUTER' 585) #(921 'OUTPUT' 586) #(921 'OVERFLOW' 588) #(921 'OVERLAY' 589) #(921 'PACK' 590) #(921 'PACKAGE' 591) #(921 'PAD' 592) #(921 'PADDING' 593) #(921 'PAGE' 594) #(921 'PAGES' 595) #(921 'PARAMETER' 596) #(921 'PARAMETERS' 598) #(921 'PART' 599) #(921 'PARTIALLY' 600) #(921 'PCRE' 601) #(921 'PERCENTAGE' 602) #(921 'PERFORM' 603) #(921 'PERFORMING' 604) #(921 'PERMISSIONS' 605) #(921 'PLACES' 607) #(921 'POOL' 608) #(921 'POSITION' 609) #(921 'POS_HIGH' 610) #(921 'POS_LOW' 611) #(921 'PRAGMAS' 612) #(921 'PRECHECK' 613) #(921 'PRECOMPILED' 614) #(921 'PREFERRED' 615) #(921 'PRESERVING' 616) #(921 'PRIMARY' 617) #(921 'PRINT' 618) #(921 'PRIVATE' 620) #(921 'PRIVILEGED' 621) #(921 'PROCEDURE' 622) #(921 'PROGRAM' 623) #(921 'PROPERTY' 624) #(921 'PROTECTED' 625) #(921 'PROVIDE' 626) #(921 'PUBLIC' 627) #(921 'PUSH' 628) #(921 'PUSHBUTTON' 629) #(921 'PUT' 630) #(921 'QUEUEONLY' 632) #(921 'QUICKINFO' 633) #(921 'RADIOBUTTON' 634) #(921 'RAISE' 635) #(921 'RAISING' 636) #(921 'RANGE' 637) #(921 'RANGES' 638) #(921 'RAW' 639) #(921 'READ' 640) #(921 'RECEIVE' 642) #(921 'RECEIVED' 643) #(921 'RECEIVER' 644) #(921 'RECEIVING' 645) #(921 'REDEFINITION' 646) #(921 'REDUCE' 647) #(921 'REF' 648) #(921 'REFERENCE' 649) #(921 'REFRESH' 650) #(921 'REGEX' 651) #(921 'REJECT' 652) #(921 'RELATING' 653) #(921 'RENAMING' 654) #(921 'REPLACE' 655) #(921 'REPLACEMENT' 656) #(921 'REPLACING' 657) #(921 'REPORT' 658) #(921 'REPORTED' 659) #(921 'REQUEST' 660) #(921 'REQUESTED' 661) #(921 'REQUIRED' 662) #(921 'RESERVE' 663) #(921 'RESET' 664) #(921 'RESOLUTION' 665) #(921 'RESPECTING' 666) #(921 'RESPONSE' 667) #(921 'RESPONSES' 668) #(921 'RESULT' 669) #(921 'RESULTS' 670) #(921 'RESUMABLE' 671) #(921 'RESUME' 672) #(921 'RETRY' 673) #(921 'RETURN' 674) #(921 'RETURNCODE' 675) #(921 'RETURNING' 676) #(921 'RIGHT' 677) #(921 'RIGHTPLUS' 679) #(921 'RIGHTSPACE' 680) #(921 'RISK' 681) #(921 'ROLLBACK' 682) #(921 'ROUND' 683) #(921 'ROWS' 684) #(921 'RTRIM' 883) #(921 'RUN' 685) #(921 'SAP' 686) #(921 'SAVE' 688) #(921 'SAVING' 689) #(921 'SCALE_PRESERVING' 690) #(921 'SCALE_PRESERVING_SCIENTIFIC' 691) #(921 'SCAN' 692) #(921 'SCIENTIFIC' 693) #(921 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(921 'SCREEN' 695) #(921 'SCROLL' 696) #(921 'SCROLLING' 698) #(921 'SEARCH' 699) #(921 'SECONDARY' 700) #(921 'SECONDS' 701) #(921 'SECTION' 702) #(921 'SELECT' 703) #(921 'SELECTION' 705) #(921 'SELECTIONS' 710) #(921 'SEND' 711) #(921 'SEPARATE' 712) #(921 'SEPARATED' 713) #(921 'SESSION' 714) #(921 'SET' 715) #(921 'SHARED' 716) #(921 'SHIFT' 717) #(921 'SHORT' 718) #(921 'SHORTDUMP' 719) #(921 'SIGN' 721) #(921 'SIGN_AS_POSTFIX' 722) #(921 'SIMPLE' 723) #(921 'SIMULATION' 724) #(921 'SINGLE' 725) #(921 'SIZE' 726) #(921 'SKIP' 727) #(921 'SKIPPING' 728) #(921 'SMART' 729) #(921 'SOME' 730) #(921 'SORT' 731) #(921 'SORTABLE' 732) #(921 'SORTED' 733) #(921 'SOURCE' 734) #(921 'SPACE' 735) #(921 'SPECIFIED' 736) #(921 'SPLIT' 737) #(921 'SPOOL' 738) #(921 'SPOTS' 739) #(921 'SQL' 740) #(921 'SQLSCRIPT' 741) #(921 'STABLE' 742) #(921 'STAMP' 743) #(921 'STANDARD' 744) #(921 'STARTING' 746) #(921 'STATE' 747) #(921 'STATEMENT' 748) #(921 'STATEMENTS' 749) #(921 'STATIC' 750) #(921 'STATICS' 751) #(921 'STATUSINFO' 752) #(921 'STEP' 753) #(921 'STOP' 755) #(921 'STRUCTURE' 756) #(921 'STRUCTURES' 757) #(921 'STYLE' 758) #(921 'SUBKEY' 759) #(921 'SUBMATCHES' 760) #(921 'SUBMIT' 761) #(921 'SUBROUTINE' 762) #(921 'SUBSCREEN' 763) #(921 'SUBSTRING' 764) #(921 'SUBTRACT' 765) #(921 'SUFFIX' 767) #(921 'SUM' 768) #(921 'SUMMARY' 769) #(921 'SUPPLIED' 770) #(921 'SUPPLY' 771) #(921 'SUPPRESS' 772) #(921 'SWITCH' 773) #(921 'SYBASE' 774) #(921 'SYMBOL' 775) #(921 'T000' 779) #(921 'TAB' 780) #(921 'TABBED' 781) #(921 'TABLE' 782) #(921 'TABLES' 783) #(921 'TABLEVIEW' 784) #(921 'TABSTRIP' 785) #(921 'TARGET' 786) #(921 'TASK' 787) #(921 'TASKS' 788) #(921 'TEST' 789) #(921 'TESTING' 792) #(921 'TEXT' 793) #(921 'TEXTPOOL' 794) #(921 'THEN' 795) #(921 'THROW' 796) #(921 'TIME' 797) #(921 'TIMES' 798) #(921 'TIMESTAMP' 799) #(921 'TIMEZONE' 800) #(921 'TITLE' 801) #(921 'TITLEBAR' 802) #(921 'TO' 803) #(921 'TOKENIZATION' 804) #(921 'TOKENS' 805) #(921 'TRAILING' 810) #(921 'TRANSACTION' 811) #(921 'TRANSFER' 812) #(921 'TRANSFORMATION' 813) #(921 'TRANSLATE' 814) #(921 'TRANSPORTING' 815) #(921 'TRMAC' 816) #(921 'TRUNCATION' 817) #(921 'TRY' 818) #(921 'TYPE' 819) #(921 'TYPES' 822) #(921 'ULINE' 823) #(921 'UNASSIGN' 824) #(921 'UNDER' 825) #(921 'UNICODE' 826) #(921 'UNION' 827) #(921 'UNIQUE' 828) #(921 'UNIT' 829) #(921 'UNIX' 830) #(921 'UNPACK' 831) #(921 'UNTIL' 832) #(921 'UNWIND' 833) #(921 'UP' 834) #(921 'UPDATE' 835) #(921 'UPPER' 836) #(921 'USER' 837) #(921 'USING' 839) #(921 'UTCLONG' 840) #(921 'UUID' 884) #(921 'VALID' 842) #(921 'VALIDATE' 843) #(921 'VALUE' 844) #(921 'VALUES' 846) #(921 'VARY' 847) #(921 'VARYING' 848) #(921 'VERSION' 849) #(921 'VIA' 850) #(921 'VISIBLE' 851) #(921 'WAIT' 852) #(921 'WHEN' 853) #(921 'WHERE' 854) #(921 'WHILE' 855) #(921 'WIDTH' 856) #(921 'WINDOW' 857) #(921 'WINDOWS' 858) #(921 'WITH' 859) #(921 'WITHOUT' 862) #(921 'WORD' 863) #(921 'WORK' 864) #(921 'WORKSPACE' 865) #(921 'WRITE' 866) #(921 'WRITER' 867) #(921 'XML' 868) #(921 'XSD' 869) #(921 'XSDBOOL' 870) #(921 'YES' 871) #(921 'YYMMDD' 872) #(921 'ZERO' 874) #(921 'ZONE' 875) #(902 '%_FINAL' 2) #(902 '%_HINTS' 3) #(902 '%_PREDEFINED' 4) #(902 'ABS' 876) #(902 'ABSTRACT' 33) #(902 'ACCEPT' 34) #(902 'ACCEPTING' 35) #(902 'ACCESS' 36) #(902 'ACCORDING' 37) #(902 'ACTION' 38) #(902 'ACTIVATION' 39) #(902 'ACTUAL' 40) #(902 'ADABAS' 41) #(902 'ADD' 42) #(902 'ADJACENT' 44) #(902 'ALIAS' 45) #(902 'ALIASES' 46) #(902 'ALIGN' 47) #(902 'ALL' 48) #(902 'ALLOCATE' 49) #(902 'ALPHA' 50) #(902 'AMDP' 51) #(902 'ANALYSIS' 52) #(902 'ANALYZER' 53) #(902 'AND' 54) #(902 'ANY' 55) #(902 'APPEND' 56) #(902 'APPENDING' 57) #(902 'APPLICATION' 58) #(902 'ARCHIVE' 59) #(902 'AREA' 60) #(902 'ARITHMETIC' 61) #(902 'AS' 62) #(902 'AS400' 63) #(902 'ASCENDING' 64) #(902 'ASSERT' 65) #(902 'ASSIGN' 66) #(902 'ASSIGNED' 67) #(902 'ASSIGNING' 68) #(902 'ASSOCIATION' 69) #(902 'ASYNCHRONOUS' 70) #(902 'AT' 71) #(902 'ATTRIBUTES' 72) #(902 'AUGMENTING' 73) #(902 'AUTHORITY' 74) #(902 'AUTHORIZATION' 76) #(902 'AUTO' 77) #(902 'AVG' 78) #(902 'BACK' 79) #(902 'BACKGROUND' 80) #(902 'BACKWARD' 81) #(902 'BADI' 82) #(902 'BASE' 83) #(902 'BEFORE' 84) #(902 'BEGIN' 85) #(902 'BEHAVIOR' 86) #(902 'BETWEEN' 87) #(902 'BINARY' 88) #(902 'BIT' 89) #(902 'BLANK' 94) #(902 'BLANKS' 95) #(902 'BLOCK' 96) #(902 'BLOCKS' 97) #(902 'BOOLC' 98) #(902 'BOUND' 99) #(902 'BOUNDARIES' 100) #(902 'BOUNDS' 101) #(902 'BOXED' 102) #(902 'BREAK' 103) #(902 'BUFFER' 105) #(902 'BY' 106) #(902 'BYPASSING' 107) #(902 'BYTE' 108) #(902 'CA' 116) #(902 'CALL' 117) #(902 'CALLING' 118) #(902 'CASE' 119) #(902 'CAST' 120) #(902 'CASTING' 121) #(902 'CATCH' 122) #(902 'CDS' 123) #(902 'CEIL' 877) #(902 'CENTER' 124) #(902 'CENTERED' 125) #(902 'CHAIN' 126) #(902 'CHANGE' 129) #(902 'CHANGING' 130) #(902 'CHANNELS' 131) #(902 'CHAR' 132) #(902 'CHARACTER' 134) #(902 'CHECK' 135) #(902 'CHECKBOX' 136) #(902 'CID' 137) #(902 'CIRCULAR' 138) #(902 'CLASS' 139) #(902 'CLEANUP' 143) #(902 'CLEAR' 144) #(902 'CLIENT' 145) #(902 'CLIENTS' 146) #(902 'CLOCK' 147) #(902 'CLONE' 148) #(902 'CLOSE' 149) #(902 'CN' 150) #(902 'CO' 151) #(902 'COALESCE' 878) #(902 'CODE' 152) #(902 'COLLECT' 153) #(902 'COLOR' 154) #(902 'COLUMN' 155) #(902 'COLUMNS' 156) #(902 'COL_BACKGROUND' 157) #(902 'COL_GROUP' 158) #(902 'COL_HEADING' 159) #(902 'COL_KEY' 160) #(902 'COL_NEGATIVE' 161) #(902 'COL_NORMAL' 162) #(902 'COL_POSITIVE' 163) #(902 'COL_TOTAL' 164) #(902 'COMMENT' 165) #(902 'COMMENTS' 166) #(902 'COMMIT' 167) #(902 'COMMON' 168) #(902 'COMMUNICATION' 169) #(902 'COMPARING' 170) #(902 'COMPONENT' 171) #(902 'COMPONENTS' 172) #(902 'COMPRESSION' 173) #(902 'COMPUTE' 174) #(902 'CONCAT' 879) #(902 'CONCATENATE' 175) #(902 'CONCAT_WITH_SPACE' 880) #(902 'COND' 176) #(902 'CONDENSE' 177) #(902 'CONDITION' 178) #(902 'CONNECTION' 179) #(902 'CONSTANT' 180) #(902 'CONSTANTS' 181) #(902 'CONTEXT' 182) #(902 'CONTEXTS' 183) #(902 'CONTINUE' 184) #(902 'CONTROL' 185) #(902 'CONTROLS' 186) #(902 'CONV' 187) #(902 'CONVERSION' 188) #(902 'CONVERT' 189) #(902 'COPIES' 190) #(902 'COPY' 191) #(902 'CORRESPONDING' 192) #(902 'COUNT' 193) #(902 'COUNTRY' 194) #(902 'COVER' 195) #(902 'CP' 196) #(902 'CPI' 197) #(902 'CREATE' 198) #(902 'CRITICAL' 199) #(902 'CS' 200) #(902 'CURRENCY' 201) #(902 'CURRENT' 202) #(902 'CURSOR' 203) #(902 'DANGEROUS' 205) #(902 'DATA' 206) #(902 'DATABASE' 207) #(902 'DATAINFO' 208) #(902 'DATASET' 209) #(902 'DATE' 210) #(902 'DAYLIGHT' 211) #(902 'DB2' 212) #(902 'DB6' 213) #(902 'DDL' 216) #(902 'DDMMYY' 217) #(902 'DEALLOCATE' 218) #(902 'DEC' 219) #(902 'DECIMALS' 220) #(902 'DECLARATIONS' 221) #(902 'DEEP' 222) #(902 'DEFAULT' 223) #(902 'DEFERRED' 224) #(902 'DEFINE' 225) #(902 'DEFINITION' 226) #(902 'DELETE' 227) #(902 'DELETING' 228) #(902 'DEMAND' 229) #(902 'DEPARTMENT' 230) #(902 'DESCENDING' 231) #(902 'DESCRIBE' 232) #(902 'DESTINATION' 233) #(902 'DETAIL' 234) #(902 'DETERMINATION' 235) #(902 'DETERMINE' 236) #(902 'DIALOG' 237) #(902 'DID' 238) #(902 'DIRECTORY' 239) #(902 'DISCARDING' 240) #(902 'DISPLAY' 241) #(902 'DISTANCE' 243) #(902 'DISTINCT' 244) #(902 'DIV' 245) #(902 'DIVIDE' 246) #(902 'DO' 247) #(902 'DUMMY' 248) #(902 'DUPLICATE' 249) #(902 'DUPLICATES' 250) #(902 'DURATION' 251) #(902 'DURING' 252) #(902 'DYNPRO' 253) #(902 'EARLY' 254) #(902 'EDIT' 255) #(902 'ELSE' 257) #(902 'ELSEIF' 258) #(902 'EMPTY' 259) #(902 'ENABLED' 260) #(902 'ENABLING' 261) #(902 'ENCODING' 262) #(902 'END' 263) #(902 'ENDAT' 270) #(902 'ENDCASE' 271) #(902 'ENDCATCH' 272) #(902 'ENDCHAIN' 273) #(902 'ENDCLASS' 274) #(902 'ENDDO' 275) #(902 'ENDENHANCEMENT' 276) #(902 'ENDEXEC' 277) #(902 'ENDFORM' 278) #(902 'ENDFUNCTION' 279) #(902 'ENDIAN' 280) #(902 'ENDIF' 281) #(902 'ENDING' 282) #(902 'ENDINTERFACE' 283) #(902 'ENDLOOP' 284) #(902 'ENDMETHOD' 285) #(902 'ENDMODULE' 286) #(902 'ENDON' 287) #(902 'ENDPROVIDE' 288) #(902 'ENDSELECT' 289) #(902 'ENDTRY' 290) #(902 'ENDWHILE' 291) #(902 'ENDWITH' 292) #(902 'ENGINEERING' 293) #(902 'ENHANCEMENT' 294) #(902 'ENHANCEMENTS' 297) #(902 'ENTITIES' 298) #(902 'ENTITY' 299) #(902 'ENTRIES' 300) #(902 'ENTRY' 301) #(902 'ENUM' 302) #(902 'ENVIRONMENT' 303) #(902 'EQ' 304) #(902 'EQUIV' 305) #(902 'ERRORS' 306) #(902 'ESCAPE' 307) #(902 'ESCAPING' 308) #(902 'EVENT' 309) #(902 'EVENTS' 310) #(902 'EXACT' 311) #(902 'EXCEPT' 312) #(902 'EXCEPTION' 313) #(902 'EXCEPTIONS' 315) #(902 'EXCLUDE' 316) #(902 'EXCLUDING' 317) #(902 'EXEC' 318) #(902 'EXECUTE' 319) #(902 'EXISTS' 320) #(902 'EXIT' 321) #(902 'EXPANDING' 323) #(902 'EXPIRATION' 324) #(902 'EXPLICIT' 325) #(902 'EXPONENT' 326) #(902 'EXPORT' 327) #(902 'EXPORTING' 328) #(902 'EXTENDED' 329) #(902 'EXTENSION' 330) #(902 'EXTRACT' 331) #(902 'FAIL' 332) #(902 'FAILED' 333) #(902 'FEATURES' 334) #(902 'FETCH' 335) #(902 'FIELD' 336) #(902 'FIELDS' 340) #(902 'FILE' 341) #(902 'FILL' 342) #(902 'FILTER' 343) #(902 'FILTERS' 344) #(902 'FINAL' 345) #(902 'FIND' 346) #(902 'FIRST' 347) #(902 'FLOOR' 881) #(902 'FLTP' 350) #(902 'FLUSH' 351) #(902 'FONT' 352) #(902 'FOR' 353) #(902 'FORM' 354) #(902 'FORMAT' 355) #(902 'FORWARD' 356) #(902 'FOUND' 357) #(902 'FRAME' 358) #(902 'FRAMES' 359) #(902 'FREE' 360) #(902 'FRIENDS' 361) #(902 'FROM' 362) #(902 'FULL' 363) #(902 'FUNCTION' 364) #(902 'FURTHER' 366) #(902 'GE' 367) #(902 'GENERATE' 368) #(902 'GET' 369) #(902 'GIVING' 370) #(902 'GLOBAL' 371) #(902 'GRAPH' 372) #(902 'GROUP' 373) #(902 'GROUPS' 374) #(902 'GT' 375) #(902 'HANDLE' 376) #(902 'HANDLER' 377) #(902 'HARMLESS' 378) #(902 'HASHED' 379) #(902 'HAVING' 380) #(902 'HDB' 381) #(902 'HEADER' 382) #(902 'HEADERS' 383) #(902 'HEADING' 384) #(902 'HIDE' 387) #(902 'HIERARCHY' 388) #(902 'HIGH' 389) #(902 'HINT' 390) #(902 'HOLD' 391) #(902 'HOTSPOT' 392) #(902 'ICON' 393) #(902 'ID' 394) #(902 'IDENTIFICATION' 395) #(902 'IDENTIFIER' 396) #(902 'IDS' 397) #(902 'IF' 398) #(902 'IGNORE' 399) #(902 'IGNORING' 400) #(902 'IMMEDIATELY' 401) #(902 'IMPLEMENTATION' 402) #(902 'IMPLEMENTED' 403) #(902 'IMPLICIT' 404) #(902 'IMPORT' 405) #(902 'IMPORTING' 406) #(902 'IN' 407) #(902 'INACTIVE' 408) #(902 'INCL' 409) #(902 'INCLUDE' 410) #(902 'INCLUDES' 411) #(902 'INCREMENT' 412) #(902 'INDEX' 413) #(902 'INFORMIX' 415) #(902 'INFOTYPES' 416) #(902 'INHERITING' 417) #(902 'INIT' 418) #(902 'INITIAL' 419) #(902 'INITIALIZATION' 420) #(902 'INNER' 421) #(902 'INPUT' 422) #(902 'INSERT' 423) #(902 'INSTANCE' 424) #(902 'INSTANCES' 425) #(902 'INT2' 426) #(902 'INT4' 427) #(902 'INT8' 428) #(902 'INTENSIFIED' 429) #(902 'INTERFACE' 430) #(902 'INTERFACES' 431) #(902 'INTERNAL' 432) #(902 'INTERVALS' 433) #(902 'INTO' 434) #(902 'INVERSE' 435) #(902 'IS' 437) #(902 'ISO' 438) #(902 'JOB' 439) #(902 'JOIN' 440) #(902 'KEEP' 441) #(902 'KEEPING' 442) #(902 'KERNEL' 443) #(902 'KEY' 444) #(902 'KEYS' 445) #(902 'KEYWORDS' 446) #(902 'KIND' 447) #(902 'LANGUAGE' 448) #(902 'LAST' 449) #(902 'LATE' 450) #(902 'LAYOUT' 451) #(902 'LE' 452) #(902 'LEADING' 453) #(902 'LEAVE' 454) #(902 'LEFT' 455) #(902 'LEFTPLUS' 457) #(902 'LEFTSPACE' 458) #(902 'LEGACY' 459) #(902 'LENGTH' 460) #(902 'LET' 461) #(902 'LEVEL' 462) #(902 'LEVELS' 463) #(902 'LIKE' 464) #(902 'LINE' 465) #(902 'LINEFEED' 469) #(902 'LINES' 470) #(902 'LINK' 471) #(902 'LIST' 472) #(902 'LISTBOX' 474) #(902 'LOAD' 475) #(902 'LOCAL' 477) #(902 'LOCALE' 478) #(902 'LOCK' 479) #(902 'LOCKS' 480) #(902 'LOGFILE' 482) #(902 'LOGICAL' 483) #(902 'LONG' 484) #(902 'LOOP' 485) #(902 'LOW' 486) #(902 'LOWER' 487) #(902 'LPI' 488) #(902 'LT' 489) #(902 'LTRIM' 882) #(902 'MAIN' 491) #(902 'MAPPED' 492) #(902 'MAPPING' 493) #(902 'MARGIN' 494) #(902 'MARK' 495) #(902 'MASK' 496) #(902 'MATCH' 497) #(902 'MATCHCODE' 498) #(902 'MAX' 499) #(902 'MAXIMUM' 500) #(902 'MEDIUM' 501) #(902 'MEMBERS' 502) #(902 'MEMORY' 503) #(902 'MESH' 504) #(902 'MESSAGE' 505) #(902 'MESSAGES' 507) #(902 'MESSAGING' 508) #(902 'METHOD' 509) #(902 'METHODS' 510) #(902 'MIN' 511) #(902 'MMDDYY' 514) #(902 'MOD' 515) #(902 'MODE' 516) #(902 'MODIF' 517) #(902 'MODIFIER' 518) #(902 'MODIFY' 519) #(902 'MODULE' 520) #(902 'MOVE' 521) #(902 'MSSQLNT' 523) #(902 'MULTIPLY' 524) #(902 'NA' 526) #(902 'NAME' 527) #(902 'NAMETAB' 528) #(902 'NATIVE' 529) #(902 'NE' 530) #(902 'NESTED' 531) #(902 'NESTING' 532) #(902 'NEW' 533) #(902 'NEXT' 537) #(902 'NO' 538) #(902 'NODES' 550) #(902 'NOT' 553) #(902 'NP' 554) #(902 'NS' 555) #(902 'NULL' 556) #(902 'NUMBER' 557) #(902 'NUMBERING' 558) #(902 'NUMC' 559) #(902 'OBJECT' 561) #(902 'OBJECTS' 562) #(902 'OBJMGR' 563) #(902 'OBLIGATORY' 564) #(902 'OCCURENCE' 565) #(902 'OCCURENCES' 566) #(902 'OCCURRENCE' 567) #(902 'OCCURRENCES' 568) #(902 'OCCURS' 569) #(902 'OF' 570) #(902 'OFF' 571) #(902 'OFFSET' 572) #(902 'ON' 573) #(902 'ONE' 574) #(902 'ONLY' 575) #(902 'OPEN' 576) #(902 'OPTION' 577) #(902 'OPTIONAL' 578) #(902 'OPTIONS' 579) #(902 'OR' 580) #(902 'ORACLE' 581) #(902 'ORDER' 582) #(902 'OTHERS' 583) #(902 'OUT' 584) #(902 'OUTER' 585) #(902 'OUTPUT' 586) #(902 'OVERFLOW' 588) #(902 'OVERLAY' 589) #(902 'PACK' 590) #(902 'PACKAGE' 591) #(902 'PAD' 592) #(902 'PADDING' 593) #(902 'PAGE' 594) #(902 'PAGES' 595) #(902 'PARAMETER' 596) #(902 'PARAMETERS' 598) #(902 'PART' 599) #(902 'PARTIALLY' 600) #(902 'PCRE' 601) #(902 'PERCENTAGE' 602) #(902 'PERFORM' 603) #(902 'PERFORMING' 604) #(902 'PERMISSIONS' 605) #(902 'PLACES' 607) #(902 'POOL' 608) #(902 'POSITION' 609) #(902 'POS_HIGH' 610) #(902 'POS_LOW' 611) #(902 'PRAGMAS' 612) #(902 'PRECHECK' 613) #(902 'PRECOMPILED' 614) #(902 'PREFERRED' 615) #(902 'PRESERVING' 616) #(902 'PRIMARY' 617) #(902 'PRINT' 618) #(902 'PRIVATE' 620) #(902 'PRIVILEGED' 621) #(902 'PROCEDURE' 622) #(902 'PROGRAM' 623) #(902 'PROPERTY' 624) #(902 'PROTECTED' 625) #(902 'PROVIDE' 626) #(902 'PUBLIC' 627) #(902 'PUSH' 628) #(902 'PUSHBUTTON' 629) #(902 'PUT' 630) #(902 'QUEUEONLY' 632) #(902 'QUICKINFO' 633) #(902 'RADIOBUTTON' 634) #(902 'RAISE' 635) #(902 'RAISING' 636) #(902 'RANGE' 637) #(902 'RANGES' 638) #(902 'RAW' 639) #(902 'READ' 640) #(902 'RECEIVE' 642) #(902 'RECEIVED' 643) #(902 'RECEIVER' 644) #(902 'RECEIVING' 645) #(902 'REDEFINITION' 646) #(902 'REDUCE' 647) #(902 'REF' 648) #(902 'REFERENCE' 649) #(902 'REFRESH' 650) #(902 'REGEX' 651) #(902 'REJECT' 652) #(902 'RELATING' 653) #(902 'RENAMING' 654) #(902 'REPLACE' 655) #(902 'REPLACEMENT' 656) #(902 'REPLACING' 657) #(902 'REPORT' 658) #(902 'REPORTED' 659) #(902 'REQUEST' 660) #(902 'REQUESTED' 661) #(902 'REQUIRED' 662) #(902 'RESERVE' 663) #(902 'RESET' 664) #(902 'RESOLUTION' 665) #(902 'RESPECTING' 666) #(902 'RESPONSE' 667) #(902 'RESPONSES' 668) #(902 'RESULT' 669) #(902 'RESULTS' 670) #(902 'RESUMABLE' 671) #(902 'RESUME' 672) #(902 'RETRY' 673) #(902 'RETURN' 674) #(902 'RETURNCODE' 675) #(902 'RETURNING' 676) #(902 'RIGHT' 677) #(902 'RIGHTPLUS' 679) #(902 'RIGHTSPACE' 680) #(902 'RISK' 681) #(902 'ROLLBACK' 682) #(902 'ROUND' 683) #(902 'ROWS' 684) #(902 'RTRIM' 883) #(902 'RUN' 685) #(902 'SAP' 686) #(902 'SAVE' 688) #(902 'SAVING' 689) #(902 'SCALE_PRESERVING' 690) #(902 'SCALE_PRESERVING_SCIENTIFIC' 691) #(902 'SCAN' 692) #(902 'SCIENTIFIC' 693) #(902 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(902 'SCREEN' 695) #(902 'SCROLL' 696) #(902 'SCROLLING' 698) #(902 'SEARCH' 699) #(902 'SECONDARY' 700) #(902 'SECONDS' 701) #(902 'SECTION' 702) #(902 'SELECT' 703) #(902 'SELECTION' 705) #(902 'SELECTIONS' 710) #(902 'SEND' 711) #(902 'SEPARATE' 712) #(902 'SEPARATED' 713) #(902 'SESSION' 714) #(902 'SET' 715) #(902 'SHARED' 716) #(902 'SHIFT' 717) #(902 'SHORT' 718) #(902 'SHORTDUMP' 719) #(902 'SIGN' 721) #(902 'SIGN_AS_POSTFIX' 722) #(902 'SIMPLE' 723) #(902 'SIMULATION' 724) #(902 'SINGLE' 725) #(902 'SIZE' 726) #(902 'SKIP' 727) #(902 'SKIPPING' 728) #(902 'SMART' 729) #(902 'SOME' 730) #(902 'SORT' 731) #(902 'SORTABLE' 732) #(902 'SORTED' 733) #(902 'SOURCE' 734) #(902 'SPACE' 735) #(902 'SPECIFIED' 736) #(902 'SPLIT' 737) #(902 'SPOOL' 738) #(902 'SPOTS' 739) #(902 'SQL' 740) #(902 'SQLSCRIPT' 741) #(902 'STABLE' 742) #(902 'STAMP' 743) #(902 'STANDARD' 744) #(902 'STARTING' 746) #(902 'STATE' 747) #(902 'STATEMENT' 748) #(902 'STATEMENTS' 749) #(902 'STATIC' 750) #(902 'STATICS' 751) #(902 'STATUSINFO' 752) #(902 'STEP' 753) #(902 'STOP' 755) #(902 'STRUCTURE' 756) #(902 'STRUCTURES' 757) #(902 'STYLE' 758) #(902 'SUBKEY' 759) #(902 'SUBMATCHES' 760) #(902 'SUBMIT' 761) #(902 'SUBROUTINE' 762) #(902 'SUBSCREEN' 763) #(902 'SUBSTRING' 764) #(902 'SUBTRACT' 765) #(902 'SUFFIX' 767) #(902 'SUM' 768) #(902 'SUMMARY' 769) #(902 'SUPPLIED' 770) #(902 'SUPPLY' 771) #(902 'SUPPRESS' 772) #(902 'SWITCH' 773) #(902 'SYBASE' 774) #(902 'SYMBOL' 775) #(902 'T000' 779) #(902 'TAB' 780) #(902 'TABBED' 781) #(902 'TABLE' 782) #(902 'TABLES' 783) #(902 'TABLEVIEW' 784) #(902 'TABSTRIP' 785) #(902 'TARGET' 786) #(902 'TASK' 787) #(902 'TASKS' 788) #(902 'TEST' 789) #(902 'TESTING' 792) #(902 'TEXT' 793) #(902 'TEXTPOOL' 794) #(902 'THEN' 795) #(902 'THROW' 796) #(902 'TIME' 797) #(902 'TIMES' 798) #(902 'TIMESTAMP' 799) #(902 'TIMEZONE' 800) #(902 'TITLE' 801) #(902 'TITLEBAR' 802) #(902 'TO' 803) #(902 'TOKENIZATION' 804) #(902 'TOKENS' 805) #(902 'TRAILING' 810) #(902 'TRANSACTION' 811) #(902 'TRANSFER' 812) #(902 'TRANSFORMATION' 813) #(902 'TRANSLATE' 814) #(902 'TRANSPORTING' 815) #(902 'TRMAC' 816) #(902 'TRUNCATION' 817) #(902 'TRY' 818) #(902 'TYPE' 819) #(902 'TYPES' 822) #(902 'ULINE' 823) #(902 'UNASSIGN' 824) #(902 'UNDER' 825) #(902 'UNICODE' 826) #(902 'UNION' 827) #(902 'UNIQUE' 828) #(902 'UNIT' 829) #(902 'UNIX' 830) #(902 'UNPACK' 831) #(902 'UNTIL' 832) #(902 'UNWIND' 833) #(902 'UP' 834) #(902 'UPDATE' 835) #(902 'UPPER' 836) #(902 'USER' 837) #(902 'USING' 839) #(902 'UTCLONG' 840) #(902 'UUID' 884) #(902 'VALID' 842) #(902 'VALIDATE' 843) #(902 'VALUE' 844) #(902 'VALUES' 846) #(902 'VARY' 847) #(902 'VARYING' 848) #(902 'VERSION' 849) #(902 'VIA' 850) #(902 'VISIBLE' 851) #(902 'WAIT' 852) #(902 'WHEN' 853) #(902 'WHERE' 854) #(902 'WHILE' 855) #(902 'WIDTH' 856) #(902 'WINDOW' 857) #(902 'WINDOWS' 858) #(902 'WITH' 859) #(902 'WITHOUT' 862) #(902 'WORD' 863) #(902 'WORK' 864) #(902 'WORKSPACE' 865) #(902 'WRITE' 866) #(902 'WRITER' 867) #(902 'XML' 868) #(902 'XSD' 869) #(902 'XSDBOOL' 870) #(902 'YES' 871) #(902 'YYMMDD' 872) #(902 'ZERO' 874) #(902 'ZONE' 875) #(26 '=>' 896) #(922 'ABS' 876) #(922 'ABSTRACT' 33) #(922 'ACCEPT' 34) #(922 'ACCEPTING' 35) #(922 'ACCESS' 36) #(922 'ACCORDING' 37) #(922 'ACTION' 38) #(922 'ACTIVATION' 39) #(922 'ACTUAL' 40) #(922 'ADABAS' 41) #(922 'ADD' 42) #(922 'ADJACENT' 44) #(922 'ALIAS' 45) #(922 'ALIASES' 46) #(922 'ALIGN' 47) #(922 'ALL' 48) #(922 'ALLOCATE' 49) #(922 'ALPHA' 50) #(922 'AMDP' 51) #(922 'ANALYSIS' 52) #(922 'ANALYZER' 53) #(922 'AND' 54) #(922 'ANY' 55) #(922 'APPEND' 56) #(922 'APPENDING' 57) #(922 'APPLICATION' 58) #(922 'ARCHIVE' 59) #(922 'AREA' 60) #(922 'ARITHMETIC' 61) #(922 'AS' 62) #(922 'AS400' 63) #(922 'ASCENDING' 64) #(922 'ASSERT' 65) #(922 'ASSIGN' 66) #(922 'ASSIGNED' 67) #(922 'ASSIGNING' 68) #(922 'ASSOCIATION' 69) #(922 'ASYNCHRONOUS' 70) #(922 'AT' 71) #(922 'ATTRIBUTES' 72) #(922 'AUGMENTING' 73) #(922 'AUTHORITY' 74) #(922 'AUTHORIZATION' 76) #(922 'AUTO' 77) #(922 'AVG' 78) #(922 'BACK' 79) #(922 'BACKGROUND' 80) #(922 'BACKWARD' 81) #(922 'BADI' 82) #(922 'BASE' 83) #(922 'BEFORE' 84) #(922 'BEGIN' 85) #(922 'BEHAVIOR' 86) #(922 'BETWEEN' 87) #(922 'BINARY' 88) #(922 'BIT' 89) #(922 'BLANK' 94) #(922 'BLANKS' 95) #(922 'BLOCK' 96) #(922 'BLOCKS' 97) #(922 'BOOLC' 98) #(922 'BOUND' 99) #(922 'BOUNDARIES' 100) #(922 'BOUNDS' 101) #(922 'BOXED' 102) #(922 'BREAK' 103) #(922 'BUFFER' 105) #(922 'BY' 106) #(922 'BYPASSING' 107) #(922 'BYTE' 108) #(922 'CA' 116) #(922 'CALL' 117) #(922 'CALLING' 118) #(922 'CASE' 119) #(922 'CAST' 120) #(922 'CASTING' 121) #(922 'CATCH' 122) #(922 'CDS' 123) #(922 'CEIL' 877) #(922 'CENTER' 124) #(922 'CENTERED' 125) #(922 'CHAIN' 126) #(922 'CHANGE' 129) #(922 'CHANGING' 130) #(922 'CHANNELS' 131) #(922 'CHAR' 132) #(922 'CHARACTER' 134) #(922 'CHECK' 135) #(922 'CHECKBOX' 136) #(922 'CID' 137) #(922 'CIRCULAR' 138) #(922 'CLASS' 139) #(922 'CLEANUP' 143) #(922 'CLEAR' 144) #(922 'CLIENT' 145) #(922 'CLIENTS' 146) #(922 'CLOCK' 147) #(922 'CLONE' 148) #(922 'CLOSE' 149) #(922 'CN' 150) #(922 'CO' 151) #(922 'COALESCE' 878) #(922 'CODE' 152) #(922 'COLLECT' 153) #(922 'COLOR' 154) #(922 'COLUMN' 155) #(922 'COLUMNS' 156) #(922 'COL_BACKGROUND' 157) #(922 'COL_GROUP' 158) #(922 'COL_HEADING' 159) #(922 'COL_KEY' 160) #(922 'COL_NEGATIVE' 161) #(922 'COL_NORMAL' 162) #(922 'COL_POSITIVE' 163) #(922 'COL_TOTAL' 164) #(922 'COMMENT' 165) #(922 'COMMENTS' 166) #(922 'COMMIT' 167) #(922 'COMMON' 168) #(922 'COMMUNICATION' 169) #(922 'COMPARING' 170) #(922 'COMPONENT' 171) #(922 'COMPONENTS' 172) #(922 'COMPRESSION' 173) #(922 'COMPUTE' 174) #(922 'CONCAT' 879) #(922 'CONCATENATE' 175) #(922 'CONCAT_WITH_SPACE' 880) #(922 'COND' 176) #(922 'CONDENSE' 177) #(922 'CONDITION' 178) #(922 'CONNECTION' 179) #(922 'CONSTANT' 180) #(922 'CONSTANTS' 181) #(922 'CONTEXT' 182) #(922 'CONTEXTS' 183) #(922 'CONTINUE' 184) #(922 'CONTROL' 185) #(922 'CONTROLS' 186) #(922 'CONV' 187) #(922 'CONVERSION' 188) #(922 'CONVERT' 189) #(922 'COPIES' 190) #(922 'COPY' 191) #(922 'CORRESPONDING' 192) #(922 'COUNT' 193) #(922 'COUNTRY' 194) #(922 'COVER' 195) #(922 'CP' 196) #(922 'CPI' 197) #(922 'CREATE' 198) #(922 'CRITICAL' 199) #(922 'CS' 200) #(922 'CURRENCY' 201) #(922 'CURRENT' 202) #(922 'CURSOR' 203) #(922 'DANGEROUS' 205) #(922 'DATA' 206) #(922 'DATABASE' 207) #(922 'DATAINFO' 208) #(922 'DATASET' 209) #(922 'DATE' 210) #(922 'DAYLIGHT' 211) #(922 'DB2' 212) #(922 'DB6' 213) #(922 'DD/MM/YY' 214) #(922 'DD/MM/YYYY' 215) #(922 'DDL' 216) #(922 'DDMMYY' 217) #(922 'DEALLOCATE' 218) #(922 'DEC' 219) #(922 'DECIMALS' 220) #(922 'DECLARATIONS' 221) #(922 'DEEP' 222) #(922 'DEFAULT' 223) #(922 'DEFERRED' 224) #(922 'DEFINE' 225) #(922 'DEFINITION' 226) #(922 'DELETE' 227) #(922 'DELETING' 228) #(922 'DEMAND' 229) #(922 'DEPARTMENT' 230) #(922 'DESCENDING' 231) #(922 'DESCRIBE' 232) #(922 'DESTINATION' 233) #(922 'DETAIL' 234) #(922 'DETERMINATION' 235) #(922 'DETERMINE' 236) #(922 'DIALOG' 237) #(922 'DID' 238) #(922 'DIRECTORY' 239) #(922 'DISCARDING' 240) #(922 'DISPLAY' 241) #(922 'DISTANCE' 243) #(922 'DISTINCT' 244) #(922 'DIV' 245) #(922 'DIVIDE' 246) #(922 'DO' 247) #(922 'DUMMY' 248) #(922 'DUPLICATE' 249) #(922 'DUPLICATES' 250) #(922 'DURATION' 251) #(922 'DURING' 252) #(922 'DYNPRO' 253) #(922 'EARLY' 254) #(922 'EDIT' 255) #(922 'ELSE' 257) #(922 'ELSEIF' 258) #(922 'EMPTY' 259) #(922 'ENABLED' 260) #(922 'ENABLING' 261) #(922 'ENCODING' 262) #(922 'END' 263) #(922 'ENDAT' 270) #(922 'ENDCASE' 271) #(922 'ENDCATCH' 272) #(922 'ENDCHAIN' 273) #(922 'ENDCLASS' 274) #(922 'ENDDO' 275) #(922 'ENDENHANCEMENT' 276) #(922 'ENDEXEC' 277) #(922 'ENDFORM' 278) #(922 'ENDFUNCTION' 279) #(922 'ENDIAN' 280) #(922 'ENDIF' 281) #(922 'ENDING' 282) #(922 'ENDINTERFACE' 283) #(922 'ENDLOOP' 284) #(922 'ENDMETHOD' 285) #(922 'ENDMODULE' 286) #(922 'ENDON' 287) #(922 'ENDPROVIDE' 288) #(922 'ENDSELECT' 289) #(922 'ENDTRY' 290) #(922 'ENDWHILE' 291) #(922 'ENDWITH' 292) #(922 'ENGINEERING' 293) #(922 'ENHANCEMENT' 294) #(922 'ENHANCEMENTS' 297) #(922 'ENTITIES' 298) #(922 'ENTITY' 299) #(922 'ENTRIES' 300) #(922 'ENTRY' 301) #(922 'ENUM' 302) #(922 'ENVIRONMENT' 303) #(922 'EQ' 304) #(922 'EQUIV' 305) #(922 'ERRORS' 306) #(922 'ESCAPE' 307) #(922 'ESCAPING' 308) #(922 'EVENT' 309) #(922 'EVENTS' 310) #(922 'EXACT' 311) #(922 'EXCEPT' 312) #(922 'EXCEPTION' 313) #(922 'EXCEPTIONS' 315) #(922 'EXCLUDE' 316) #(922 'EXCLUDING' 317) #(922 'EXEC' 318) #(922 'EXECUTE' 319) #(922 'EXISTS' 320) #(922 'EXIT' 321) #(922 'EXPANDING' 323) #(922 'EXPIRATION' 324) #(922 'EXPLICIT' 325) #(922 'EXPONENT' 326) #(922 'EXPORT' 327) #(922 'EXPORTING' 328) #(922 'EXTENDED' 329) #(922 'EXTENSION' 330) #(922 'EXTRACT' 331) #(922 'FAIL' 332) #(922 'FAILED' 333) #(922 'FEATURES' 334) #(922 'FETCH' 335) #(922 'FIELD' 336) #(922 'FIELDS' 340) #(922 'FILE' 341) #(922 'FILL' 342) #(922 'FILTER' 343) #(922 'FILTERS' 344) #(922 'FINAL' 345) #(922 'FIND' 346) #(922 'FIRST' 347) #(922 'FLOOR' 881) #(922 'FLTP' 350) #(922 'FLUSH' 351) #(922 'FONT' 352) #(922 'FOR' 353) #(922 'FORM' 354) #(922 'FORMAT' 355) #(922 'FORWARD' 356) #(922 'FOUND' 357) #(922 'FRAME' 358) #(922 'FRAMES' 359) #(922 'FREE' 360) #(922 'FRIENDS' 361) #(922 'FROM' 362) #(922 'FULL' 363) #(922 'FUNCTION' 364) #(922 'FURTHER' 366) #(922 'GE' 367) #(922 'GENERATE' 368) #(922 'GET' 369) #(922 'GIVING' 370) #(922 'GLOBAL' 371) #(922 'GRAPH' 372) #(922 'GROUP' 373) #(922 'GROUPS' 374) #(922 'GT' 375) #(922 'HANDLE' 376) #(922 'HANDLER' 377) #(922 'HARMLESS' 378) #(922 'HASHED' 379) #(922 'HAVING' 380) #(922 'HDB' 381) #(922 'HEADER' 382) #(922 'HEADERS' 383) #(922 'HEADING' 384) #(922 'HIDE' 387) #(922 'HIERARCHY' 388) #(922 'HIGH' 389) #(922 'HINT' 390) #(922 'HOLD' 391) #(922 'HOTSPOT' 392) #(922 'ICON' 393) #(922 'ID' 394) #(922 'IDENTIFICATION' 395) #(922 'IDENTIFIER' 396) #(922 'IDS' 397) #(922 'IF' 398) #(922 'IGNORE' 399) #(922 'IGNORING' 400) #(922 'IMMEDIATELY' 401) #(922 'IMPLEMENTATION' 402) #(922 'IMPLEMENTED' 403) #(922 'IMPLICIT' 404) #(922 'IMPORT' 405) #(922 'IMPORTING' 406) #(922 'IN' 407) #(922 'INACTIVE' 408) #(922 'INCL' 409) #(922 'INCLUDE' 410) #(922 'INCLUDES' 411) #(922 'INCREMENT' 412) #(922 'INDEX' 413) #(922 'INFORMIX' 415) #(922 'INFOTYPES' 416) #(922 'INHERITING' 417) #(922 'INIT' 418) #(922 'INITIAL' 419) #(922 'INITIALIZATION' 420) #(922 'INNER' 421) #(922 'INPUT' 422) #(922 'INSERT' 423) #(922 'INSTANCE' 424) #(922 'INSTANCES' 425) #(922 'INT2' 426) #(922 'INT4' 427) #(922 'INT8' 428) #(922 'INTENSIFIED' 429) #(922 'INTERFACE' 430) #(922 'INTERFACES' 431) #(922 'INTERNAL' 432) #(922 'INTERVALS' 433) #(922 'INTO' 434) #(922 'INVERSE' 435) #(922 'IS' 437) #(922 'ISO' 438) #(922 'JOB' 439) #(922 'JOIN' 440) #(922 'KEEP' 441) #(922 'KEEPING' 442) #(922 'KERNEL' 443) #(922 'KEY' 444) #(922 'KEYS' 445) #(922 'KEYWORDS' 446) #(922 'KIND' 447) #(922 'LANGUAGE' 448) #(922 'LAST' 449) #(922 'LATE' 450) #(922 'LAYOUT' 451) #(922 'LE' 452) #(922 'LEADING' 453) #(922 'LEAVE' 454) #(922 'LEFT' 455) #(922 'LEFTPLUS' 457) #(922 'LEFTSPACE' 458) #(922 'LEGACY' 459) #(922 'LENGTH' 460) #(922 'LET' 461) #(922 'LEVEL' 462) #(922 'LEVELS' 463) #(922 'LIKE' 464) #(922 'LINE' 465) #(922 'LINEFEED' 469) #(922 'LINES' 470) #(922 'LINK' 471) #(922 'LIST' 472) #(922 'LISTBOX' 474) #(922 'LOAD' 475) #(922 'LOCAL' 477) #(922 'LOCALE' 478) #(922 'LOCK' 479) #(922 'LOCKS' 480) #(922 'LOGFILE' 482) #(922 'LOGICAL' 483) #(922 'LONG' 484) #(922 'LOOP' 485) #(922 'LOW' 486) #(922 'LOWER' 487) #(922 'LPI' 488) #(922 'LT' 489) #(922 'LTRIM' 882) #(922 'MAIN' 491) #(922 'MAPPED' 492) #(922 'MAPPING' 493) #(922 'MARGIN' 494) #(922 'MARK' 495) #(922 'MASK' 496) #(922 'MATCH' 497) #(922 'MATCHCODE' 498) #(922 'MAX' 499) #(922 'MAXIMUM' 500) #(922 'MEDIUM' 501) #(922 'MEMBERS' 502) #(922 'MEMORY' 503) #(922 'MESH' 504) #(922 'MESSAGE' 505) #(922 'MESSAGES' 507) #(922 'MESSAGING' 508) #(922 'METHOD' 509) #(922 'METHODS' 510) #(922 'MIN' 511) #(922 'MM/DD/YY' 512) #(922 'MM/DD/YYYY' 513) #(922 'MMDDYY' 514) #(922 'MOD' 515) #(922 'MODE' 516) #(922 'MODIF' 517) #(922 'MODIFIER' 518) #(922 'MODIFY' 519) #(922 'MODULE' 520) #(922 'MOVE' 521) #(922 'MSSQLNT' 523) #(922 'MULTIPLY' 524) #(922 'NA' 526) #(922 'NAME' 527) #(922 'NAMETAB' 528) #(922 'NATIVE' 529) #(922 'NE' 530) #(922 'NESTED' 531) #(922 'NESTING' 532) #(922 'NEW' 533) #(922 'NEXT' 537) #(922 'NO' 538) #(922 'NODES' 550) #(922 'NOT' 553) #(922 'NP' 554) #(922 'NS' 555) #(922 'NULL' 556) #(922 'NUMBER' 557) #(922 'NUMBERING' 558) #(922 'NUMC' 559) #(922 'OBJECT' 561) #(922 'OBJECTS' 562) #(922 'OBJMGR' 563) #(922 'OBLIGATORY' 564) #(922 'OCCURENCE' 565) #(922 'OCCURENCES' 566) #(922 'OCCURRENCE' 567) #(922 'OCCURRENCES' 568) #(922 'OCCURS' 569) #(922 'OF' 570) #(922 'OFF' 571) #(922 'OFFSET' 572) #(922 'ON' 573) #(922 'ONE' 574) #(922 'ONLY' 575) #(922 'OPEN' 576) #(922 'OPTION' 577) #(922 'OPTIONAL' 578) #(922 'OPTIONS' 579) #(922 'OR' 580) #(922 'ORACLE' 581) #(922 'ORDER' 582) #(922 'OTHERS' 583) #(922 'OUT' 584) #(922 'OUTER' 585) #(922 'OUTPUT' 586) #(922 'OVERFLOW' 588) #(922 'OVERLAY' 589) #(922 'PACK' 590) #(922 'PACKAGE' 591) #(922 'PAD' 592) #(922 'PADDING' 593) #(922 'PAGE' 594) #(922 'PAGES' 595) #(922 'PARAMETER' 596) #(922 'PARAMETERS' 598) #(922 'PART' 599) #(922 'PARTIALLY' 600) #(922 'PCRE' 601) #(922 'PERCENTAGE' 602) #(922 'PERFORM' 603) #(922 'PERFORMING' 604) #(922 'PERMISSIONS' 605) #(922 'PLACES' 607) #(922 'POOL' 608) #(922 'POSITION' 609) #(922 'POS_HIGH' 610) #(922 'POS_LOW' 611) #(922 'PRAGMAS' 612) #(922 'PRECHECK' 613) #(922 'PRECOMPILED' 614) #(922 'PREFERRED' 615) #(922 'PRESERVING' 616) #(922 'PRIMARY' 617) #(922 'PRINT' 618) #(922 'PRIVATE' 620) #(922 'PRIVILEGED' 621) #(922 'PROCEDURE' 622) #(922 'PROGRAM' 623) #(922 'PROPERTY' 624) #(922 'PROTECTED' 625) #(922 'PROVIDE' 626) #(922 'PUBLIC' 627) #(922 'PUSH' 628) #(922 'PUSHBUTTON' 629) #(922 'PUT' 630) #(922 'QUEUEONLY' 632) #(922 'QUICKINFO' 633) #(922 'RADIOBUTTON' 634) #(922 'RAISE' 635) #(922 'RAISING' 636) #(922 'RANGE' 637) #(922 'RANGES' 638) #(922 'RAW' 639) #(922 'READ' 640) #(922 'RECEIVE' 642) #(922 'RECEIVED' 643) #(922 'RECEIVER' 644) #(922 'RECEIVING' 645) #(922 'REDEFINITION' 646) #(922 'REDUCE' 647) #(922 'REF' 648) #(922 'REFERENCE' 649) #(922 'REFRESH' 650) #(922 'REGEX' 651) #(922 'REJECT' 652) #(922 'RELATING' 653) #(922 'RENAMING' 654) #(922 'REPLACE' 655) #(922 'REPLACEMENT' 656) #(922 'REPLACING' 657) #(922 'REPORT' 658) #(922 'REPORTED' 659) #(922 'REQUEST' 660) #(922 'REQUESTED' 661) #(922 'REQUIRED' 662) #(922 'RESERVE' 663) #(922 'RESET' 664) #(922 'RESOLUTION' 665) #(922 'RESPECTING' 666) #(922 'RESPONSE' 667) #(922 'RESPONSES' 668) #(922 'RESULT' 669) #(922 'RESULTS' 670) #(922 'RESUMABLE' 671) #(922 'RESUME' 672) #(922 'RETRY' 673) #(922 'RETURN' 674) #(922 'RETURNCODE' 675) #(922 'RETURNING' 676) #(922 'RIGHT' 677) #(922 'RIGHTPLUS' 679) #(922 'RIGHTSPACE' 680) #(922 'RISK' 681) #(922 'ROLLBACK' 682) #(922 'ROUND' 683) #(922 'ROWS' 684) #(922 'RTRIM' 883) #(922 'RUN' 685) #(922 'SAP' 686) #(922 'SAVE' 688) #(922 'SAVING' 689) #(922 'SCALE_PRESERVING' 690) #(922 'SCALE_PRESERVING_SCIENTIFIC' 691) #(922 'SCAN' 692) #(922 'SCIENTIFIC' 693) #(922 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(922 'SCREEN' 695) #(922 'SCROLL' 696) #(922 'SCROLLING' 698) #(922 'SEARCH' 699) #(922 'SECONDARY' 700) #(922 'SECONDS' 701) #(922 'SECTION' 702) #(922 'SELECT' 703) #(922 'SELECTION' 705) #(922 'SELECTIONS' 710) #(922 'SEND' 711) #(922 'SEPARATE' 712) #(922 'SEPARATED' 713) #(922 'SESSION' 714) #(922 'SET' 715) #(922 'SHARED' 716) #(922 'SHIFT' 717) #(922 'SHORT' 718) #(922 'SHORTDUMP' 719) #(922 'SIGN' 721) #(922 'SIGN_AS_POSTFIX' 722) #(922 'SIMPLE' 723) #(922 'SIMULATION' 724) #(922 'SINGLE' 725) #(922 'SIZE' 726) #(922 'SKIP' 727) #(922 'SKIPPING' 728) #(922 'SMART' 729) #(922 'SOME' 730) #(922 'SORT' 731) #(922 'SORTABLE' 732) #(922 'SORTED' 733) #(922 'SOURCE' 734) #(922 'SPACE' 735) #(922 'SPECIFIED' 736) #(922 'SPLIT' 737) #(922 'SPOOL' 738) #(922 'SPOTS' 739) #(922 'SQL' 740) #(922 'SQLSCRIPT' 741) #(922 'STABLE' 742) #(922 'STAMP' 743) #(922 'STANDARD' 744) #(922 'STARTING' 746) #(922 'STATE' 747) #(922 'STATEMENT' 748) #(922 'STATEMENTS' 749) #(922 'STATIC' 750) #(922 'STATICS' 751) #(922 'STATUSINFO' 752) #(922 'STEP' 753) #(922 'STOP' 755) #(922 'STRUCTURE' 756) #(922 'STRUCTURES' 757) #(922 'STYLE' 758) #(922 'SUBKEY' 759) #(922 'SUBMATCHES' 760) #(922 'SUBMIT' 761) #(922 'SUBROUTINE' 762) #(922 'SUBSCREEN' 763) #(922 'SUBSTRING' 764) #(922 'SUBTRACT' 765) #(922 'SUFFIX' 767) #(922 'SUM' 768) #(922 'SUMMARY' 769) #(922 'SUPPLIED' 770) #(922 'SUPPLY' 771) #(922 'SUPPRESS' 772) #(922 'SWITCH' 773) #(922 'SYBASE' 774) #(922 'SYMBOL' 775) #(922 'T000' 779) #(922 'TAB' 780) #(922 'TABBED' 781) #(922 'TABLE' 782) #(922 'TABLES' 783) #(922 'TABLEVIEW' 784) #(922 'TABSTRIP' 785) #(922 'TARGET' 786) #(922 'TASK' 787) #(922 'TASKS' 788) #(922 'TEST' 789) #(922 'TESTING' 792) #(922 'TEXT' 793) #(922 'TEXTPOOL' 794) #(922 'THEN' 795) #(922 'THROW' 796) #(922 'TIME' 797) #(922 'TIMES' 798) #(922 'TIMESTAMP' 799) #(922 'TIMEZONE' 800) #(922 'TITLE' 801) #(922 'TITLEBAR' 802) #(922 'TO' 803) #(922 'TOKENIZATION' 804) #(922 'TOKENS' 805) #(922 'TRAILING' 810) #(922 'TRANSACTION' 811) #(922 'TRANSFER' 812) #(922 'TRANSFORMATION' 813) #(922 'TRANSLATE' 814) #(922 'TRANSPORTING' 815) #(922 'TRMAC' 816) #(922 'TRUNCATION' 817) #(922 'TRY' 818) #(922 'TYPE' 819) #(922 'TYPES' 822) #(922 'ULINE' 823) #(922 'UNASSIGN' 824) #(922 'UNDER' 825) #(922 'UNICODE' 826) #(922 'UNION' 827) #(922 'UNIQUE' 828) #(922 'UNIT' 829) #(922 'UNIX' 830) #(922 'UNPACK' 831) #(922 'UNTIL' 832) #(922 'UNWIND' 833) #(922 'UP' 834) #(922 'UPDATE' 835) #(922 'UPPER' 836) #(922 'USER' 837) #(922 'USING' 839) #(922 'UTCLONG' 840) #(922 'UUID' 884) #(922 'VALID' 842) #(922 'VALIDATE' 843) #(922 'VALUE' 844) #(922 'VALUES' 846) #(922 'VARY' 847) #(922 'VARYING' 848) #(922 'VERSION' 849) #(922 'VIA' 850) #(922 'VISIBLE' 851) #(922 'WAIT' 852) #(922 'WHEN' 853) #(922 'WHERE' 854) #(922 'WHILE' 855) #(922 'WIDTH' 856) #(922 'WINDOW' 857) #(922 'WINDOWS' 858) #(922 'WITH' 859) #(922 'WITHOUT' 862) #(922 'WORD' 863) #(922 'WORK' 864) #(922 'WORKSPACE' 865) #(922 'WRITE' 866) #(922 'WRITER' 867) #(922 'XML' 868) #(922 'XSD' 869) #(922 'XSDBOOL' 870) #(922 'YES' 871) #(922 'YYMMDD' 872) #(922 'ZERO' 874) #(922 'ZONE' 875) #(923 '%_FINAL' 2) #(923 '%_HINTS' 3) #(923 '%_PREDEFINED' 4) #(923 'ABS' 876) #(923 'ABSTRACT' 33) #(923 'ACCEPT' 34) #(923 'ACCEPTING' 35) #(923 'ACCESS' 36) #(923 'ACCORDING' 37) #(923 'ACTION' 38) #(923 'ACTIVATION' 39) #(923 'ACTUAL' 40) #(923 'ADABAS' 41) #(923 'ADD' 42) #(923 'ADJACENT' 44) #(923 'ALIAS' 45) #(923 'ALIASES' 46) #(923 'ALIGN' 47) #(923 'ALL' 48) #(923 'ALLOCATE' 49) #(923 'ALPHA' 50) #(923 'AMDP' 51) #(923 'ANALYSIS' 52) #(923 'ANALYZER' 53) #(923 'AND' 54) #(923 'ANY' 55) #(923 'APPEND' 56) #(923 'APPENDING' 57) #(923 'APPLICATION' 58) #(923 'ARCHIVE' 59) #(923 'AREA' 60) #(923 'ARITHMETIC' 61) #(923 'AS' 62) #(923 'AS400' 63) #(923 'ASCENDING' 64) #(923 'ASSERT' 65) #(923 'ASSIGN' 66) #(923 'ASSIGNED' 67) #(923 'ASSIGNING' 68) #(923 'ASSOCIATION' 69) #(923 'ASYNCHRONOUS' 70) #(923 'AT' 71) #(923 'ATTRIBUTES' 72) #(923 'AUGMENTING' 73) #(923 'AUTHORITY' 74) #(923 'AUTHORIZATION' 76) #(923 'AUTO' 77) #(923 'AVG' 78) #(923 'BACK' 79) #(923 'BACKGROUND' 80) #(923 'BACKWARD' 81) #(923 'BADI' 82) #(923 'BASE' 83) #(923 'BEFORE' 84) #(923 'BEGIN' 85) #(923 'BEHAVIOR' 86) #(923 'BETWEEN' 87) #(923 'BINARY' 88) #(923 'BIT' 89) #(923 'BLANK' 94) #(923 'BLANKS' 95) #(923 'BLOCK' 96) #(923 'BLOCKS' 97) #(923 'BOOLC' 98) #(923 'BOUND' 99) #(923 'BOUNDARIES' 100) #(923 'BOUNDS' 101) #(923 'BOXED' 102) #(923 'BREAK' 103) #(923 'BUFFER' 105) #(923 'BY' 106) #(923 'BYPASSING' 107) #(923 'BYTE' 108) #(923 'CA' 116) #(923 'CALL' 117) #(923 'CALLING' 118) #(923 'CASE' 119) #(923 'CAST' 120) #(923 'CASTING' 121) #(923 'CATCH' 122) #(923 'CDS' 123) #(923 'CEIL' 877) #(923 'CENTER' 124) #(923 'CENTERED' 125) #(923 'CHAIN' 126) #(923 'CHANGE' 129) #(923 'CHANGING' 130) #(923 'CHANNELS' 131) #(923 'CHAR' 132) #(923 'CHARACTER' 134) #(923 'CHECK' 135) #(923 'CHECKBOX' 136) #(923 'CID' 137) #(923 'CIRCULAR' 138) #(923 'CLASS' 139) #(923 'CLEANUP' 143) #(923 'CLEAR' 144) #(923 'CLIENT' 145) #(923 'CLIENTS' 146) #(923 'CLOCK' 147) #(923 'CLONE' 148) #(923 'CLOSE' 149) #(923 'CN' 150) #(923 'CO' 151) #(923 'COALESCE' 878) #(923 'CODE' 152) #(923 'COLLECT' 153) #(923 'COLOR' 154) #(923 'COLUMN' 155) #(923 'COLUMNS' 156) #(923 'COL_BACKGROUND' 157) #(923 'COL_GROUP' 158) #(923 'COL_HEADING' 159) #(923 'COL_KEY' 160) #(923 'COL_NEGATIVE' 161) #(923 'COL_NORMAL' 162) #(923 'COL_POSITIVE' 163) #(923 'COL_TOTAL' 164) #(923 'COMMENT' 165) #(923 'COMMENTS' 166) #(923 'COMMIT' 167) #(923 'COMMON' 168) #(923 'COMMUNICATION' 169) #(923 'COMPARING' 170) #(923 'COMPONENT' 171) #(923 'COMPONENTS' 172) #(923 'COMPRESSION' 173) #(923 'COMPUTE' 174) #(923 'CONCAT' 879) #(923 'CONCATENATE' 175) #(923 'CONCAT_WITH_SPACE' 880) #(923 'COND' 176) #(923 'CONDENSE' 177) #(923 'CONDITION' 178) #(923 'CONNECTION' 179) #(923 'CONSTANT' 180) #(923 'CONSTANTS' 181) #(923 'CONTEXT' 182) #(923 'CONTEXTS' 183) #(923 'CONTINUE' 184) #(923 'CONTROL' 185) #(923 'CONTROLS' 186) #(923 'CONV' 187) #(923 'CONVERSION' 188) #(923 'CONVERT' 189) #(923 'COPIES' 190) #(923 'COPY' 191) #(923 'CORRESPONDING' 192) #(923 'COUNT' 193) #(923 'COUNTRY' 194) #(923 'COVER' 195) #(923 'CP' 196) #(923 'CPI' 197) #(923 'CREATE' 198) #(923 'CRITICAL' 199) #(923 'CS' 200) #(923 'CURRENCY' 201) #(923 'CURRENT' 202) #(923 'CURSOR' 203) #(923 'DANGEROUS' 205) #(923 'DATA' 206) #(923 'DATABASE' 207) #(923 'DATAINFO' 208) #(923 'DATASET' 209) #(923 'DATE' 210) #(923 'DAYLIGHT' 211) #(923 'DB2' 212) #(923 'DB6' 213) #(923 'DDL' 216) #(923 'DDMMYY' 217) #(923 'DEALLOCATE' 218) #(923 'DEC' 219) #(923 'DECIMALS' 220) #(923 'DECLARATIONS' 221) #(923 'DEEP' 222) #(923 'DEFAULT' 223) #(923 'DEFERRED' 224) #(923 'DEFINE' 225) #(923 'DEFINITION' 226) #(923 'DELETE' 227) #(923 'DELETING' 228) #(923 'DEMAND' 229) #(923 'DEPARTMENT' 230) #(923 'DESCENDING' 231) #(923 'DESCRIBE' 232) #(923 'DESTINATION' 233) #(923 'DETAIL' 234) #(923 'DETERMINATION' 235) #(923 'DETERMINE' 236) #(923 'DIALOG' 237) #(923 'DID' 238) #(923 'DIRECTORY' 239) #(923 'DISCARDING' 240) #(923 'DISPLAY' 241) #(923 'DISTANCE' 243) #(923 'DISTINCT' 244) #(923 'DIV' 245) #(923 'DIVIDE' 246) #(923 'DO' 247) #(923 'DUMMY' 248) #(923 'DUPLICATE' 249) #(923 'DUPLICATES' 250) #(923 'DURATION' 251) #(923 'DURING' 252) #(923 'DYNPRO' 253) #(923 'EARLY' 254) #(923 'EDIT' 255) #(923 'ELSE' 257) #(923 'ELSEIF' 258) #(923 'EMPTY' 259) #(923 'ENABLED' 260) #(923 'ENABLING' 261) #(923 'ENCODING' 262) #(923 'END' 263) #(923 'ENDAT' 270) #(923 'ENDCASE' 271) #(923 'ENDCATCH' 272) #(923 'ENDCHAIN' 273) #(923 'ENDCLASS' 274) #(923 'ENDDO' 275) #(923 'ENDENHANCEMENT' 276) #(923 'ENDEXEC' 277) #(923 'ENDFORM' 278) #(923 'ENDFUNCTION' 279) #(923 'ENDIAN' 280) #(923 'ENDIF' 281) #(923 'ENDING' 282) #(923 'ENDINTERFACE' 283) #(923 'ENDLOOP' 284) #(923 'ENDMETHOD' 285) #(923 'ENDMODULE' 286) #(923 'ENDON' 287) #(923 'ENDPROVIDE' 288) #(923 'ENDSELECT' 289) #(923 'ENDTRY' 290) #(923 'ENDWHILE' 291) #(923 'ENDWITH' 292) #(923 'ENGINEERING' 293) #(923 'ENHANCEMENT' 294) #(923 'ENHANCEMENTS' 297) #(923 'ENTITIES' 298) #(923 'ENTITY' 299) #(923 'ENTRIES' 300) #(923 'ENTRY' 301) #(923 'ENUM' 302) #(923 'ENVIRONMENT' 303) #(923 'EQ' 304) #(923 'EQUIV' 305) #(923 'ERRORS' 306) #(923 'ESCAPE' 307) #(923 'ESCAPING' 308) #(923 'EVENT' 309) #(923 'EVENTS' 310) #(923 'EXACT' 311) #(923 'EXCEPT' 312) #(923 'EXCEPTION' 313) #(923 'EXCEPTIONS' 315) #(923 'EXCLUDE' 316) #(923 'EXCLUDING' 317) #(923 'EXEC' 318) #(923 'EXECUTE' 319) #(923 'EXISTS' 320) #(923 'EXIT' 321) #(923 'EXPANDING' 323) #(923 'EXPIRATION' 324) #(923 'EXPLICIT' 325) #(923 'EXPONENT' 326) #(923 'EXPORT' 327) #(923 'EXPORTING' 328) #(923 'EXTENDED' 329) #(923 'EXTENSION' 330) #(923 'EXTRACT' 331) #(923 'FAIL' 332) #(923 'FAILED' 333) #(923 'FEATURES' 334) #(923 'FETCH' 335) #(923 'FIELD' 336) #(923 'FIELDS' 340) #(923 'FILE' 341) #(923 'FILL' 342) #(923 'FILTER' 343) #(923 'FILTERS' 344) #(923 'FINAL' 345) #(923 'FIND' 346) #(923 'FIRST' 347) #(923 'FLOOR' 881) #(923 'FLTP' 350) #(923 'FLUSH' 351) #(923 'FONT' 352) #(923 'FOR' 353) #(923 'FORM' 354) #(923 'FORMAT' 355) #(923 'FORWARD' 356) #(923 'FOUND' 357) #(923 'FRAME' 358) #(923 'FRAMES' 359) #(923 'FREE' 360) #(923 'FRIENDS' 361) #(923 'FROM' 362) #(923 'FULL' 363) #(923 'FUNCTION' 364) #(923 'FURTHER' 366) #(923 'GE' 367) #(923 'GENERATE' 368) #(923 'GET' 369) #(923 'GIVING' 370) #(923 'GLOBAL' 371) #(923 'GRAPH' 372) #(923 'GROUP' 373) #(923 'GROUPS' 374) #(923 'GT' 375) #(923 'HANDLE' 376) #(923 'HANDLER' 377) #(923 'HARMLESS' 378) #(923 'HASHED' 379) #(923 'HAVING' 380) #(923 'HDB' 381) #(923 'HEADER' 382) #(923 'HEADERS' 383) #(923 'HEADING' 384) #(923 'HIDE' 387) #(923 'HIERARCHY' 388) #(923 'HIGH' 389) #(923 'HINT' 390) #(923 'HOLD' 391) #(923 'HOTSPOT' 392) #(923 'ICON' 393) #(923 'ID' 394) #(923 'IDENTIFICATION' 395) #(923 'IDENTIFIER' 396) #(923 'IDS' 397) #(923 'IF' 398) #(923 'IGNORE' 399) #(923 'IGNORING' 400) #(923 'IMMEDIATELY' 401) #(923 'IMPLEMENTATION' 402) #(923 'IMPLEMENTED' 403) #(923 'IMPLICIT' 404) #(923 'IMPORT' 405) #(923 'IMPORTING' 406) #(923 'IN' 407) #(923 'INACTIVE' 408) #(923 'INCL' 409) #(923 'INCLUDE' 410) #(923 'INCLUDES' 411) #(923 'INCREMENT' 412) #(923 'INDEX' 413) #(923 'INFORMIX' 415) #(923 'INFOTYPES' 416) #(923 'INHERITING' 417) #(923 'INIT' 418) #(923 'INITIAL' 419) #(923 'INITIALIZATION' 420) #(923 'INNER' 421) #(923 'INPUT' 422) #(923 'INSERT' 423) #(923 'INSTANCE' 424) #(923 'INSTANCES' 425) #(923 'INT2' 426) #(923 'INT4' 427) #(923 'INT8' 428) #(923 'INTENSIFIED' 429) #(923 'INTERFACE' 430) #(923 'INTERFACES' 431) #(923 'INTERNAL' 432) #(923 'INTERVALS' 433) #(923 'INTO' 434) #(923 'INVERSE' 435) #(923 'IS' 437) #(923 'ISO' 438) #(923 'JOB' 439) #(923 'JOIN' 440) #(923 'KEEP' 441) #(923 'KEEPING' 442) #(923 'KERNEL' 443) #(923 'KEY' 444) #(923 'KEYS' 445) #(923 'KEYWORDS' 446) #(923 'KIND' 447) #(923 'LANGUAGE' 448) #(923 'LAST' 449) #(923 'LATE' 450) #(923 'LAYOUT' 451) #(923 'LE' 452) #(923 'LEADING' 453) #(923 'LEAVE' 454) #(923 'LEFT' 455) #(923 'LEFTPLUS' 457) #(923 'LEFTSPACE' 458) #(923 'LEGACY' 459) #(923 'LENGTH' 460) #(923 'LET' 461) #(923 'LEVEL' 462) #(923 'LEVELS' 463) #(923 'LIKE' 464) #(923 'LINE' 465) #(923 'LINEFEED' 469) #(923 'LINES' 470) #(923 'LINK' 471) #(923 'LIST' 472) #(923 'LISTBOX' 474) #(923 'LOAD' 475) #(923 'LOCAL' 477) #(923 'LOCALE' 478) #(923 'LOCK' 479) #(923 'LOCKS' 480) #(923 'LOGFILE' 482) #(923 'LOGICAL' 483) #(923 'LONG' 484) #(923 'LOOP' 485) #(923 'LOW' 486) #(923 'LOWER' 487) #(923 'LPI' 488) #(923 'LT' 489) #(923 'LTRIM' 882) #(923 'MAIN' 491) #(923 'MAPPED' 492) #(923 'MAPPING' 493) #(923 'MARGIN' 494) #(923 'MARK' 495) #(923 'MASK' 496) #(923 'MATCH' 497) #(923 'MATCHCODE' 498) #(923 'MAX' 499) #(923 'MAXIMUM' 500) #(923 'MEDIUM' 501) #(923 'MEMBERS' 502) #(923 'MEMORY' 503) #(923 'MESH' 504) #(923 'MESSAGE' 505) #(923 'MESSAGES' 507) #(923 'MESSAGING' 508) #(923 'METHOD' 509) #(923 'METHODS' 510) #(923 'MIN' 511) #(923 'MMDDYY' 514) #(923 'MOD' 515) #(923 'MODE' 516) #(923 'MODIF' 517) #(923 'MODIFIER' 518) #(923 'MODIFY' 519) #(923 'MODULE' 520) #(923 'MOVE' 521) #(923 'MSSQLNT' 523) #(923 'MULTIPLY' 524) #(923 'NA' 526) #(923 'NAME' 527) #(923 'NAMETAB' 528) #(923 'NATIVE' 529) #(923 'NE' 530) #(923 'NESTED' 531) #(923 'NESTING' 532) #(923 'NEW' 533) #(923 'NEXT' 537) #(923 'NO' 538) #(923 'NODES' 550) #(923 'NOT' 553) #(923 'NP' 554) #(923 'NS' 555) #(923 'NULL' 556) #(923 'NUMBER' 557) #(923 'NUMBERING' 558) #(923 'NUMC' 559) #(923 'OBJECT' 561) #(923 'OBJECTS' 562) #(923 'OBJMGR' 563) #(923 'OBLIGATORY' 564) #(923 'OCCURENCE' 565) #(923 'OCCURENCES' 566) #(923 'OCCURRENCE' 567) #(923 'OCCURRENCES' 568) #(923 'OCCURS' 569) #(923 'OF' 570) #(923 'OFF' 571) #(923 'OFFSET' 572) #(923 'ON' 573) #(923 'ONE' 574) #(923 'ONLY' 575) #(923 'OPEN' 576) #(923 'OPTION' 577) #(923 'OPTIONAL' 578) #(923 'OPTIONS' 579) #(923 'OR' 580) #(923 'ORACLE' 581) #(923 'ORDER' 582) #(923 'OTHERS' 583) #(923 'OUT' 584) #(923 'OUTER' 585) #(923 'OUTPUT' 586) #(923 'OVERFLOW' 588) #(923 'OVERLAY' 589) #(923 'PACK' 590) #(923 'PACKAGE' 591) #(923 'PAD' 592) #(923 'PADDING' 593) #(923 'PAGE' 594) #(923 'PAGES' 595) #(923 'PARAMETER' 596) #(923 'PARAMETERS' 598) #(923 'PART' 599) #(923 'PARTIALLY' 600) #(923 'PCRE' 601) #(923 'PERCENTAGE' 602) #(923 'PERFORM' 603) #(923 'PERFORMING' 604) #(923 'PERMISSIONS' 605) #(923 'PLACES' 607) #(923 'POOL' 608) #(923 'POSITION' 609) #(923 'POS_HIGH' 610) #(923 'POS_LOW' 611) #(923 'PRAGMAS' 612) #(923 'PRECHECK' 613) #(923 'PRECOMPILED' 614) #(923 'PREFERRED' 615) #(923 'PRESERVING' 616) #(923 'PRIMARY' 617) #(923 'PRINT' 618) #(923 'PRIVATE' 620) #(923 'PRIVILEGED' 621) #(923 'PROCEDURE' 622) #(923 'PROGRAM' 623) #(923 'PROPERTY' 624) #(923 'PROTECTED' 625) #(923 'PROVIDE' 626) #(923 'PUBLIC' 627) #(923 'PUSH' 628) #(923 'PUSHBUTTON' 629) #(923 'PUT' 630) #(923 'QUEUEONLY' 632) #(923 'QUICKINFO' 633) #(923 'RADIOBUTTON' 634) #(923 'RAISE' 635) #(923 'RAISING' 636) #(923 'RANGE' 637) #(923 'RANGES' 638) #(923 'RAW' 639) #(923 'READ' 640) #(923 'RECEIVE' 642) #(923 'RECEIVED' 643) #(923 'RECEIVER' 644) #(923 'RECEIVING' 645) #(923 'REDEFINITION' 646) #(923 'REDUCE' 647) #(923 'REF' 648) #(923 'REFERENCE' 649) #(923 'REFRESH' 650) #(923 'REGEX' 651) #(923 'REJECT' 652) #(923 'RELATING' 653) #(923 'RENAMING' 654) #(923 'REPLACE' 655) #(923 'REPLACEMENT' 656) #(923 'REPLACING' 657) #(923 'REPORT' 658) #(923 'REPORTED' 659) #(923 'REQUEST' 660) #(923 'REQUESTED' 661) #(923 'REQUIRED' 662) #(923 'RESERVE' 663) #(923 'RESET' 664) #(923 'RESOLUTION' 665) #(923 'RESPECTING' 666) #(923 'RESPONSE' 667) #(923 'RESPONSES' 668) #(923 'RESULT' 669) #(923 'RESULTS' 670) #(923 'RESUMABLE' 671) #(923 'RESUME' 672) #(923 'RETRY' 673) #(923 'RETURN' 674) #(923 'RETURNCODE' 675) #(923 'RETURNING' 676) #(923 'RIGHT' 677) #(923 'RIGHTPLUS' 679) #(923 'RIGHTSPACE' 680) #(923 'RISK' 681) #(923 'ROLLBACK' 682) #(923 'ROUND' 683) #(923 'ROWS' 684) #(923 'RTRIM' 883) #(923 'RUN' 685) #(923 'SAP' 686) #(923 'SAVE' 688) #(923 'SAVING' 689) #(923 'SCALE_PRESERVING' 690) #(923 'SCALE_PRESERVING_SCIENTIFIC' 691) #(923 'SCAN' 692) #(923 'SCIENTIFIC' 693) #(923 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(923 'SCREEN' 695) #(923 'SCROLL' 696) #(923 'SCROLLING' 698) #(923 'SEARCH' 699) #(923 'SECONDARY' 700) #(923 'SECONDS' 701) #(923 'SECTION' 702) #(923 'SELECT' 703) #(923 'SELECTION' 705) #(923 'SELECTIONS' 710) #(923 'SEND' 711) #(923 'SEPARATE' 712) #(923 'SEPARATED' 713) #(923 'SESSION' 714) #(923 'SET' 715) #(923 'SHARED' 716) #(923 'SHIFT' 717) #(923 'SHORT' 718) #(923 'SHORTDUMP' 719) #(923 'SIGN' 721) #(923 'SIGN_AS_POSTFIX' 722) #(923 'SIMPLE' 723) #(923 'SIMULATION' 724) #(923 'SINGLE' 725) #(923 'SIZE' 726) #(923 'SKIP' 727) #(923 'SKIPPING' 728) #(923 'SMART' 729) #(923 'SOME' 730) #(923 'SORT' 731) #(923 'SORTABLE' 732) #(923 'SORTED' 733) #(923 'SOURCE' 734) #(923 'SPACE' 735) #(923 'SPECIFIED' 736) #(923 'SPLIT' 737) #(923 'SPOOL' 738) #(923 'SPOTS' 739) #(923 'SQL' 740) #(923 'SQLSCRIPT' 741) #(923 'STABLE' 742) #(923 'STAMP' 743) #(923 'STANDARD' 744) #(923 'STARTING' 746) #(923 'STATE' 747) #(923 'STATEMENT' 748) #(923 'STATEMENTS' 749) #(923 'STATIC' 750) #(923 'STATICS' 751) #(923 'STATUSINFO' 752) #(923 'STEP' 753) #(923 'STOP' 755) #(923 'STRUCTURE' 756) #(923 'STRUCTURES' 757) #(923 'STYLE' 758) #(923 'SUBKEY' 759) #(923 'SUBMATCHES' 760) #(923 'SUBMIT' 761) #(923 'SUBROUTINE' 762) #(923 'SUBSCREEN' 763) #(923 'SUBSTRING' 764) #(923 'SUBTRACT' 765) #(923 'SUFFIX' 767) #(923 'SUM' 768) #(923 'SUMMARY' 769) #(923 'SUPPLIED' 770) #(923 'SUPPLY' 771) #(923 'SUPPRESS' 772) #(923 'SWITCH' 773) #(923 'SYBASE' 774) #(923 'SYMBOL' 775) #(923 'T000' 779) #(923 'TAB' 780) #(923 'TABBED' 781) #(923 'TABLE' 782) #(923 'TABLES' 783) #(923 'TABLEVIEW' 784) #(923 'TABSTRIP' 785) #(923 'TARGET' 786) #(923 'TASK' 787) #(923 'TASKS' 788) #(923 'TEST' 789) #(923 'TESTING' 792) #(923 'TEXT' 793) #(923 'TEXTPOOL' 794) #(923 'THEN' 795) #(923 'THROW' 796) #(923 'TIME' 797) #(923 'TIMES' 798) #(923 'TIMESTAMP' 799) #(923 'TIMEZONE' 800) #(923 'TITLE' 801) #(923 'TITLEBAR' 802) #(923 'TO' 803) #(923 'TOKENIZATION' 804) #(923 'TOKENS' 805) #(923 'TRAILING' 810) #(923 'TRANSACTION' 811) #(923 'TRANSFER' 812) #(923 'TRANSFORMATION' 813) #(923 'TRANSLATE' 814) #(923 'TRANSPORTING' 815) #(923 'TRMAC' 816) #(923 'TRUNCATION' 817) #(923 'TRY' 818) #(923 'TYPE' 819) #(923 'TYPES' 822) #(923 'ULINE' 823) #(923 'UNASSIGN' 824) #(923 'UNDER' 825) #(923 'UNICODE' 826) #(923 'UNION' 827) #(923 'UNIQUE' 828) #(923 'UNIT' 829) #(923 'UNIX' 830) #(923 'UNPACK' 831) #(923 'UNTIL' 832) #(923 'UNWIND' 833) #(923 'UP' 834) #(923 'UPDATE' 835) #(923 'UPPER' 836) #(923 'USER' 837) #(923 'USING' 839) #(923 'UTCLONG' 840) #(923 'UUID' 884) #(923 'VALID' 842) #(923 'VALIDATE' 843) #(923 'VALUE' 844) #(923 'VALUES' 846) #(923 'VARY' 847) #(923 'VARYING' 848) #(923 'VERSION' 849) #(923 'VIA' 850) #(923 'VISIBLE' 851) #(923 'WAIT' 852) #(923 'WHEN' 853) #(923 'WHERE' 854) #(923 'WHILE' 855) #(923 'WIDTH' 856) #(923 'WINDOW' 857) #(923 'WINDOWS' 858) #(923 'WITH' 859) #(923 'WITHOUT' 862) #(923 'WORD' 863) #(923 'WORK' 864) #(923 'WORKSPACE' 865) #(923 'WRITE' 866) #(923 'WRITER' 867) #(923 'XML' 868) #(923 'XSD' 869) #(923 'XSDBOOL' 870) #(923 'YES' 871) #(923 'YYMMDD' 872) #(923 'ZERO' 874) #(923 'ZONE' 875) #(943 '%_FINAL' 2) #(943 '%_HINTS' 3) #(943 '%_PREDEFINED' 4) #(943 'ABS' 876) #(943 'ABSTRACT' 33) #(943 'ACCEPT' 34) #(943 'ACCEPTING' 35) #(943 'ACCESS' 36) #(943 'ACCORDING' 37) #(943 'ACTION' 38) #(943 'ACTIVATION' 39) #(943 'ACTUAL' 40) #(943 'ADABAS' 41) #(943 'ADD' 42) #(943 'ADJACENT' 44) #(943 'ALIAS' 45) #(943 'ALIASES' 46) #(943 'ALIGN' 47) #(943 'ALL' 48) #(943 'ALLOCATE' 49) #(943 'ALPHA' 50) #(943 'AMDP' 51) #(943 'ANALYSIS' 52) #(943 'ANALYZER' 53) #(943 'AND' 54) #(943 'ANY' 55) #(943 'APPEND' 56) #(943 'APPENDING' 57) #(943 'APPLICATION' 58) #(943 'ARCHIVE' 59) #(943 'AREA' 60) #(943 'ARITHMETIC' 61) #(943 'AS' 62) #(943 'AS400' 63) #(943 'ASCENDING' 64) #(943 'ASSERT' 65) #(943 'ASSIGN' 66) #(943 'ASSIGNED' 67) #(943 'ASSIGNING' 68) #(943 'ASSOCIATION' 69) #(943 'ASYNCHRONOUS' 70) #(943 'AT' 71) #(943 'ATTRIBUTES' 72) #(943 'AUGMENTING' 73) #(943 'AUTHORITY' 74) #(943 'AUTHORIZATION' 76) #(943 'AUTO' 77) #(943 'AVG' 78) #(943 'BACK' 79) #(943 'BACKGROUND' 80) #(943 'BACKWARD' 81) #(943 'BADI' 82) #(943 'BASE' 83) #(943 'BEFORE' 84) #(943 'BEGIN' 85) #(943 'BEHAVIOR' 86) #(943 'BETWEEN' 87) #(943 'BINARY' 88) #(943 'BIT' 89) #(943 'BLANK' 94) #(943 'BLANKS' 95) #(943 'BLOCK' 96) #(943 'BLOCKS' 97) #(943 'BOOLC' 98) #(943 'BOUND' 99) #(943 'BOUNDARIES' 100) #(943 'BOUNDS' 101) #(943 'BOXED' 102) #(943 'BREAK' 103) #(943 'BUFFER' 105) #(943 'BY' 106) #(943 'BYPASSING' 107) #(943 'BYTE' 108) #(943 'CA' 116) #(943 'CALL' 117) #(943 'CALLING' 118) #(943 'CASE' 119) #(943 'CAST' 120) #(943 'CASTING' 121) #(943 'CATCH' 122) #(943 'CDS' 123) #(943 'CEIL' 877) #(943 'CENTER' 124) #(943 'CENTERED' 125) #(943 'CHAIN' 126) #(943 'CHANGE' 129) #(943 'CHANGING' 130) #(943 'CHANNELS' 131) #(943 'CHAR' 132) #(943 'CHARACTER' 134) #(943 'CHECK' 135) #(943 'CHECKBOX' 136) #(943 'CID' 137) #(943 'CIRCULAR' 138) #(943 'CLASS' 139) #(943 'CLEANUP' 143) #(943 'CLEAR' 144) #(943 'CLIENT' 145) #(943 'CLIENTS' 146) #(943 'CLOCK' 147) #(943 'CLONE' 148) #(943 'CLOSE' 149) #(943 'CN' 150) #(943 'CO' 151) #(943 'COALESCE' 878) #(943 'CODE' 152) #(943 'COLLECT' 153) #(943 'COLOR' 154) #(943 'COLUMN' 155) #(943 'COLUMNS' 156) #(943 'COL_BACKGROUND' 157) #(943 'COL_GROUP' 158) #(943 'COL_HEADING' 159) #(943 'COL_KEY' 160) #(943 'COL_NEGATIVE' 161) #(943 'COL_NORMAL' 162) #(943 'COL_POSITIVE' 163) #(943 'COL_TOTAL' 164) #(943 'COMMENT' 165) #(943 'COMMENTS' 166) #(943 'COMMIT' 167) #(943 'COMMON' 168) #(943 'COMMUNICATION' 169) #(943 'COMPARING' 170) #(943 'COMPONENT' 171) #(943 'COMPONENTS' 172) #(943 'COMPRESSION' 173) #(943 'COMPUTE' 174) #(943 'CONCAT' 879) #(943 'CONCATENATE' 175) #(943 'CONCAT_WITH_SPACE' 880) #(943 'COND' 176) #(943 'CONDENSE' 177) #(943 'CONDITION' 178) #(943 'CONNECTION' 179) #(943 'CONSTANT' 180) #(943 'CONSTANTS' 181) #(943 'CONTEXT' 182) #(943 'CONTEXTS' 183) #(943 'CONTINUE' 184) #(943 'CONTROL' 185) #(943 'CONTROLS' 186) #(943 'CONV' 187) #(943 'CONVERSION' 188) #(943 'CONVERT' 189) #(943 'COPIES' 190) #(943 'COPY' 191) #(943 'CORRESPONDING' 192) #(943 'COUNT' 193) #(943 'COUNTRY' 194) #(943 'COVER' 195) #(943 'CP' 196) #(943 'CPI' 197) #(943 'CREATE' 198) #(943 'CRITICAL' 199) #(943 'CS' 200) #(943 'CURRENCY' 201) #(943 'CURRENT' 202) #(943 'CURSOR' 203) #(943 'DANGEROUS' 205) #(943 'DATA' 206) #(943 'DATABASE' 207) #(943 'DATAINFO' 208) #(943 'DATASET' 209) #(943 'DATE' 210) #(943 'DAYLIGHT' 211) #(943 'DB2' 212) #(943 'DB6' 213) #(943 'DDL' 216) #(943 'DDMMYY' 217) #(943 'DEALLOCATE' 218) #(943 'DEC' 219) #(943 'DECIMALS' 220) #(943 'DECLARATIONS' 221) #(943 'DEEP' 222) #(943 'DEFAULT' 223) #(943 'DEFERRED' 224) #(943 'DEFINE' 225) #(943 'DEFINITION' 226) #(943 'DELETE' 227) #(943 'DELETING' 228) #(943 'DEMAND' 229) #(943 'DEPARTMENT' 230) #(943 'DESCENDING' 231) #(943 'DESCRIBE' 232) #(943 'DESTINATION' 233) #(943 'DETAIL' 234) #(943 'DETERMINATION' 235) #(943 'DETERMINE' 236) #(943 'DIALOG' 237) #(943 'DID' 238) #(943 'DIRECTORY' 239) #(943 'DISCARDING' 240) #(943 'DISPLAY' 241) #(943 'DISTANCE' 243) #(943 'DISTINCT' 244) #(943 'DIV' 245) #(943 'DIVIDE' 246) #(943 'DO' 247) #(943 'DUMMY' 248) #(943 'DUPLICATE' 249) #(943 'DUPLICATES' 250) #(943 'DURATION' 251) #(943 'DURING' 252) #(943 'DYNPRO' 253) #(943 'EARLY' 254) #(943 'EDIT' 255) #(943 'ELSE' 257) #(943 'ELSEIF' 258) #(943 'EMPTY' 259) #(943 'ENABLED' 260) #(943 'ENABLING' 261) #(943 'ENCODING' 262) #(943 'END' 263) #(943 'ENDAT' 270) #(943 'ENDCASE' 271) #(943 'ENDCATCH' 272) #(943 'ENDCHAIN' 273) #(943 'ENDCLASS' 274) #(943 'ENDDO' 275) #(943 'ENDENHANCEMENT' 276) #(943 'ENDEXEC' 277) #(943 'ENDFORM' 278) #(943 'ENDFUNCTION' 279) #(943 'ENDIAN' 280) #(943 'ENDIF' 281) #(943 'ENDING' 282) #(943 'ENDINTERFACE' 283) #(943 'ENDLOOP' 284) #(943 'ENDMETHOD' 285) #(943 'ENDMODULE' 286) #(943 'ENDON' 287) #(943 'ENDPROVIDE' 288) #(943 'ENDSELECT' 289) #(943 'ENDTRY' 290) #(943 'ENDWHILE' 291) #(943 'ENDWITH' 292) #(943 'ENGINEERING' 293) #(943 'ENHANCEMENT' 294) #(943 'ENHANCEMENTS' 297) #(943 'ENTITIES' 298) #(943 'ENTITY' 299) #(943 'ENTRIES' 300) #(943 'ENTRY' 301) #(943 'ENUM' 302) #(943 'ENVIRONMENT' 303) #(943 'EQ' 304) #(943 'EQUIV' 305) #(943 'ERRORS' 306) #(943 'ESCAPE' 307) #(943 'ESCAPING' 308) #(943 'EVENT' 309) #(943 'EVENTS' 310) #(943 'EXACT' 311) #(943 'EXCEPT' 312) #(943 'EXCEPTION' 313) #(943 'EXCEPTIONS' 315) #(943 'EXCLUDE' 316) #(943 'EXCLUDING' 317) #(943 'EXEC' 318) #(943 'EXECUTE' 319) #(943 'EXISTS' 320) #(943 'EXIT' 321) #(943 'EXPANDING' 323) #(943 'EXPIRATION' 324) #(943 'EXPLICIT' 325) #(943 'EXPONENT' 326) #(943 'EXPORT' 327) #(943 'EXPORTING' 328) #(943 'EXTENDED' 329) #(943 'EXTENSION' 330) #(943 'EXTRACT' 331) #(943 'FAIL' 332) #(943 'FAILED' 333) #(943 'FEATURES' 334) #(943 'FETCH' 335) #(943 'FIELD' 336) #(943 'FIELDS' 340) #(943 'FILE' 341) #(943 'FILL' 342) #(943 'FILTER' 343) #(943 'FILTERS' 344) #(943 'FINAL' 345) #(943 'FIND' 346) #(943 'FIRST' 347) #(943 'FLOOR' 881) #(943 'FLTP' 350) #(943 'FLUSH' 351) #(943 'FONT' 352) #(943 'FOR' 353) #(943 'FORM' 354) #(943 'FORMAT' 355) #(943 'FORWARD' 356) #(943 'FOUND' 357) #(943 'FRAME' 358) #(943 'FRAMES' 359) #(943 'FREE' 360) #(943 'FRIENDS' 361) #(943 'FROM' 362) #(943 'FULL' 363) #(943 'FUNCTION' 364) #(943 'FURTHER' 366) #(943 'GE' 367) #(943 'GENERATE' 368) #(943 'GET' 369) #(943 'GIVING' 370) #(943 'GLOBAL' 371) #(943 'GRAPH' 372) #(943 'GROUP' 373) #(943 'GROUPS' 374) #(943 'GT' 375) #(943 'HANDLE' 376) #(943 'HANDLER' 377) #(943 'HARMLESS' 378) #(943 'HASHED' 379) #(943 'HAVING' 380) #(943 'HDB' 381) #(943 'HEADER' 382) #(943 'HEADERS' 383) #(943 'HEADING' 384) #(943 'HIDE' 387) #(943 'HIERARCHY' 388) #(943 'HIGH' 389) #(943 'HINT' 390) #(943 'HOLD' 391) #(943 'HOTSPOT' 392) #(943 'ICON' 393) #(943 'ID' 394) #(943 'IDENTIFICATION' 395) #(943 'IDENTIFIER' 396) #(943 'IDS' 397) #(943 'IF' 398) #(943 'IGNORE' 399) #(943 'IGNORING' 400) #(943 'IMMEDIATELY' 401) #(943 'IMPLEMENTATION' 402) #(943 'IMPLEMENTED' 403) #(943 'IMPLICIT' 404) #(943 'IMPORT' 405) #(943 'IMPORTING' 406) #(943 'IN' 407) #(943 'INACTIVE' 408) #(943 'INCL' 409) #(943 'INCLUDE' 410) #(943 'INCLUDES' 411) #(943 'INCREMENT' 412) #(943 'INDEX' 413) #(943 'INFORMIX' 415) #(943 'INFOTYPES' 416) #(943 'INHERITING' 417) #(943 'INIT' 418) #(943 'INITIAL' 419) #(943 'INITIALIZATION' 420) #(943 'INNER' 421) #(943 'INPUT' 422) #(943 'INSERT' 423) #(943 'INSTANCE' 424) #(943 'INSTANCES' 425) #(943 'INT2' 426) #(943 'INT4' 427) #(943 'INT8' 428) #(943 'INTENSIFIED' 429) #(943 'INTERFACE' 430) #(943 'INTERFACES' 431) #(943 'INTERNAL' 432) #(943 'INTERVALS' 433) #(943 'INTO' 434) #(943 'INVERSE' 435) #(943 'IS' 437) #(943 'ISO' 438) #(943 'JOB' 439) #(943 'JOIN' 440) #(943 'KEEP' 441) #(943 'KEEPING' 442) #(943 'KERNEL' 443) #(943 'KEY' 444) #(943 'KEYS' 445) #(943 'KEYWORDS' 446) #(943 'KIND' 447) #(943 'LANGUAGE' 448) #(943 'LAST' 449) #(943 'LATE' 450) #(943 'LAYOUT' 451) #(943 'LE' 452) #(943 'LEADING' 453) #(943 'LEAVE' 454) #(943 'LEFT' 455) #(943 'LEFTPLUS' 457) #(943 'LEFTSPACE' 458) #(943 'LEGACY' 459) #(943 'LENGTH' 460) #(943 'LET' 461) #(943 'LEVEL' 462) #(943 'LEVELS' 463) #(943 'LIKE' 464) #(943 'LINE' 465) #(943 'LINEFEED' 469) #(943 'LINES' 470) #(943 'LINK' 471) #(943 'LIST' 472) #(943 'LISTBOX' 474) #(943 'LOAD' 475) #(943 'LOCAL' 477) #(943 'LOCALE' 478) #(943 'LOCK' 479) #(943 'LOCKS' 480) #(943 'LOGFILE' 482) #(943 'LOGICAL' 483) #(943 'LONG' 484) #(943 'LOOP' 485) #(943 'LOW' 486) #(943 'LOWER' 487) #(943 'LPI' 488) #(943 'LT' 489) #(943 'LTRIM' 882) #(943 'MAIN' 491) #(943 'MAPPED' 492) #(943 'MAPPING' 493) #(943 'MARGIN' 494) #(943 'MARK' 495) #(943 'MASK' 496) #(943 'MATCH' 497) #(943 'MATCHCODE' 498) #(943 'MAX' 499) #(943 'MAXIMUM' 500) #(943 'MEDIUM' 501) #(943 'MEMBERS' 502) #(943 'MEMORY' 503) #(943 'MESH' 504) #(943 'MESSAGE' 505) #(943 'MESSAGES' 507) #(943 'MESSAGING' 508) #(943 'METHOD' 509) #(943 'METHODS' 510) #(943 'MIN' 511) #(943 'MMDDYY' 514) #(943 'MOD' 515) #(943 'MODE' 516) #(943 'MODIF' 517) #(943 'MODIFIER' 518) #(943 'MODIFY' 519) #(943 'MODULE' 520) #(943 'MOVE' 521) #(943 'MSSQLNT' 523) #(943 'MULTIPLY' 524) #(943 'NA' 526) #(943 'NAME' 527) #(943 'NAMETAB' 528) #(943 'NATIVE' 529) #(943 'NE' 530) #(943 'NESTED' 531) #(943 'NESTING' 532) #(943 'NEW' 533) #(943 'NEXT' 537) #(943 'NO' 538) #(943 'NODES' 550) #(943 'NOT' 553) #(943 'NP' 554) #(943 'NS' 555) #(943 'NULL' 556) #(943 'NUMBER' 557) #(943 'NUMBERING' 558) #(943 'NUMC' 559) #(943 'OBJECT' 561) #(943 'OBJECTS' 562) #(943 'OBJMGR' 563) #(943 'OBLIGATORY' 564) #(943 'OCCURENCE' 565) #(943 'OCCURENCES' 566) #(943 'OCCURRENCE' 567) #(943 'OCCURRENCES' 568) #(943 'OCCURS' 569) #(943 'OF' 570) #(943 'OFF' 571) #(943 'OFFSET' 572) #(943 'ON' 573) #(943 'ONE' 574) #(943 'ONLY' 575) #(943 'OPEN' 576) #(943 'OPTION' 577) #(943 'OPTIONAL' 578) #(943 'OPTIONS' 579) #(943 'OR' 580) #(943 'ORACLE' 581) #(943 'ORDER' 582) #(943 'OTHERS' 583) #(943 'OUT' 584) #(943 'OUTER' 585) #(943 'OUTPUT' 586) #(943 'OVERFLOW' 588) #(943 'OVERLAY' 589) #(943 'PACK' 590) #(943 'PACKAGE' 591) #(943 'PAD' 592) #(943 'PADDING' 593) #(943 'PAGE' 594) #(943 'PAGES' 595) #(943 'PARAMETER' 596) #(943 'PARAMETERS' 598) #(943 'PART' 599) #(943 'PARTIALLY' 600) #(943 'PCRE' 601) #(943 'PERCENTAGE' 602) #(943 'PERFORM' 603) #(943 'PERFORMING' 604) #(943 'PERMISSIONS' 605) #(943 'PLACES' 607) #(943 'POOL' 608) #(943 'POSITION' 609) #(943 'POS_HIGH' 610) #(943 'POS_LOW' 611) #(943 'PRAGMAS' 612) #(943 'PRECHECK' 613) #(943 'PRECOMPILED' 614) #(943 'PREFERRED' 615) #(943 'PRESERVING' 616) #(943 'PRIMARY' 617) #(943 'PRINT' 618) #(943 'PRIVATE' 620) #(943 'PRIVILEGED' 621) #(943 'PROCEDURE' 622) #(943 'PROGRAM' 623) #(943 'PROPERTY' 624) #(943 'PROTECTED' 625) #(943 'PROVIDE' 626) #(943 'PUBLIC' 627) #(943 'PUSH' 628) #(943 'PUSHBUTTON' 629) #(943 'PUT' 630) #(943 'QUEUEONLY' 632) #(943 'QUICKINFO' 633) #(943 'RADIOBUTTON' 634) #(943 'RAISE' 635) #(943 'RAISING' 636) #(943 'RANGE' 637) #(943 'RANGES' 638) #(943 'RAW' 639) #(943 'READ' 640) #(943 'RECEIVE' 642) #(943 'RECEIVED' 643) #(943 'RECEIVER' 644) #(943 'RECEIVING' 645) #(943 'REDEFINITION' 646) #(943 'REDUCE' 647) #(943 'REF' 648) #(943 'REFERENCE' 649) #(943 'REFRESH' 650) #(943 'REGEX' 651) #(943 'REJECT' 652) #(943 'RELATING' 653) #(943 'RENAMING' 654) #(943 'REPLACE' 655) #(943 'REPLACEMENT' 656) #(943 'REPLACING' 657) #(943 'REPORT' 658) #(943 'REPORTED' 659) #(943 'REQUEST' 660) #(943 'REQUESTED' 661) #(943 'REQUIRED' 662) #(943 'RESERVE' 663) #(943 'RESET' 664) #(943 'RESOLUTION' 665) #(943 'RESPECTING' 666) #(943 'RESPONSE' 667) #(943 'RESPONSES' 668) #(943 'RESULT' 669) #(943 'RESULTS' 670) #(943 'RESUMABLE' 671) #(943 'RESUME' 672) #(943 'RETRY' 673) #(943 'RETURN' 674) #(943 'RETURNCODE' 675) #(943 'RETURNING' 676) #(943 'RIGHT' 677) #(943 'RIGHTPLUS' 679) #(943 'RIGHTSPACE' 680) #(943 'RISK' 681) #(943 'ROLLBACK' 682) #(943 'ROUND' 683) #(943 'ROWS' 684) #(943 'RTRIM' 883) #(943 'RUN' 685) #(943 'SAP' 686) #(943 'SAVE' 688) #(943 'SAVING' 689) #(943 'SCALE_PRESERVING' 690) #(943 'SCALE_PRESERVING_SCIENTIFIC' 691) #(943 'SCAN' 692) #(943 'SCIENTIFIC' 693) #(943 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(943 'SCREEN' 695) #(943 'SCROLL' 696) #(943 'SCROLLING' 698) #(943 'SEARCH' 699) #(943 'SECONDARY' 700) #(943 'SECONDS' 701) #(943 'SECTION' 702) #(943 'SELECT' 703) #(943 'SELECTION' 705) #(943 'SELECTIONS' 710) #(943 'SEND' 711) #(943 'SEPARATE' 712) #(943 'SEPARATED' 713) #(943 'SESSION' 714) #(943 'SET' 715) #(943 'SHARED' 716) #(943 'SHIFT' 717) #(943 'SHORT' 718) #(943 'SHORTDUMP' 719) #(943 'SIGN' 721) #(943 'SIGN_AS_POSTFIX' 722) #(943 'SIMPLE' 723) #(943 'SIMULATION' 724) #(943 'SINGLE' 725) #(943 'SIZE' 726) #(943 'SKIP' 727) #(943 'SKIPPING' 728) #(943 'SMART' 729) #(943 'SOME' 730) #(943 'SORT' 731) #(943 'SORTABLE' 732) #(943 'SORTED' 733) #(943 'SOURCE' 734) #(943 'SPACE' 735) #(943 'SPECIFIED' 736) #(943 'SPLIT' 737) #(943 'SPOOL' 738) #(943 'SPOTS' 739) #(943 'SQL' 740) #(943 'SQLSCRIPT' 741) #(943 'STABLE' 742) #(943 'STAMP' 743) #(943 'STANDARD' 744) #(943 'STARTING' 746) #(943 'STATE' 747) #(943 'STATEMENT' 748) #(943 'STATEMENTS' 749) #(943 'STATIC' 750) #(943 'STATICS' 751) #(943 'STATUSINFO' 752) #(943 'STEP' 753) #(943 'STOP' 755) #(943 'STRUCTURE' 756) #(943 'STRUCTURES' 757) #(943 'STYLE' 758) #(943 'SUBKEY' 759) #(943 'SUBMATCHES' 760) #(943 'SUBMIT' 761) #(943 'SUBROUTINE' 762) #(943 'SUBSCREEN' 763) #(943 'SUBSTRING' 764) #(943 'SUBTRACT' 765) #(943 'SUFFIX' 767) #(943 'SUM' 768) #(943 'SUMMARY' 769) #(943 'SUPPLIED' 770) #(943 'SUPPLY' 771) #(943 'SUPPRESS' 772) #(943 'SWITCH' 773) #(943 'SYBASE' 774) #(943 'SYMBOL' 775) #(943 'T000' 779) #(943 'TAB' 780) #(943 'TABBED' 781) #(943 'TABLE' 782) #(943 'TABLES' 783) #(943 'TABLEVIEW' 784) #(943 'TABSTRIP' 785) #(943 'TARGET' 786) #(943 'TASK' 787) #(943 'TASKS' 788) #(943 'TEST' 789) #(943 'TESTING' 792) #(943 'TEXT' 793) #(943 'TEXTPOOL' 794) #(943 'THEN' 795) #(943 'THROW' 796) #(943 'TIME' 797) #(943 'TIMES' 798) #(943 'TIMESTAMP' 799) #(943 'TIMEZONE' 800) #(943 'TITLE' 801) #(943 'TITLEBAR' 802) #(943 'TO' 803) #(943 'TOKENIZATION' 804) #(943 'TOKENS' 805) #(943 'TRAILING' 810) #(943 'TRANSACTION' 811) #(943 'TRANSFER' 812) #(943 'TRANSFORMATION' 813) #(943 'TRANSLATE' 814) #(943 'TRANSPORTING' 815) #(943 'TRMAC' 816) #(943 'TRUNCATION' 817) #(943 'TRY' 818) #(943 'TYPE' 819) #(943 'TYPES' 822) #(943 'ULINE' 823) #(943 'UNASSIGN' 824) #(943 'UNDER' 825) #(943 'UNICODE' 826) #(943 'UNION' 827) #(943 'UNIQUE' 828) #(943 'UNIT' 829) #(943 'UNIX' 830) #(943 'UNPACK' 831) #(943 'UNTIL' 832) #(943 'UNWIND' 833) #(943 'UP' 834) #(943 'UPDATE' 835) #(943 'UPPER' 836) #(943 'USER' 837) #(943 'USING' 839) #(943 'UTCLONG' 840) #(943 'UUID' 884) #(943 'VALID' 842) #(943 'VALIDATE' 843) #(943 'VALUE' 844) #(943 'VALUES' 846) #(943 'VARY' 847) #(943 'VARYING' 848) #(943 'VERSION' 849) #(943 'VIA' 850) #(943 'VISIBLE' 851) #(943 'WAIT' 852) #(943 'WHEN' 853) #(943 'WHERE' 854) #(943 'WHILE' 855) #(943 'WIDTH' 856) #(943 'WINDOW' 857) #(943 'WINDOWS' 858) #(943 'WITH' 859) #(943 'WITHOUT' 862) #(943 'WORD' 863) #(943 'WORK' 864) #(943 'WORKSPACE' 865) #(943 'WRITE' 866) #(943 'WRITER' 867) #(943 'XML' 868) #(943 'XSD' 869) #(943 'XSDBOOL' 870) #(943 'YES' 871) #(943 'YYMMDD' 872) #(943 'ZERO' 874) #(943 'ZONE' 875) #(924 'ABS' 876) #(924 'ABSTRACT' 33) #(924 'ACCEPT' 34) #(924 'ACCEPTING' 35) #(924 'ACCESS' 36) #(924 'ACCORDING' 37) #(924 'ACTION' 38) #(924 'ACTIVATION' 39) #(924 'ACTUAL' 40) #(924 'ADABAS' 41) #(924 'ADD' 42) #(924 'ADJACENT' 44) #(924 'ALIAS' 45) #(924 'ALIASES' 46) #(924 'ALIGN' 47) #(924 'ALL' 48) #(924 'ALLOCATE' 49) #(924 'ALPHA' 50) #(924 'AMDP' 51) #(924 'ANALYSIS' 52) #(924 'ANALYZER' 53) #(924 'AND' 54) #(924 'ANY' 55) #(924 'APPEND' 56) #(924 'APPENDING' 57) #(924 'APPLICATION' 58) #(924 'ARCHIVE' 59) #(924 'AREA' 60) #(924 'ARITHMETIC' 61) #(924 'AS' 62) #(924 'AS400' 63) #(924 'ASCENDING' 64) #(924 'ASSERT' 65) #(924 'ASSIGN' 66) #(924 'ASSIGNED' 67) #(924 'ASSIGNING' 68) #(924 'ASSOCIATION' 69) #(924 'ASYNCHRONOUS' 70) #(924 'AT' 71) #(924 'ATTRIBUTES' 72) #(924 'AUGMENTING' 73) #(924 'AUTHORITY' 74) #(924 'AUTHORIZATION' 76) #(924 'AUTO' 77) #(924 'AVG' 78) #(924 'BACK' 79) #(924 'BACKGROUND' 80) #(924 'BACKWARD' 81) #(924 'BADI' 82) #(924 'BASE' 83) #(924 'BEFORE' 84) #(924 'BEGIN' 85) #(924 'BEHAVIOR' 86) #(924 'BETWEEN' 87) #(924 'BINARY' 88) #(924 'BIT' 89) #(924 'BLANK' 94) #(924 'BLANKS' 95) #(924 'BLOCK' 96) #(924 'BLOCKS' 97) #(924 'BOOLC' 98) #(924 'BOUND' 99) #(924 'BOUNDARIES' 100) #(924 'BOUNDS' 101) #(924 'BOXED' 102) #(924 'BREAK' 103) #(924 'BUFFER' 105) #(924 'BY' 106) #(924 'BYPASSING' 107) #(924 'BYTE' 108) #(924 'CA' 116) #(924 'CALL' 117) #(924 'CALLING' 118) #(924 'CASE' 119) #(924 'CAST' 120) #(924 'CASTING' 121) #(924 'CATCH' 122) #(924 'CDS' 123) #(924 'CEIL' 877) #(924 'CENTER' 124) #(924 'CENTERED' 125) #(924 'CHAIN' 126) #(924 'CHANGE' 129) #(924 'CHANGING' 130) #(924 'CHANNELS' 131) #(924 'CHAR' 132) #(924 'CHARACTER' 134) #(924 'CHECK' 135) #(924 'CHECKBOX' 136) #(924 'CID' 137) #(924 'CIRCULAR' 138) #(924 'CLASS' 139) #(924 'CLEANUP' 143) #(924 'CLEAR' 144) #(924 'CLIENT' 145) #(924 'CLIENTS' 146) #(924 'CLOCK' 147) #(924 'CLONE' 148) #(924 'CLOSE' 149) #(924 'CN' 150) #(924 'CO' 151) #(924 'COALESCE' 878) #(924 'CODE' 152) #(924 'COLLECT' 153) #(924 'COLOR' 154) #(924 'COLUMN' 155) #(924 'COLUMNS' 156) #(924 'COL_BACKGROUND' 157) #(924 'COL_GROUP' 158) #(924 'COL_HEADING' 159) #(924 'COL_KEY' 160) #(924 'COL_NEGATIVE' 161) #(924 'COL_NORMAL' 162) #(924 'COL_POSITIVE' 163) #(924 'COL_TOTAL' 164) #(924 'COMMENT' 165) #(924 'COMMENTS' 166) #(924 'COMMIT' 167) #(924 'COMMON' 168) #(924 'COMMUNICATION' 169) #(924 'COMPARING' 170) #(924 'COMPONENT' 171) #(924 'COMPONENTS' 172) #(924 'COMPRESSION' 173) #(924 'COMPUTE' 174) #(924 'CONCAT' 879) #(924 'CONCATENATE' 175) #(924 'CONCAT_WITH_SPACE' 880) #(924 'COND' 176) #(924 'CONDENSE' 177) #(924 'CONDITION' 178) #(924 'CONNECTION' 179) #(924 'CONSTANT' 180) #(924 'CONSTANTS' 181) #(924 'CONTEXT' 182) #(924 'CONTEXTS' 183) #(924 'CONTINUE' 184) #(924 'CONTROL' 185) #(924 'CONTROLS' 186) #(924 'CONV' 187) #(924 'CONVERSION' 188) #(924 'CONVERT' 189) #(924 'COPIES' 190) #(924 'COPY' 191) #(924 'CORRESPONDING' 192) #(924 'COUNT' 193) #(924 'COUNTRY' 194) #(924 'COVER' 195) #(924 'CP' 196) #(924 'CPI' 197) #(924 'CREATE' 198) #(924 'CRITICAL' 199) #(924 'CS' 200) #(924 'CURRENCY' 201) #(924 'CURRENT' 202) #(924 'CURSOR' 203) #(924 'DANGEROUS' 205) #(924 'DATA' 206) #(924 'DATABASE' 207) #(924 'DATAINFO' 208) #(924 'DATASET' 209) #(924 'DATE' 210) #(924 'DAYLIGHT' 211) #(924 'DB2' 212) #(924 'DB6' 213) #(924 'DDL' 216) #(924 'DDMMYY' 217) #(924 'DEALLOCATE' 218) #(924 'DEC' 219) #(924 'DECIMALS' 220) #(924 'DECLARATIONS' 221) #(924 'DEEP' 222) #(924 'DEFAULT' 223) #(924 'DEFERRED' 224) #(924 'DEFINE' 225) #(924 'DEFINITION' 226) #(924 'DELETE' 227) #(924 'DELETING' 228) #(924 'DEMAND' 229) #(924 'DEPARTMENT' 230) #(924 'DESCENDING' 231) #(924 'DESCRIBE' 232) #(924 'DESTINATION' 233) #(924 'DETAIL' 234) #(924 'DETERMINATION' 235) #(924 'DETERMINE' 236) #(924 'DIALOG' 237) #(924 'DID' 238) #(924 'DIRECTORY' 239) #(924 'DISCARDING' 240) #(924 'DISPLAY' 241) #(924 'DISTANCE' 243) #(924 'DISTINCT' 244) #(924 'DIV' 245) #(924 'DIVIDE' 246) #(924 'DO' 247) #(924 'DUMMY' 248) #(924 'DUPLICATE' 249) #(924 'DUPLICATES' 250) #(924 'DURATION' 251) #(924 'DURING' 252) #(924 'DYNPRO' 253) #(924 'EARLY' 254) #(924 'EDIT' 255) #(924 'ELSE' 257) #(924 'ELSEIF' 258) #(924 'EMPTY' 259) #(924 'ENABLED' 260) #(924 'ENABLING' 261) #(924 'ENCODING' 262) #(924 'END' 263) #(924 'ENDAT' 270) #(924 'ENDCASE' 271) #(924 'ENDCATCH' 272) #(924 'ENDCHAIN' 273) #(924 'ENDCLASS' 274) #(924 'ENDDO' 275) #(924 'ENDENHANCEMENT' 276) #(924 'ENDEXEC' 277) #(924 'ENDFORM' 278) #(924 'ENDFUNCTION' 279) #(924 'ENDIAN' 280) #(924 'ENDIF' 281) #(924 'ENDING' 282) #(924 'ENDINTERFACE' 283) #(924 'ENDLOOP' 284) #(924 'ENDMETHOD' 285) #(924 'ENDMODULE' 286) #(924 'ENDON' 287) #(924 'ENDPROVIDE' 288) #(924 'ENDSELECT' 289) #(924 'ENDTRY' 290) #(924 'ENDWHILE' 291) #(924 'ENDWITH' 292) #(924 'ENGINEERING' 293) #(924 'ENHANCEMENT' 294) #(924 'ENHANCEMENTS' 297) #(924 'ENTITIES' 298) #(924 'ENTITY' 299) #(924 'ENTRIES' 300) #(924 'ENTRY' 301) #(924 'ENUM' 302) #(924 'ENVIRONMENT' 303) #(924 'EQ' 304) #(924 'EQUIV' 305) #(924 'ERRORS' 306) #(924 'ESCAPE' 307) #(924 'ESCAPING' 308) #(924 'EVENT' 309) #(924 'EVENTS' 310) #(924 'EXACT' 311) #(924 'EXCEPT' 312) #(924 'EXCEPTION' 313) #(924 'EXCEPTIONS' 315) #(924 'EXCLUDE' 316) #(924 'EXCLUDING' 317) #(924 'EXEC' 318) #(924 'EXECUTE' 319) #(924 'EXISTS' 320) #(924 'EXIT' 321) #(924 'EXPANDING' 323) #(924 'EXPIRATION' 324) #(924 'EXPLICIT' 325) #(924 'EXPONENT' 326) #(924 'EXPORT' 327) #(924 'EXPORTING' 328) #(924 'EXTENDED' 329) #(924 'EXTENSION' 330) #(924 'EXTRACT' 331) #(924 'FAIL' 332) #(924 'FAILED' 333) #(924 'FEATURES' 334) #(924 'FETCH' 335) #(924 'FIELD' 336) #(924 'FIELDS' 340) #(924 'FILE' 341) #(924 'FILL' 342) #(924 'FILTER' 343) #(924 'FILTERS' 344) #(924 'FINAL' 345) #(924 'FIND' 346) #(924 'FIRST' 347) #(924 'FLOOR' 881) #(924 'FLTP' 350) #(924 'FLUSH' 351) #(924 'FONT' 352) #(924 'FOR' 353) #(924 'FORM' 354) #(924 'FORMAT' 355) #(924 'FORWARD' 356) #(924 'FOUND' 357) #(924 'FRAME' 358) #(924 'FRAMES' 359) #(924 'FREE' 360) #(924 'FRIENDS' 361) #(924 'FROM' 362) #(924 'FULL' 363) #(924 'FUNCTION' 364) #(924 'FURTHER' 366) #(924 'GE' 367) #(924 'GENERATE' 368) #(924 'GET' 369) #(924 'GIVING' 370) #(924 'GLOBAL' 371) #(924 'GRAPH' 372) #(924 'GROUP' 373) #(924 'GROUPS' 374) #(924 'GT' 375) #(924 'HANDLE' 376) #(924 'HANDLER' 377) #(924 'HARMLESS' 378) #(924 'HASHED' 379) #(924 'HAVING' 380) #(924 'HDB' 381) #(924 'HEADER' 382) #(924 'HEADERS' 383) #(924 'HEADING' 384) #(924 'HIDE' 387) #(924 'HIERARCHY' 388) #(924 'HIGH' 389) #(924 'HINT' 390) #(924 'HOLD' 391) #(924 'HOTSPOT' 392) #(924 'ICON' 393) #(924 'ID' 394) #(924 'IDENTIFICATION' 395) #(924 'IDENTIFIER' 396) #(924 'IDS' 397) #(924 'IF' 398) #(924 'IGNORE' 399) #(924 'IGNORING' 400) #(924 'IMMEDIATELY' 401) #(924 'IMPLEMENTATION' 402) #(924 'IMPLEMENTED' 403) #(924 'IMPLICIT' 404) #(924 'IMPORT' 405) #(924 'IMPORTING' 406) #(924 'IN' 407) #(924 'INACTIVE' 408) #(924 'INCL' 409) #(924 'INCLUDE' 410) #(924 'INCLUDES' 411) #(924 'INCREMENT' 412) #(924 'INDEX' 413) #(924 'INFORMIX' 415) #(924 'INFOTYPES' 416) #(924 'INHERITING' 417) #(924 'INIT' 418) #(924 'INITIAL' 419) #(924 'INITIALIZATION' 420) #(924 'INNER' 421) #(924 'INPUT' 422) #(924 'INSERT' 423) #(924 'INSTANCE' 424) #(924 'INSTANCES' 425) #(924 'INT2' 426) #(924 'INT4' 427) #(924 'INT8' 428) #(924 'INTENSIFIED' 429) #(924 'INTERFACE' 430) #(924 'INTERFACES' 431) #(924 'INTERNAL' 432) #(924 'INTERVALS' 433) #(924 'INTO' 434) #(924 'INVERSE' 435) #(924 'IS' 437) #(924 'ISO' 438) #(924 'JOB' 439) #(924 'JOIN' 440) #(924 'KEEP' 441) #(924 'KEEPING' 442) #(924 'KERNEL' 443) #(924 'KEY' 444) #(924 'KEYS' 445) #(924 'KEYWORDS' 446) #(924 'KIND' 447) #(924 'LANGUAGE' 448) #(924 'LAST' 449) #(924 'LATE' 450) #(924 'LAYOUT' 451) #(924 'LE' 452) #(924 'LEADING' 453) #(924 'LEAVE' 454) #(924 'LEFT' 455) #(924 'LEFTPLUS' 457) #(924 'LEFTSPACE' 458) #(924 'LEGACY' 459) #(924 'LENGTH' 460) #(924 'LET' 461) #(924 'LEVEL' 462) #(924 'LEVELS' 463) #(924 'LIKE' 464) #(924 'LINE' 465) #(924 'LINEFEED' 469) #(924 'LINES' 470) #(924 'LINK' 471) #(924 'LIST' 472) #(924 'LISTBOX' 474) #(924 'LOAD' 475) #(924 'LOCAL' 477) #(924 'LOCALE' 478) #(924 'LOCK' 479) #(924 'LOCKS' 480) #(924 'LOGFILE' 482) #(924 'LOGICAL' 483) #(924 'LONG' 484) #(924 'LOOP' 485) #(924 'LOW' 486) #(924 'LOWER' 487) #(924 'LPI' 488) #(924 'LT' 489) #(924 'LTRIM' 882) #(924 'MAIN' 491) #(924 'MAPPED' 492) #(924 'MAPPING' 493) #(924 'MARGIN' 494) #(924 'MARK' 495) #(924 'MASK' 496) #(924 'MATCH' 497) #(924 'MATCHCODE' 498) #(924 'MAX' 499) #(924 'MAXIMUM' 500) #(924 'MEDIUM' 501) #(924 'MEMBERS' 502) #(924 'MEMORY' 503) #(924 'MESH' 504) #(924 'MESSAGE' 505) #(924 'MESSAGES' 507) #(924 'MESSAGING' 508) #(924 'METHOD' 509) #(924 'METHODS' 510) #(924 'MIN' 511) #(924 'MMDDYY' 514) #(924 'MOD' 515) #(924 'MODE' 516) #(924 'MODIF' 517) #(924 'MODIFIER' 518) #(924 'MODIFY' 519) #(924 'MODULE' 520) #(924 'MOVE' 521) #(924 'MSSQLNT' 523) #(924 'MULTIPLY' 524) #(924 'NA' 526) #(924 'NAME' 527) #(924 'NAMETAB' 528) #(924 'NATIVE' 529) #(924 'NE' 530) #(924 'NESTED' 531) #(924 'NESTING' 532) #(924 'NEW' 533) #(924 'NEXT' 537) #(924 'NO' 538) #(924 'NODES' 550) #(924 'NOT' 553) #(924 'NP' 554) #(924 'NS' 555) #(924 'NULL' 556) #(924 'NUMBER' 557) #(924 'NUMBERING' 558) #(924 'NUMC' 559) #(924 'OBJECT' 561) #(924 'OBJECTS' 562) #(924 'OBJMGR' 563) #(924 'OBLIGATORY' 564) #(924 'OCCURENCE' 565) #(924 'OCCURENCES' 566) #(924 'OCCURRENCE' 567) #(924 'OCCURRENCES' 568) #(924 'OCCURS' 569) #(924 'OF' 570) #(924 'OFF' 571) #(924 'OFFSET' 572) #(924 'ON' 573) #(924 'ONE' 574) #(924 'ONLY' 575) #(924 'OPEN' 576) #(924 'OPTION' 577) #(924 'OPTIONAL' 578) #(924 'OPTIONS' 579) #(924 'OR' 580) #(924 'ORACLE' 581) #(924 'ORDER' 582) #(924 'OTHERS' 583) #(924 'OUT' 584) #(924 'OUTER' 585) #(924 'OUTPUT' 586) #(924 'OVERFLOW' 588) #(924 'OVERLAY' 589) #(924 'PACK' 590) #(924 'PACKAGE' 591) #(924 'PAD' 592) #(924 'PADDING' 593) #(924 'PAGE' 594) #(924 'PAGES' 595) #(924 'PARAMETER' 596) #(924 'PARAMETERS' 598) #(924 'PART' 599) #(924 'PARTIALLY' 600) #(924 'PCRE' 601) #(924 'PERCENTAGE' 602) #(924 'PERFORM' 603) #(924 'PERFORMING' 604) #(924 'PERMISSIONS' 605) #(924 'PLACES' 607) #(924 'POOL' 608) #(924 'POSITION' 609) #(924 'POS_HIGH' 610) #(924 'POS_LOW' 611) #(924 'PRAGMAS' 612) #(924 'PRECHECK' 613) #(924 'PRECOMPILED' 614) #(924 'PREFERRED' 615) #(924 'PRESERVING' 616) #(924 'PRIMARY' 617) #(924 'PRINT' 618) #(924 'PRIVATE' 620) #(924 'PRIVILEGED' 621) #(924 'PROCEDURE' 622) #(924 'PROGRAM' 623) #(924 'PROPERTY' 624) #(924 'PROTECTED' 625) #(924 'PROVIDE' 626) #(924 'PUBLIC' 627) #(924 'PUSH' 628) #(924 'PUSHBUTTON' 629) #(924 'PUT' 630) #(924 'QUEUEONLY' 632) #(924 'QUICKINFO' 633) #(924 'RADIOBUTTON' 634) #(924 'RAISE' 635) #(924 'RAISING' 636) #(924 'RANGE' 637) #(924 'RANGES' 638) #(924 'RAW' 639) #(924 'READ' 640) #(924 'RECEIVE' 642) #(924 'RECEIVED' 643) #(924 'RECEIVER' 644) #(924 'RECEIVING' 645) #(924 'REDEFINITION' 646) #(924 'REDUCE' 647) #(924 'REF' 648) #(924 'REFERENCE' 649) #(924 'REFRESH' 650) #(924 'REGEX' 651) #(924 'REJECT' 652) #(924 'RELATING' 653) #(924 'RENAMING' 654) #(924 'REPLACE' 655) #(924 'REPLACEMENT' 656) #(924 'REPLACING' 657) #(924 'REPORT' 658) #(924 'REPORTED' 659) #(924 'REQUEST' 660) #(924 'REQUESTED' 661) #(924 'REQUIRED' 662) #(924 'RESERVE' 663) #(924 'RESET' 664) #(924 'RESOLUTION' 665) #(924 'RESPECTING' 666) #(924 'RESPONSE' 667) #(924 'RESPONSES' 668) #(924 'RESULT' 669) #(924 'RESULTS' 670) #(924 'RESUMABLE' 671) #(924 'RESUME' 672) #(924 'RETRY' 673) #(924 'RETURN' 674) #(924 'RETURNCODE' 675) #(924 'RETURNING' 676) #(924 'RIGHT' 677) #(924 'RIGHTPLUS' 679) #(924 'RIGHTSPACE' 680) #(924 'RISK' 681) #(924 'ROLLBACK' 682) #(924 'ROUND' 683) #(924 'ROWS' 684) #(924 'RTRIM' 883) #(924 'RUN' 685) #(924 'SAP' 686) #(924 'SAVE' 688) #(924 'SAVING' 689) #(924 'SCALE_PRESERVING' 690) #(924 'SCALE_PRESERVING_SCIENTIFIC' 691) #(924 'SCAN' 692) #(924 'SCIENTIFIC' 693) #(924 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(924 'SCREEN' 695) #(924 'SCROLL' 696) #(924 'SCROLLING' 698) #(924 'SEARCH' 699) #(924 'SECONDARY' 700) #(924 'SECONDS' 701) #(924 'SECTION' 702) #(924 'SELECT' 703) #(924 'SELECTION' 705) #(924 'SELECTIONS' 710) #(924 'SEND' 711) #(924 'SEPARATE' 712) #(924 'SEPARATED' 713) #(924 'SESSION' 714) #(924 'SET' 715) #(924 'SHARED' 716) #(924 'SHIFT' 717) #(924 'SHORT' 718) #(924 'SHORTDUMP' 719) #(924 'SIGN' 721) #(924 'SIGN_AS_POSTFIX' 722) #(924 'SIMPLE' 723) #(924 'SIMULATION' 724) #(924 'SINGLE' 725) #(924 'SIZE' 726) #(924 'SKIP' 727) #(924 'SKIPPING' 728) #(924 'SMART' 729) #(924 'SOME' 730) #(924 'SORT' 731) #(924 'SORTABLE' 732) #(924 'SORTED' 733) #(924 'SOURCE' 734) #(924 'SPACE' 735) #(924 'SPECIFIED' 736) #(924 'SPLIT' 737) #(924 'SPOOL' 738) #(924 'SPOTS' 739) #(924 'SQL' 740) #(924 'SQLSCRIPT' 741) #(924 'STABLE' 742) #(924 'STAMP' 743) #(924 'STANDARD' 744) #(924 'STARTING' 746) #(924 'STATE' 747) #(924 'STATEMENT' 748) #(924 'STATEMENTS' 749) #(924 'STATIC' 750) #(924 'STATICS' 751) #(924 'STATUSINFO' 752) #(924 'STEP' 753) #(924 'STOP' 755) #(924 'STRUCTURE' 756) #(924 'STRUCTURES' 757) #(924 'STYLE' 758) #(924 'SUBKEY' 759) #(924 'SUBMATCHES' 760) #(924 'SUBMIT' 761) #(924 'SUBROUTINE' 762) #(924 'SUBSCREEN' 763) #(924 'SUBSTRING' 764) #(924 'SUBTRACT' 765) #(924 'SUFFIX' 767) #(924 'SUM' 768) #(924 'SUMMARY' 769) #(924 'SUPPLIED' 770) #(924 'SUPPLY' 771) #(924 'SUPPRESS' 772) #(924 'SWITCH' 773) #(924 'SYBASE' 774) #(924 'SYMBOL' 775) #(924 'T000' 779) #(924 'TAB' 780) #(924 'TABBED' 781) #(924 'TABLE' 782) #(924 'TABLES' 783) #(924 'TABLEVIEW' 784) #(924 'TABSTRIP' 785) #(924 'TARGET' 786) #(924 'TASK' 787) #(924 'TASKS' 788) #(924 'TEST' 789) #(924 'TESTING' 792) #(924 'TEXT' 793) #(924 'TEXTPOOL' 794) #(924 'THEN' 795) #(924 'THROW' 796) #(924 'TIME' 797) #(924 'TIMES' 798) #(924 'TIMESTAMP' 799) #(924 'TIMEZONE' 800) #(924 'TITLE' 801) #(924 'TITLEBAR' 802) #(924 'TO' 803) #(924 'TOKENIZATION' 804) #(924 'TOKENS' 805) #(924 'TRAILING' 810) #(924 'TRANSACTION' 811) #(924 'TRANSFER' 812) #(924 'TRANSFORMATION' 813) #(924 'TRANSLATE' 814) #(924 'TRANSPORTING' 815) #(924 'TRMAC' 816) #(924 'TRUNCATION' 817) #(924 'TRY' 818) #(924 'TYPE' 819) #(924 'TYPES' 822) #(924 'ULINE' 823) #(924 'UNASSIGN' 824) #(924 'UNDER' 825) #(924 'UNICODE' 826) #(924 'UNION' 827) #(924 'UNIQUE' 828) #(924 'UNIT' 829) #(924 'UNIX' 830) #(924 'UNPACK' 831) #(924 'UNTIL' 832) #(924 'UNWIND' 833) #(924 'UP' 834) #(924 'UPDATE' 835) #(924 'UPPER' 836) #(924 'USER' 837) #(924 'USING' 839) #(924 'UTCLONG' 840) #(924 'UUID' 884) #(924 'VALID' 842) #(924 'VALIDATE' 843) #(924 'VALUE' 844) #(924 'VALUES' 846) #(924 'VARY' 847) #(924 'VARYING' 848) #(924 'VERSION' 849) #(924 'VIA' 850) #(924 'VISIBLE' 851) #(924 'WAIT' 852) #(924 'WHEN' 853) #(924 'WHERE' 854) #(924 'WHILE' 855) #(924 'WIDTH' 856) #(924 'WINDOW' 857) #(924 'WINDOWS' 858) #(924 'WITH' 859) #(924 'WITHOUT' 862) #(924 'WORD' 863) #(924 'WORK' 864) #(924 'WORKSPACE' 865) #(924 'WRITE' 866) #(924 'WRITER' 867) #(924 'XML' 868) #(924 'XSD' 869) #(924 'XSDBOOL' 870) #(924 'YES' 871) #(924 'YYMMDD' 872) #(924 'ZERO' 874) #(924 'ZONE' 875) #(925 'ABS' 876) #(925 'ABSTRACT' 33) #(925 'ACCEPT' 34) #(925 'ACCEPTING' 35) #(925 'ACCESS' 36) #(925 'ACCORDING' 37) #(925 'ACTION' 38) #(925 'ACTIVATION' 39) #(925 'ACTUAL' 40) #(925 'ADABAS' 41) #(925 'ADD' 42) #(925 'ADJACENT' 44) #(925 'ALIAS' 45) #(925 'ALIASES' 46) #(925 'ALIGN' 47) #(925 'ALL' 48) #(925 'ALLOCATE' 49) #(925 'ALPHA' 50) #(925 'AMDP' 51) #(925 'ANALYSIS' 52) #(925 'ANALYZER' 53) #(925 'AND' 54) #(925 'ANY' 55) #(925 'APPEND' 56) #(925 'APPENDING' 57) #(925 'APPLICATION' 58) #(925 'ARCHIVE' 59) #(925 'AREA' 60) #(925 'ARITHMETIC' 61) #(925 'AS' 62) #(925 'AS400' 63) #(925 'ASCENDING' 64) #(925 'ASSERT' 65) #(925 'ASSIGN' 66) #(925 'ASSIGNED' 67) #(925 'ASSIGNING' 68) #(925 'ASSOCIATION' 69) #(925 'ASYNCHRONOUS' 70) #(925 'AT' 71) #(925 'ATTRIBUTES' 72) #(925 'AUGMENTING' 73) #(925 'AUTHORITY' 74) #(925 'AUTHORIZATION' 76) #(925 'AUTO' 77) #(925 'AVG' 78) #(925 'BACK' 79) #(925 'BACKGROUND' 80) #(925 'BACKWARD' 81) #(925 'BADI' 82) #(925 'BASE' 83) #(925 'BEFORE' 84) #(925 'BEGIN' 85) #(925 'BEHAVIOR' 86) #(925 'BETWEEN' 87) #(925 'BINARY' 88) #(925 'BIT' 89) #(925 'BLANK' 94) #(925 'BLANKS' 95) #(925 'BLOCK' 96) #(925 'BLOCKS' 97) #(925 'BOOLC' 98) #(925 'BOUND' 99) #(925 'BOUNDARIES' 100) #(925 'BOUNDS' 101) #(925 'BOXED' 102) #(925 'BREAK' 103) #(925 'BUFFER' 105) #(925 'BY' 106) #(925 'BYPASSING' 107) #(925 'BYTE' 108) #(925 'CA' 116) #(925 'CALL' 117) #(925 'CALLING' 118) #(925 'CASE' 119) #(925 'CAST' 120) #(925 'CASTING' 121) #(925 'CATCH' 122) #(925 'CDS' 123) #(925 'CEIL' 877) #(925 'CENTER' 124) #(925 'CENTERED' 125) #(925 'CHAIN' 126) #(925 'CHANGE' 129) #(925 'CHANGING' 130) #(925 'CHANNELS' 131) #(925 'CHAR' 132) #(925 'CHARACTER' 134) #(925 'CHECK' 135) #(925 'CHECKBOX' 136) #(925 'CID' 137) #(925 'CIRCULAR' 138) #(925 'CLASS' 139) #(925 'CLEANUP' 143) #(925 'CLEAR' 144) #(925 'CLIENT' 145) #(925 'CLIENTS' 146) #(925 'CLOCK' 147) #(925 'CLONE' 148) #(925 'CLOSE' 149) #(925 'CN' 150) #(925 'CO' 151) #(925 'COALESCE' 878) #(925 'CODE' 152) #(925 'COLLECT' 153) #(925 'COLOR' 154) #(925 'COLUMN' 155) #(925 'COLUMNS' 156) #(925 'COL_BACKGROUND' 157) #(925 'COL_GROUP' 158) #(925 'COL_HEADING' 159) #(925 'COL_KEY' 160) #(925 'COL_NEGATIVE' 161) #(925 'COL_NORMAL' 162) #(925 'COL_POSITIVE' 163) #(925 'COL_TOTAL' 164) #(925 'COMMENT' 165) #(925 'COMMENTS' 166) #(925 'COMMIT' 167) #(925 'COMMON' 168) #(925 'COMMUNICATION' 169) #(925 'COMPARING' 170) #(925 'COMPONENT' 171) #(925 'COMPONENTS' 172) #(925 'COMPRESSION' 173) #(925 'COMPUTE' 174) #(925 'CONCAT' 879) #(925 'CONCATENATE' 175) #(925 'CONCAT_WITH_SPACE' 880) #(925 'COND' 176) #(925 'CONDENSE' 177) #(925 'CONDITION' 178) #(925 'CONNECTION' 179) #(925 'CONSTANT' 180) #(925 'CONSTANTS' 181) #(925 'CONTEXT' 182) #(925 'CONTEXTS' 183) #(925 'CONTINUE' 184) #(925 'CONTROL' 185) #(925 'CONTROLS' 186) #(925 'CONV' 187) #(925 'CONVERSION' 188) #(925 'CONVERT' 189) #(925 'COPIES' 190) #(925 'COPY' 191) #(925 'CORRESPONDING' 192) #(925 'COUNT' 193) #(925 'COUNTRY' 194) #(925 'COVER' 195) #(925 'CP' 196) #(925 'CPI' 197) #(925 'CREATE' 198) #(925 'CRITICAL' 199) #(925 'CS' 200) #(925 'CURRENCY' 201) #(925 'CURRENT' 202) #(925 'CURSOR' 203) #(925 'DANGEROUS' 205) #(925 'DATA' 206) #(925 'DATABASE' 207) #(925 'DATAINFO' 208) #(925 'DATASET' 209) #(925 'DATE' 210) #(925 'DAYLIGHT' 211) #(925 'DB2' 212) #(925 'DB6' 213) #(925 'DDL' 216) #(925 'DDMMYY' 217) #(925 'DEALLOCATE' 218) #(925 'DEC' 219) #(925 'DECIMALS' 220) #(925 'DECLARATIONS' 221) #(925 'DEEP' 222) #(925 'DEFAULT' 223) #(925 'DEFERRED' 224) #(925 'DEFINE' 225) #(925 'DEFINITION' 226) #(925 'DELETE' 227) #(925 'DELETING' 228) #(925 'DEMAND' 229) #(925 'DEPARTMENT' 230) #(925 'DESCENDING' 231) #(925 'DESCRIBE' 232) #(925 'DESTINATION' 233) #(925 'DETAIL' 234) #(925 'DETERMINATION' 235) #(925 'DETERMINE' 236) #(925 'DIALOG' 237) #(925 'DID' 238) #(925 'DIRECTORY' 239) #(925 'DISCARDING' 240) #(925 'DISPLAY' 241) #(925 'DISTANCE' 243) #(925 'DISTINCT' 244) #(925 'DIV' 245) #(925 'DIVIDE' 246) #(925 'DO' 247) #(925 'DUMMY' 248) #(925 'DUPLICATE' 249) #(925 'DUPLICATES' 250) #(925 'DURATION' 251) #(925 'DURING' 252) #(925 'DYNPRO' 253) #(925 'EARLY' 254) #(925 'EDIT' 255) #(925 'ELSE' 257) #(925 'ELSEIF' 258) #(925 'EMPTY' 259) #(925 'ENABLED' 260) #(925 'ENABLING' 261) #(925 'ENCODING' 262) #(925 'END' 263) #(925 'ENDAT' 270) #(925 'ENDCASE' 271) #(925 'ENDCATCH' 272) #(925 'ENDCHAIN' 273) #(925 'ENDCLASS' 274) #(925 'ENDDO' 275) #(925 'ENDENHANCEMENT' 276) #(925 'ENDEXEC' 277) #(925 'ENDFORM' 278) #(925 'ENDFUNCTION' 279) #(925 'ENDIAN' 280) #(925 'ENDIF' 281) #(925 'ENDING' 282) #(925 'ENDINTERFACE' 283) #(925 'ENDLOOP' 284) #(925 'ENDMETHOD' 285) #(925 'ENDMODULE' 286) #(925 'ENDON' 287) #(925 'ENDPROVIDE' 288) #(925 'ENDSELECT' 289) #(925 'ENDTRY' 290) #(925 'ENDWHILE' 291) #(925 'ENDWITH' 292) #(925 'ENGINEERING' 293) #(925 'ENHANCEMENT' 294) #(925 'ENHANCEMENTS' 297) #(925 'ENTITIES' 298) #(925 'ENTITY' 299) #(925 'ENTRIES' 300) #(925 'ENTRY' 301) #(925 'ENUM' 302) #(925 'ENVIRONMENT' 303) #(925 'EQ' 304) #(925 'EQUIV' 305) #(925 'ERRORS' 306) #(925 'ESCAPE' 307) #(925 'ESCAPING' 308) #(925 'EVENT' 309) #(925 'EVENTS' 310) #(925 'EXACT' 311) #(925 'EXCEPT' 312) #(925 'EXCEPTION' 313) #(925 'EXCEPTIONS' 315) #(925 'EXCLUDE' 316) #(925 'EXCLUDING' 317) #(925 'EXEC' 318) #(925 'EXECUTE' 319) #(925 'EXISTS' 320) #(925 'EXIT' 321) #(925 'EXPANDING' 323) #(925 'EXPIRATION' 324) #(925 'EXPLICIT' 325) #(925 'EXPONENT' 326) #(925 'EXPORT' 327) #(925 'EXPORTING' 328) #(925 'EXTENDED' 329) #(925 'EXTENSION' 330) #(925 'EXTRACT' 331) #(925 'FAIL' 332) #(925 'FAILED' 333) #(925 'FEATURES' 334) #(925 'FETCH' 335) #(925 'FIELD' 336) #(925 'FIELDS' 340) #(925 'FILE' 341) #(925 'FILL' 342) #(925 'FILTER' 343) #(925 'FILTERS' 344) #(925 'FINAL' 345) #(925 'FIND' 346) #(925 'FIRST' 347) #(925 'FLOOR' 881) #(925 'FLTP' 350) #(925 'FLUSH' 351) #(925 'FONT' 352) #(925 'FOR' 353) #(925 'FORM' 354) #(925 'FORMAT' 355) #(925 'FORWARD' 356) #(925 'FOUND' 357) #(925 'FRAME' 358) #(925 'FRAMES' 359) #(925 'FREE' 360) #(925 'FRIENDS' 361) #(925 'FROM' 362) #(925 'FULL' 363) #(925 'FUNCTION' 364) #(925 'FURTHER' 366) #(925 'GE' 367) #(925 'GENERATE' 368) #(925 'GET' 369) #(925 'GIVING' 370) #(925 'GLOBAL' 371) #(925 'GRAPH' 372) #(925 'GROUP' 373) #(925 'GROUPS' 374) #(925 'GT' 375) #(925 'HANDLE' 376) #(925 'HANDLER' 377) #(925 'HARMLESS' 378) #(925 'HASHED' 379) #(925 'HAVING' 380) #(925 'HDB' 381) #(925 'HEADER' 382) #(925 'HEADERS' 383) #(925 'HEADING' 384) #(925 'HIDE' 387) #(925 'HIERARCHY' 388) #(925 'HIGH' 389) #(925 'HINT' 390) #(925 'HOLD' 391) #(925 'HOTSPOT' 392) #(925 'ICON' 393) #(925 'ID' 394) #(925 'IDENTIFICATION' 395) #(925 'IDENTIFIER' 396) #(925 'IDS' 397) #(925 'IF' 398) #(925 'IGNORE' 399) #(925 'IGNORING' 400) #(925 'IMMEDIATELY' 401) #(925 'IMPLEMENTATION' 402) #(925 'IMPLEMENTED' 403) #(925 'IMPLICIT' 404) #(925 'IMPORT' 405) #(925 'IMPORTING' 406) #(925 'IN' 407) #(925 'INACTIVE' 408) #(925 'INCL' 409) #(925 'INCLUDE' 410) #(925 'INCLUDES' 411) #(925 'INCREMENT' 412) #(925 'INDEX' 413) #(925 'INFORMIX' 415) #(925 'INFOTYPES' 416) #(925 'INHERITING' 417) #(925 'INIT' 418) #(925 'INITIAL' 419) #(925 'INITIALIZATION' 420) #(925 'INNER' 421) #(925 'INPUT' 422) #(925 'INSERT' 423) #(925 'INSTANCE' 424) #(925 'INSTANCES' 425) #(925 'INT2' 426) #(925 'INT4' 427) #(925 'INT8' 428) #(925 'INTENSIFIED' 429) #(925 'INTERFACE' 430) #(925 'INTERFACES' 431) #(925 'INTERNAL' 432) #(925 'INTERVALS' 433) #(925 'INTO' 434) #(925 'INVERSE' 435) #(925 'IS' 437) #(925 'ISO' 438) #(925 'JOB' 439) #(925 'JOIN' 440) #(925 'KEEP' 441) #(925 'KEEPING' 442) #(925 'KERNEL' 443) #(925 'KEY' 444) #(925 'KEYS' 445) #(925 'KEYWORDS' 446) #(925 'KIND' 447) #(925 'LANGUAGE' 448) #(925 'LAST' 449) #(925 'LATE' 450) #(925 'LAYOUT' 451) #(925 'LE' 452) #(925 'LEADING' 453) #(925 'LEAVE' 454) #(925 'LEFT' 455) #(925 'LEFTPLUS' 457) #(925 'LEFTSPACE' 458) #(925 'LEGACY' 459) #(925 'LENGTH' 460) #(925 'LET' 461) #(925 'LEVEL' 462) #(925 'LEVELS' 463) #(925 'LIKE' 464) #(925 'LINE' 465) #(925 'LINEFEED' 469) #(925 'LINES' 470) #(925 'LINK' 471) #(925 'LIST' 472) #(925 'LISTBOX' 474) #(925 'LOAD' 475) #(925 'LOCAL' 477) #(925 'LOCALE' 478) #(925 'LOCK' 479) #(925 'LOCKS' 480) #(925 'LOGFILE' 482) #(925 'LOGICAL' 483) #(925 'LONG' 484) #(925 'LOOP' 485) #(925 'LOW' 486) #(925 'LOWER' 487) #(925 'LPI' 488) #(925 'LT' 489) #(925 'LTRIM' 882) #(925 'MAIN' 491) #(925 'MAPPED' 492) #(925 'MAPPING' 493) #(925 'MARGIN' 494) #(925 'MARK' 495) #(925 'MASK' 496) #(925 'MATCH' 497) #(925 'MATCHCODE' 498) #(925 'MAX' 499) #(925 'MAXIMUM' 500) #(925 'MEDIUM' 501) #(925 'MEMBERS' 502) #(925 'MEMORY' 503) #(925 'MESH' 504) #(925 'MESSAGE' 505) #(925 'MESSAGES' 507) #(925 'MESSAGING' 508) #(925 'METHOD' 509) #(925 'METHODS' 510) #(925 'MIN' 511) #(925 'MMDDYY' 514) #(925 'MOD' 515) #(925 'MODE' 516) #(925 'MODIF' 517) #(925 'MODIFIER' 518) #(925 'MODIFY' 519) #(925 'MODULE' 520) #(925 'MOVE' 521) #(925 'MSSQLNT' 523) #(925 'MULTIPLY' 524) #(925 'NA' 526) #(925 'NAME' 527) #(925 'NAMETAB' 528) #(925 'NATIVE' 529) #(925 'NE' 530) #(925 'NESTED' 531) #(925 'NESTING' 532) #(925 'NEW' 533) #(925 'NEXT' 537) #(925 'NO' 538) #(925 'NODES' 550) #(925 'NOT' 553) #(925 'NP' 554) #(925 'NS' 555) #(925 'NULL' 556) #(925 'NUMBER' 557) #(925 'NUMBERING' 558) #(925 'NUMC' 559) #(925 'OBJECT' 561) #(925 'OBJECTS' 562) #(925 'OBJMGR' 563) #(925 'OBLIGATORY' 564) #(925 'OCCURENCE' 565) #(925 'OCCURENCES' 566) #(925 'OCCURRENCE' 567) #(925 'OCCURRENCES' 568) #(925 'OCCURS' 569) #(925 'OF' 570) #(925 'OFF' 571) #(925 'OFFSET' 572) #(925 'ON' 573) #(925 'ONE' 574) #(925 'ONLY' 575) #(925 'OPEN' 576) #(925 'OPTION' 577) #(925 'OPTIONAL' 578) #(925 'OPTIONS' 579) #(925 'OR' 580) #(925 'ORACLE' 581) #(925 'ORDER' 582) #(925 'OTHERS' 583) #(925 'OUT' 584) #(925 'OUTER' 585) #(925 'OUTPUT' 586) #(925 'OVERFLOW' 588) #(925 'OVERLAY' 589) #(925 'PACK' 590) #(925 'PACKAGE' 591) #(925 'PAD' 592) #(925 'PADDING' 593) #(925 'PAGE' 594) #(925 'PAGES' 595) #(925 'PARAMETER' 596) #(925 'PARAMETERS' 598) #(925 'PART' 599) #(925 'PARTIALLY' 600) #(925 'PCRE' 601) #(925 'PERCENTAGE' 602) #(925 'PERFORM' 603) #(925 'PERFORMING' 604) #(925 'PERMISSIONS' 605) #(925 'PLACES' 607) #(925 'POOL' 608) #(925 'POSITION' 609) #(925 'POS_HIGH' 610) #(925 'POS_LOW' 611) #(925 'PRAGMAS' 612) #(925 'PRECHECK' 613) #(925 'PRECOMPILED' 614) #(925 'PREFERRED' 615) #(925 'PRESERVING' 616) #(925 'PRIMARY' 617) #(925 'PRINT' 618) #(925 'PRIVATE' 620) #(925 'PRIVILEGED' 621) #(925 'PROCEDURE' 622) #(925 'PROGRAM' 623) #(925 'PROPERTY' 624) #(925 'PROTECTED' 625) #(925 'PROVIDE' 626) #(925 'PUBLIC' 627) #(925 'PUSH' 628) #(925 'PUSHBUTTON' 629) #(925 'PUT' 630) #(925 'QUEUEONLY' 632) #(925 'QUICKINFO' 633) #(925 'RADIOBUTTON' 634) #(925 'RAISE' 635) #(925 'RAISING' 636) #(925 'RANGE' 637) #(925 'RANGES' 638) #(925 'RAW' 639) #(925 'READ' 640) #(925 'RECEIVE' 642) #(925 'RECEIVED' 643) #(925 'RECEIVER' 644) #(925 'RECEIVING' 645) #(925 'REDEFINITION' 646) #(925 'REDUCE' 647) #(925 'REF' 648) #(925 'REFERENCE' 649) #(925 'REFRESH' 650) #(925 'REGEX' 651) #(925 'REJECT' 652) #(925 'RELATING' 653) #(925 'RENAMING' 654) #(925 'REPLACE' 655) #(925 'REPLACEMENT' 656) #(925 'REPLACING' 657) #(925 'REPORT' 658) #(925 'REPORTED' 659) #(925 'REQUEST' 660) #(925 'REQUESTED' 661) #(925 'REQUIRED' 662) #(925 'RESERVE' 663) #(925 'RESET' 664) #(925 'RESOLUTION' 665) #(925 'RESPECTING' 666) #(925 'RESPONSE' 667) #(925 'RESPONSES' 668) #(925 'RESULT' 669) #(925 'RESULTS' 670) #(925 'RESUMABLE' 671) #(925 'RESUME' 672) #(925 'RETRY' 673) #(925 'RETURN' 674) #(925 'RETURNCODE' 675) #(925 'RETURNING' 676) #(925 'RIGHT' 677) #(925 'RIGHTPLUS' 679) #(925 'RIGHTSPACE' 680) #(925 'RISK' 681) #(925 'ROLLBACK' 682) #(925 'ROUND' 683) #(925 'ROWS' 684) #(925 'RTRIM' 883) #(925 'RUN' 685) #(925 'SAP' 686) #(925 'SAVE' 688) #(925 'SAVING' 689) #(925 'SCALE_PRESERVING' 690) #(925 'SCALE_PRESERVING_SCIENTIFIC' 691) #(925 'SCAN' 692) #(925 'SCIENTIFIC' 693) #(925 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(925 'SCREEN' 695) #(925 'SCROLL' 696) #(925 'SCROLLING' 698) #(925 'SEARCH' 699) #(925 'SECONDARY' 700) #(925 'SECONDS' 701) #(925 'SECTION' 702) #(925 'SELECT' 703) #(925 'SELECTION' 705) #(925 'SELECTIONS' 710) #(925 'SEND' 711) #(925 'SEPARATE' 712) #(925 'SEPARATED' 713) #(925 'SESSION' 714) #(925 'SET' 715) #(925 'SHARED' 716) #(925 'SHIFT' 717) #(925 'SHORT' 718) #(925 'SHORTDUMP' 719) #(925 'SIGN' 721) #(925 'SIGN_AS_POSTFIX' 722) #(925 'SIMPLE' 723) #(925 'SIMULATION' 724) #(925 'SINGLE' 725) #(925 'SIZE' 726) #(925 'SKIP' 727) #(925 'SKIPPING' 728) #(925 'SMART' 729) #(925 'SOME' 730) #(925 'SORT' 731) #(925 'SORTABLE' 732) #(925 'SORTED' 733) #(925 'SOURCE' 734) #(925 'SPACE' 735) #(925 'SPECIFIED' 736) #(925 'SPLIT' 737) #(925 'SPOOL' 738) #(925 'SPOTS' 739) #(925 'SQL' 740) #(925 'SQLSCRIPT' 741) #(925 'STABLE' 742) #(925 'STAMP' 743) #(925 'STANDARD' 744) #(925 'STARTING' 746) #(925 'STATE' 747) #(925 'STATEMENT' 748) #(925 'STATEMENTS' 749) #(925 'STATIC' 750) #(925 'STATICS' 751) #(925 'STATUSINFO' 752) #(925 'STEP' 753) #(925 'STOP' 755) #(925 'STRUCTURE' 756) #(925 'STRUCTURES' 757) #(925 'STYLE' 758) #(925 'SUBKEY' 759) #(925 'SUBMATCHES' 760) #(925 'SUBMIT' 761) #(925 'SUBROUTINE' 762) #(925 'SUBSCREEN' 763) #(925 'SUBSTRING' 764) #(925 'SUBTRACT' 765) #(925 'SUFFIX' 767) #(925 'SUM' 768) #(925 'SUMMARY' 769) #(925 'SUPPLIED' 770) #(925 'SUPPLY' 771) #(925 'SUPPRESS' 772) #(925 'SWITCH' 773) #(925 'SYBASE' 774) #(925 'SYMBOL' 775) #(925 'T000' 779) #(925 'TAB' 780) #(925 'TABBED' 781) #(925 'TABLE' 782) #(925 'TABLES' 783) #(925 'TABLEVIEW' 784) #(925 'TABSTRIP' 785) #(925 'TARGET' 786) #(925 'TASK' 787) #(925 'TASKS' 788) #(925 'TEST' 789) #(925 'TESTING' 792) #(925 'TEXT' 793) #(925 'TEXTPOOL' 794) #(925 'THEN' 795) #(925 'THROW' 796) #(925 'TIME' 797) #(925 'TIMES' 798) #(925 'TIMESTAMP' 799) #(925 'TIMEZONE' 800) #(925 'TITLE' 801) #(925 'TITLEBAR' 802) #(925 'TO' 803) #(925 'TOKENIZATION' 804) #(925 'TOKENS' 805) #(925 'TRAILING' 810) #(925 'TRANSACTION' 811) #(925 'TRANSFER' 812) #(925 'TRANSFORMATION' 813) #(925 'TRANSLATE' 814) #(925 'TRANSPORTING' 815) #(925 'TRMAC' 816) #(925 'TRUNCATION' 817) #(925 'TRY' 818) #(925 'TYPE' 819) #(925 'TYPES' 822) #(925 'ULINE' 823) #(925 'UNASSIGN' 824) #(925 'UNDER' 825) #(925 'UNICODE' 826) #(925 'UNION' 827) #(925 'UNIQUE' 828) #(925 'UNIT' 829) #(925 'UNIX' 830) #(925 'UNPACK' 831) #(925 'UNTIL' 832) #(925 'UNWIND' 833) #(925 'UP' 834) #(925 'UPDATE' 835) #(925 'UPPER' 836) #(925 'USER' 837) #(925 'USING' 839) #(925 'UTCLONG' 840) #(925 'UUID' 884) #(925 'VALID' 842) #(925 'VALIDATE' 843) #(925 'VALUE' 844) #(925 'VALUES' 846) #(925 'VARY' 847) #(925 'VARYING' 848) #(925 'VERSION' 849) #(925 'VIA' 850) #(925 'VISIBLE' 851) #(925 'WAIT' 852) #(925 'WHEN' 853) #(925 'WHERE' 854) #(925 'WHILE' 855) #(925 'WIDTH' 856) #(925 'WINDOW' 857) #(925 'WINDOWS' 858) #(925 'WITH' 859) #(925 'WITHOUT' 862) #(925 'WORD' 863) #(925 'WORK' 864) #(925 'WORKSPACE' 865) #(925 'WRITE' 866) #(925 'WRITER' 867) #(925 'XML' 868) #(925 'XSD' 869) #(925 'XSDBOOL' 870) #(925 'YES' 871) #(925 'YYMMDD' 872) #(925 'ZERO' 874) #(925 'ZONE' 875) #(887 'ABS' 876) #(887 'ABSTRACT' 33) #(887 'ACCEPT' 34) #(887 'ACCEPTING' 35) #(887 'ACCESS' 36) #(887 'ACCORDING' 37) #(887 'ACTION' 38) #(887 'ACTIVATION' 39) #(887 'ACTUAL' 40) #(887 'ADABAS' 41) #(887 'ADD' 42) #(887 'ADJACENT' 44) #(887 'ALIAS' 45) #(887 'ALIASES' 46) #(887 'ALIGN' 47) #(887 'ALL' 48) #(887 'ALLOCATE' 49) #(887 'ALPHA' 50) #(887 'AMDP' 51) #(887 'ANALYSIS' 52) #(887 'ANALYZER' 53) #(887 'AND' 54) #(887 'ANY' 55) #(887 'APPEND' 56) #(887 'APPENDING' 57) #(887 'APPLICATION' 58) #(887 'ARCHIVE' 59) #(887 'AREA' 60) #(887 'ARITHMETIC' 61) #(887 'AS' 62) #(887 'AS400' 63) #(887 'ASCENDING' 64) #(887 'ASSERT' 65) #(887 'ASSIGN' 66) #(887 'ASSIGNED' 67) #(887 'ASSIGNING' 68) #(887 'ASSOCIATION' 69) #(887 'ASYNCHRONOUS' 70) #(887 'AT' 71) #(887 'ATTRIBUTES' 72) #(887 'AUGMENTING' 73) #(887 'AUTHORITY' 74) #(887 'AUTHORIZATION' 76) #(887 'AUTO' 77) #(887 'AVG' 78) #(887 'BACK' 79) #(887 'BACKGROUND' 80) #(887 'BACKWARD' 81) #(887 'BADI' 82) #(887 'BASE' 83) #(887 'BEFORE' 84) #(887 'BEGIN' 85) #(887 'BEHAVIOR' 86) #(887 'BETWEEN' 87) #(887 'BINARY' 88) #(887 'BIT' 89) #(887 'BLANK' 94) #(887 'BLANKS' 95) #(887 'BLOCK' 96) #(887 'BLOCKS' 97) #(887 'BOOLC' 98) #(887 'BOUND' 99) #(887 'BOUNDARIES' 100) #(887 'BOUNDS' 101) #(887 'BOXED' 102) #(887 'BREAK' 103) #(887 'BUFFER' 105) #(887 'BY' 106) #(887 'BYPASSING' 107) #(887 'BYTE' 108) #(887 'CA' 116) #(887 'CALL' 117) #(887 'CALLING' 118) #(887 'CASE' 119) #(887 'CAST' 120) #(887 'CASTING' 121) #(887 'CATCH' 122) #(887 'CDS' 123) #(887 'CEIL' 877) #(887 'CENTER' 124) #(887 'CENTERED' 125) #(887 'CHAIN' 126) #(887 'CHANGE' 129) #(887 'CHANGING' 130) #(887 'CHANNELS' 131) #(887 'CHAR' 132) #(887 'CHARACTER' 134) #(887 'CHECK' 135) #(887 'CHECKBOX' 136) #(887 'CID' 137) #(887 'CIRCULAR' 138) #(887 'CLASS' 139) #(887 'CLEANUP' 143) #(887 'CLEAR' 144) #(887 'CLIENT' 145) #(887 'CLIENTS' 146) #(887 'CLOCK' 147) #(887 'CLONE' 148) #(887 'CLOSE' 149) #(887 'CN' 150) #(887 'CO' 151) #(887 'COALESCE' 878) #(887 'CODE' 152) #(887 'COLLECT' 153) #(887 'COLOR' 154) #(887 'COLUMN' 155) #(887 'COLUMNS' 156) #(887 'COL_BACKGROUND' 157) #(887 'COL_GROUP' 158) #(887 'COL_HEADING' 159) #(887 'COL_KEY' 160) #(887 'COL_NEGATIVE' 161) #(887 'COL_NORMAL' 162) #(887 'COL_POSITIVE' 163) #(887 'COL_TOTAL' 164) #(887 'COMMENT' 165) #(887 'COMMENTS' 166) #(887 'COMMIT' 167) #(887 'COMMON' 168) #(887 'COMMUNICATION' 169) #(887 'COMPARING' 170) #(887 'COMPONENT' 171) #(887 'COMPONENTS' 172) #(887 'COMPRESSION' 173) #(887 'COMPUTE' 174) #(887 'CONCAT' 879) #(887 'CONCATENATE' 175) #(887 'CONCAT_WITH_SPACE' 880) #(887 'COND' 176) #(887 'CONDENSE' 177) #(887 'CONDITION' 178) #(887 'CONNECTION' 179) #(887 'CONSTANT' 180) #(887 'CONSTANTS' 181) #(887 'CONTEXT' 182) #(887 'CONTEXTS' 183) #(887 'CONTINUE' 184) #(887 'CONTROL' 185) #(887 'CONTROLS' 186) #(887 'CONV' 187) #(887 'CONVERSION' 188) #(887 'CONVERT' 189) #(887 'COPIES' 190) #(887 'COPY' 191) #(887 'CORRESPONDING' 192) #(887 'COUNT' 193) #(887 'COUNTRY' 194) #(887 'COVER' 195) #(887 'CP' 196) #(887 'CPI' 197) #(887 'CREATE' 198) #(887 'CRITICAL' 199) #(887 'CS' 200) #(887 'CURRENCY' 201) #(887 'CURRENT' 202) #(887 'CURSOR' 203) #(887 'DANGEROUS' 205) #(887 'DATA' 206) #(887 'DATABASE' 207) #(887 'DATAINFO' 208) #(887 'DATASET' 209) #(887 'DATE' 210) #(887 'DAYLIGHT' 211) #(887 'DB2' 212) #(887 'DB6' 213) #(887 'DDL' 216) #(887 'DDMMYY' 217) #(887 'DEALLOCATE' 218) #(887 'DEC' 219) #(887 'DECIMALS' 220) #(887 'DECLARATIONS' 221) #(887 'DEEP' 222) #(887 'DEFAULT' 223) #(887 'DEFERRED' 224) #(887 'DEFINE' 225) #(887 'DEFINITION' 226) #(887 'DELETE' 227) #(887 'DELETING' 228) #(887 'DEMAND' 229) #(887 'DEPARTMENT' 230) #(887 'DESCENDING' 231) #(887 'DESCRIBE' 232) #(887 'DESTINATION' 233) #(887 'DETAIL' 234) #(887 'DETERMINATION' 235) #(887 'DETERMINE' 236) #(887 'DIALOG' 237) #(887 'DID' 238) #(887 'DIRECTORY' 239) #(887 'DISCARDING' 240) #(887 'DISPLAY' 241) #(887 'DISTANCE' 243) #(887 'DISTINCT' 244) #(887 'DIV' 245) #(887 'DIVIDE' 246) #(887 'DO' 247) #(887 'DUMMY' 248) #(887 'DUPLICATE' 249) #(887 'DUPLICATES' 250) #(887 'DURATION' 251) #(887 'DURING' 252) #(887 'DYNPRO' 253) #(887 'EARLY' 254) #(887 'EDIT' 255) #(887 'ELSE' 257) #(887 'ELSEIF' 258) #(887 'EMPTY' 259) #(887 'ENABLED' 260) #(887 'ENABLING' 261) #(887 'ENCODING' 262) #(887 'END' 263) #(887 'ENDAT' 270) #(887 'ENDCASE' 271) #(887 'ENDCATCH' 272) #(887 'ENDCHAIN' 273) #(887 'ENDCLASS' 274) #(887 'ENDDO' 275) #(887 'ENDENHANCEMENT' 276) #(887 'ENDEXEC' 277) #(887 'ENDFORM' 278) #(887 'ENDFUNCTION' 279) #(887 'ENDIAN' 280) #(887 'ENDIF' 281) #(887 'ENDING' 282) #(887 'ENDINTERFACE' 283) #(887 'ENDLOOP' 284) #(887 'ENDMETHOD' 285) #(887 'ENDMODULE' 286) #(887 'ENDON' 287) #(887 'ENDPROVIDE' 288) #(887 'ENDSELECT' 289) #(887 'ENDTRY' 290) #(887 'ENDWHILE' 291) #(887 'ENDWITH' 292) #(887 'ENGINEERING' 293) #(887 'ENHANCEMENT' 294) #(887 'ENHANCEMENTS' 297) #(887 'ENTITIES' 298) #(887 'ENTITY' 299) #(887 'ENTRIES' 300) #(887 'ENTRY' 301) #(887 'ENUM' 302) #(887 'ENVIRONMENT' 303) #(887 'EQ' 304) #(887 'EQUIV' 305) #(887 'ERRORS' 306) #(887 'ESCAPE' 307) #(887 'ESCAPING' 308) #(887 'EVENT' 309) #(887 'EVENTS' 310) #(887 'EXACT' 311) #(887 'EXCEPT' 312) #(887 'EXCEPTION' 313) #(887 'EXCEPTIONS' 315) #(887 'EXCLUDE' 316) #(887 'EXCLUDING' 317) #(887 'EXEC' 318) #(887 'EXECUTE' 319) #(887 'EXISTS' 320) #(887 'EXIT' 321) #(887 'EXPANDING' 323) #(887 'EXPIRATION' 324) #(887 'EXPLICIT' 325) #(887 'EXPONENT' 326) #(887 'EXPORT' 327) #(887 'EXPORTING' 328) #(887 'EXTENDED' 329) #(887 'EXTENSION' 330) #(887 'EXTRACT' 331) #(887 'FAIL' 332) #(887 'FAILED' 333) #(887 'FEATURES' 334) #(887 'FETCH' 335) #(887 'FIELD' 336) #(887 'FIELDS' 340) #(887 'FILE' 341) #(887 'FILL' 342) #(887 'FILTER' 343) #(887 'FILTERS' 344) #(887 'FINAL' 345) #(887 'FIND' 346) #(887 'FIRST' 347) #(887 'FLOOR' 881) #(887 'FLTP' 350) #(887 'FLUSH' 351) #(887 'FONT' 352) #(887 'FOR' 353) #(887 'FORM' 354) #(887 'FORMAT' 355) #(887 'FORWARD' 356) #(887 'FOUND' 357) #(887 'FRAME' 358) #(887 'FRAMES' 359) #(887 'FREE' 360) #(887 'FRIENDS' 361) #(887 'FROM' 362) #(887 'FULL' 363) #(887 'FUNCTION' 364) #(887 'FURTHER' 366) #(887 'GE' 367) #(887 'GENERATE' 368) #(887 'GET' 369) #(887 'GIVING' 370) #(887 'GLOBAL' 371) #(887 'GRAPH' 372) #(887 'GROUP' 373) #(887 'GROUPS' 374) #(887 'GT' 375) #(887 'HANDLE' 376) #(887 'HANDLER' 377) #(887 'HARMLESS' 378) #(887 'HASHED' 379) #(887 'HAVING' 380) #(887 'HDB' 381) #(887 'HEADER' 382) #(887 'HEADERS' 383) #(887 'HEADING' 384) #(887 'HIDE' 387) #(887 'HIERARCHY' 388) #(887 'HIGH' 389) #(887 'HINT' 390) #(887 'HOLD' 391) #(887 'HOTSPOT' 392) #(887 'ICON' 393) #(887 'ID' 394) #(887 'IDENTIFICATION' 395) #(887 'IDENTIFIER' 396) #(887 'IDS' 397) #(887 'IF' 398) #(887 'IGNORE' 399) #(887 'IGNORING' 400) #(887 'IMMEDIATELY' 401) #(887 'IMPLEMENTATION' 402) #(887 'IMPLEMENTED' 403) #(887 'IMPLICIT' 404) #(887 'IMPORT' 405) #(887 'IMPORTING' 406) #(887 'IN' 407) #(887 'INACTIVE' 408) #(887 'INCL' 409) #(887 'INCLUDE' 410) #(887 'INCLUDES' 411) #(887 'INCREMENT' 412) #(887 'INDEX' 413) #(887 'INFORMIX' 415) #(887 'INFOTYPES' 416) #(887 'INHERITING' 417) #(887 'INIT' 418) #(887 'INITIAL' 419) #(887 'INITIALIZATION' 420) #(887 'INNER' 421) #(887 'INPUT' 422) #(887 'INSERT' 423) #(887 'INSTANCE' 424) #(887 'INSTANCES' 425) #(887 'INT2' 426) #(887 'INT4' 427) #(887 'INT8' 428) #(887 'INTENSIFIED' 429) #(887 'INTERFACE' 430) #(887 'INTERFACES' 431) #(887 'INTERNAL' 432) #(887 'INTERVALS' 433) #(887 'INTO' 434) #(887 'INVERSE' 435) #(887 'IS' 437) #(887 'ISO' 438) #(887 'JOB' 439) #(887 'JOIN' 440) #(887 'KEEP' 441) #(887 'KEEPING' 442) #(887 'KERNEL' 443) #(887 'KEY' 444) #(887 'KEYS' 445) #(887 'KEYWORDS' 446) #(887 'KIND' 447) #(887 'LANGUAGE' 448) #(887 'LAST' 449) #(887 'LATE' 450) #(887 'LAYOUT' 451) #(887 'LE' 452) #(887 'LEADING' 453) #(887 'LEAVE' 454) #(887 'LEFT' 455) #(887 'LEFTPLUS' 457) #(887 'LEFTSPACE' 458) #(887 'LEGACY' 459) #(887 'LENGTH' 460) #(887 'LET' 461) #(887 'LEVEL' 462) #(887 'LEVELS' 463) #(887 'LIKE' 464) #(887 'LINE' 465) #(887 'LINEFEED' 469) #(887 'LINES' 470) #(887 'LINK' 471) #(887 'LIST' 472) #(887 'LISTBOX' 474) #(887 'LOAD' 475) #(887 'LOCAL' 477) #(887 'LOCALE' 478) #(887 'LOCK' 479) #(887 'LOCKS' 480) #(887 'LOGFILE' 482) #(887 'LOGICAL' 483) #(887 'LONG' 484) #(887 'LOOP' 485) #(887 'LOW' 486) #(887 'LOWER' 487) #(887 'LPI' 488) #(887 'LT' 489) #(887 'LTRIM' 882) #(887 'MAIN' 491) #(887 'MAPPED' 492) #(887 'MAPPING' 493) #(887 'MARGIN' 494) #(887 'MARK' 495) #(887 'MASK' 496) #(887 'MATCH' 497) #(887 'MATCHCODE' 498) #(887 'MAX' 499) #(887 'MAXIMUM' 500) #(887 'MEDIUM' 501) #(887 'MEMBERS' 502) #(887 'MEMORY' 503) #(887 'MESH' 504) #(887 'MESSAGE' 505) #(887 'MESSAGES' 507) #(887 'MESSAGING' 508) #(887 'METHOD' 509) #(887 'METHODS' 510) #(887 'MIN' 511) #(887 'MMDDYY' 514) #(887 'MOD' 515) #(887 'MODE' 516) #(887 'MODIF' 517) #(887 'MODIFIER' 518) #(887 'MODIFY' 519) #(887 'MODULE' 520) #(887 'MOVE' 521) #(887 'MSSQLNT' 523) #(887 'MULTIPLY' 524) #(887 'NA' 526) #(887 'NAME' 527) #(887 'NAMETAB' 528) #(887 'NATIVE' 529) #(887 'NE' 530) #(887 'NESTED' 531) #(887 'NESTING' 532) #(887 'NEW' 533) #(887 'NEXT' 537) #(887 'NO' 538) #(887 'NODES' 550) #(887 'NOT' 553) #(887 'NP' 554) #(887 'NS' 555) #(887 'NULL' 556) #(887 'NUMBER' 557) #(887 'NUMBERING' 558) #(887 'NUMC' 559) #(887 'OBJECT' 561) #(887 'OBJECTS' 562) #(887 'OBJMGR' 563) #(887 'OBLIGATORY' 564) #(887 'OCCURENCE' 565) #(887 'OCCURENCES' 566) #(887 'OCCURRENCE' 567) #(887 'OCCURRENCES' 568) #(887 'OCCURS' 569) #(887 'OF' 570) #(887 'OFF' 571) #(887 'OFFSET' 572) #(887 'ON' 573) #(887 'ONE' 574) #(887 'ONLY' 575) #(887 'OPEN' 576) #(887 'OPTION' 577) #(887 'OPTIONAL' 578) #(887 'OPTIONS' 579) #(887 'OR' 580) #(887 'ORACLE' 581) #(887 'ORDER' 582) #(887 'OTHERS' 583) #(887 'OUT' 584) #(887 'OUTER' 585) #(887 'OUTPUT' 586) #(887 'OVERFLOW' 588) #(887 'OVERLAY' 589) #(887 'PACK' 590) #(887 'PACKAGE' 591) #(887 'PAD' 592) #(887 'PADDING' 593) #(887 'PAGE' 594) #(887 'PAGES' 595) #(887 'PARAMETER' 596) #(887 'PARAMETERS' 598) #(887 'PART' 599) #(887 'PARTIALLY' 600) #(887 'PCRE' 601) #(887 'PERCENTAGE' 602) #(887 'PERFORM' 603) #(887 'PERFORMING' 604) #(887 'PERMISSIONS' 605) #(887 'PLACES' 607) #(887 'POOL' 608) #(887 'POSITION' 609) #(887 'POS_HIGH' 610) #(887 'POS_LOW' 611) #(887 'PRAGMAS' 612) #(887 'PRECHECK' 613) #(887 'PRECOMPILED' 614) #(887 'PREFERRED' 615) #(887 'PRESERVING' 616) #(887 'PRIMARY' 617) #(887 'PRINT' 618) #(887 'PRIVATE' 620) #(887 'PRIVILEGED' 621) #(887 'PROCEDURE' 622) #(887 'PROGRAM' 623) #(887 'PROPERTY' 624) #(887 'PROTECTED' 625) #(887 'PROVIDE' 626) #(887 'PUBLIC' 627) #(887 'PUSH' 628) #(887 'PUSHBUTTON' 629) #(887 'PUT' 630) #(887 'QUEUEONLY' 632) #(887 'QUICKINFO' 633) #(887 'RADIOBUTTON' 634) #(887 'RAISE' 635) #(887 'RAISING' 636) #(887 'RANGE' 637) #(887 'RANGES' 638) #(887 'RAW' 639) #(887 'READ' 640) #(887 'RECEIVE' 642) #(887 'RECEIVED' 643) #(887 'RECEIVER' 644) #(887 'RECEIVING' 645) #(887 'REDEFINITION' 646) #(887 'REDUCE' 647) #(887 'REF' 648) #(887 'REFERENCE' 649) #(887 'REFRESH' 650) #(887 'REGEX' 651) #(887 'REJECT' 652) #(887 'RELATING' 653) #(887 'RENAMING' 654) #(887 'REPLACE' 655) #(887 'REPLACEMENT' 656) #(887 'REPLACING' 657) #(887 'REPORT' 658) #(887 'REPORTED' 659) #(887 'REQUEST' 660) #(887 'REQUESTED' 661) #(887 'REQUIRED' 662) #(887 'RESERVE' 663) #(887 'RESET' 664) #(887 'RESOLUTION' 665) #(887 'RESPECTING' 666) #(887 'RESPONSE' 667) #(887 'RESPONSES' 668) #(887 'RESULT' 669) #(887 'RESULTS' 670) #(887 'RESUMABLE' 671) #(887 'RESUME' 672) #(887 'RETRY' 673) #(887 'RETURN' 674) #(887 'RETURNCODE' 675) #(887 'RETURNING' 676) #(887 'RIGHT' 677) #(887 'RIGHTPLUS' 679) #(887 'RIGHTSPACE' 680) #(887 'RISK' 681) #(887 'ROLLBACK' 682) #(887 'ROUND' 683) #(887 'ROWS' 684) #(887 'RTRIM' 883) #(887 'RUN' 685) #(887 'SAP' 686) #(887 'SAVE' 688) #(887 'SAVING' 689) #(887 'SCALE_PRESERVING' 690) #(887 'SCALE_PRESERVING_SCIENTIFIC' 691) #(887 'SCAN' 692) #(887 'SCIENTIFIC' 693) #(887 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(887 'SCREEN' 695) #(887 'SCROLL' 696) #(887 'SCROLLING' 698) #(887 'SEARCH' 699) #(887 'SECONDARY' 700) #(887 'SECONDS' 701) #(887 'SECTION' 702) #(887 'SELECT' 703) #(887 'SELECTION' 705) #(887 'SELECTIONS' 710) #(887 'SEND' 711) #(887 'SEPARATE' 712) #(887 'SEPARATED' 713) #(887 'SESSION' 714) #(887 'SET' 715) #(887 'SHARED' 716) #(887 'SHIFT' 717) #(887 'SHORT' 718) #(887 'SHORTDUMP' 719) #(887 'SIGN' 721) #(887 'SIGN_AS_POSTFIX' 722) #(887 'SIMPLE' 723) #(887 'SIMULATION' 724) #(887 'SINGLE' 725) #(887 'SIZE' 726) #(887 'SKIP' 727) #(887 'SKIPPING' 728) #(887 'SMART' 729) #(887 'SOME' 730) #(887 'SORT' 731) #(887 'SORTABLE' 732) #(887 'SORTED' 733) #(887 'SOURCE' 734) #(887 'SPACE' 735) #(887 'SPECIFIED' 736) #(887 'SPLIT' 737) #(887 'SPOOL' 738) #(887 'SPOTS' 739) #(887 'SQL' 740) #(887 'SQLSCRIPT' 741) #(887 'STABLE' 742) #(887 'STAMP' 743) #(887 'STANDARD' 744) #(887 'STARTING' 746) #(887 'STATE' 747) #(887 'STATEMENT' 748) #(887 'STATEMENTS' 749) #(887 'STATIC' 750) #(887 'STATICS' 751) #(887 'STATUSINFO' 752) #(887 'STEP' 753) #(887 'STOP' 755) #(887 'STRUCTURE' 756) #(887 'STRUCTURES' 757) #(887 'STYLE' 758) #(887 'SUBKEY' 759) #(887 'SUBMATCHES' 760) #(887 'SUBMIT' 761) #(887 'SUBROUTINE' 762) #(887 'SUBSCREEN' 763) #(887 'SUBSTRING' 764) #(887 'SUBTRACT' 765) #(887 'SUFFIX' 767) #(887 'SUM' 768) #(887 'SUMMARY' 769) #(887 'SUPPLIED' 770) #(887 'SUPPLY' 771) #(887 'SUPPRESS' 772) #(887 'SWITCH' 773) #(887 'SYBASE' 774) #(887 'SYMBOL' 775) #(887 'T000' 779) #(887 'TAB' 780) #(887 'TABBED' 781) #(887 'TABLE' 782) #(887 'TABLES' 783) #(887 'TABLEVIEW' 784) #(887 'TABSTRIP' 785) #(887 'TARGET' 786) #(887 'TASK' 787) #(887 'TASKS' 788) #(887 'TEST' 789) #(887 'TESTING' 792) #(887 'TEXT' 793) #(887 'TEXTPOOL' 794) #(887 'THEN' 795) #(887 'THROW' 796) #(887 'TIME' 797) #(887 'TIMES' 798) #(887 'TIMESTAMP' 799) #(887 'TIMEZONE' 800) #(887 'TITLE' 801) #(887 'TITLEBAR' 802) #(887 'TO' 803) #(887 'TOKENIZATION' 804) #(887 'TOKENS' 805) #(887 'TRAILING' 810) #(887 'TRANSACTION' 811) #(887 'TRANSFER' 812) #(887 'TRANSFORMATION' 813) #(887 'TRANSLATE' 814) #(887 'TRANSPORTING' 815) #(887 'TRMAC' 816) #(887 'TRUNCATION' 817) #(887 'TRY' 818) #(887 'TYPE' 819) #(887 'TYPES' 822) #(887 'ULINE' 823) #(887 'UNASSIGN' 824) #(887 'UNDER' 825) #(887 'UNICODE' 826) #(887 'UNION' 827) #(887 'UNIQUE' 828) #(887 'UNIT' 829) #(887 'UNIX' 830) #(887 'UNPACK' 831) #(887 'UNTIL' 832) #(887 'UNWIND' 833) #(887 'UP' 834) #(887 'UPDATE' 835) #(887 'UPPER' 836) #(887 'USER' 837) #(887 'USING' 839) #(887 'UTCLONG' 840) #(887 'UUID' 884) #(887 'VALID' 842) #(887 'VALIDATE' 843) #(887 'VALUE' 844) #(887 'VALUES' 846) #(887 'VARY' 847) #(887 'VARYING' 848) #(887 'VERSION' 849) #(887 'VIA' 850) #(887 'VISIBLE' 851) #(887 'WAIT' 852) #(887 'WHEN' 853) #(887 'WHERE' 854) #(887 'WHILE' 855) #(887 'WIDTH' 856) #(887 'WINDOW' 857) #(887 'WINDOWS' 858) #(887 'WITH' 859) #(887 'WITHOUT' 862) #(887 'WORD' 863) #(887 'WORK' 864) #(887 'WORKSPACE' 865) #(887 'WRITE' 866) #(887 'WRITER' 867) #(887 'XML' 868) #(887 'XSD' 869) #(887 'XSDBOOL' 870) #(887 'YES' 871) #(887 'YYMMDD' 872) #(887 'ZERO' 874) #(887 'ZONE' 875) #(926 '?TO' 31) #(926 'ABS' 876) #(926 'ABSTRACT' 33) #(926 'ACCEPT' 34) #(926 'ACCEPTING' 35) #(926 'ACCESS' 36) #(926 'ACCORDING' 37) #(926 'ACTION' 38) #(926 'ACTIVATION' 39) #(926 'ACTUAL' 40) #(926 'ADABAS' 41) #(926 'ADD' 42) #(926 'ADJACENT' 44) #(926 'ALIAS' 45) #(926 'ALIASES' 46) #(926 'ALIGN' 47) #(926 'ALL' 48) #(926 'ALLOCATE' 49) #(926 'ALPHA' 50) #(926 'AMDP' 51) #(926 'ANALYSIS' 52) #(926 'ANALYZER' 53) #(926 'AND' 54) #(926 'ANY' 55) #(926 'APPEND' 56) #(926 'APPENDING' 57) #(926 'APPLICATION' 58) #(926 'ARCHIVE' 59) #(926 'AREA' 60) #(926 'ARITHMETIC' 61) #(926 'AS' 62) #(926 'AS400' 63) #(926 'ASCENDING' 64) #(926 'ASSERT' 65) #(926 'ASSIGN' 66) #(926 'ASSIGNED' 67) #(926 'ASSIGNING' 68) #(926 'ASSOCIATION' 69) #(926 'ASYNCHRONOUS' 70) #(926 'AT' 71) #(926 'ATTRIBUTES' 72) #(926 'AUGMENTING' 73) #(926 'AUTHORITY' 74) #(926 'AUTHORIZATION' 76) #(926 'AUTO' 77) #(926 'AVG' 78) #(926 'BACK' 79) #(926 'BACKGROUND' 80) #(926 'BACKWARD' 81) #(926 'BADI' 82) #(926 'BASE' 83) #(926 'BEFORE' 84) #(926 'BEGIN' 85) #(926 'BEHAVIOR' 86) #(926 'BETWEEN' 87) #(926 'BINARY' 88) #(926 'BIT' 89) #(926 'BLANK' 94) #(926 'BLANKS' 95) #(926 'BLOCK' 96) #(926 'BLOCKS' 97) #(926 'BOOLC' 98) #(926 'BOUND' 99) #(926 'BOUNDARIES' 100) #(926 'BOUNDS' 101) #(926 'BOXED' 102) #(926 'BREAK' 103) #(926 'BUFFER' 105) #(926 'BY' 106) #(926 'BYPASSING' 107) #(926 'BYTE' 108) #(926 'CA' 116) #(926 'CALL' 117) #(926 'CALLING' 118) #(926 'CASE' 119) #(926 'CAST' 120) #(926 'CASTING' 121) #(926 'CATCH' 122) #(926 'CDS' 123) #(926 'CEIL' 877) #(926 'CENTER' 124) #(926 'CENTERED' 125) #(926 'CHAIN' 126) #(926 'CHANGE' 129) #(926 'CHANGING' 130) #(926 'CHANNELS' 131) #(926 'CHAR' 132) #(926 'CHARACTER' 134) #(926 'CHECK' 135) #(926 'CHECKBOX' 136) #(926 'CID' 137) #(926 'CIRCULAR' 138) #(926 'CLASS' 139) #(926 'CLEANUP' 143) #(926 'CLEAR' 144) #(926 'CLIENT' 145) #(926 'CLIENTS' 146) #(926 'CLOCK' 147) #(926 'CLONE' 148) #(926 'CLOSE' 149) #(926 'CN' 150) #(926 'CO' 151) #(926 'COALESCE' 878) #(926 'CODE' 152) #(926 'COLLECT' 153) #(926 'COLOR' 154) #(926 'COLUMN' 155) #(926 'COLUMNS' 156) #(926 'COL_BACKGROUND' 157) #(926 'COL_GROUP' 158) #(926 'COL_HEADING' 159) #(926 'COL_KEY' 160) #(926 'COL_NEGATIVE' 161) #(926 'COL_NORMAL' 162) #(926 'COL_POSITIVE' 163) #(926 'COL_TOTAL' 164) #(926 'COMMENT' 165) #(926 'COMMENTS' 166) #(926 'COMMIT' 167) #(926 'COMMON' 168) #(926 'COMMUNICATION' 169) #(926 'COMPARING' 170) #(926 'COMPONENT' 171) #(926 'COMPONENTS' 172) #(926 'COMPRESSION' 173) #(926 'COMPUTE' 174) #(926 'CONCAT' 879) #(926 'CONCATENATE' 175) #(926 'CONCAT_WITH_SPACE' 880) #(926 'COND' 176) #(926 'CONDENSE' 177) #(926 'CONDITION' 178) #(926 'CONNECTION' 179) #(926 'CONSTANT' 180) #(926 'CONSTANTS' 181) #(926 'CONTEXT' 182) #(926 'CONTEXTS' 183) #(926 'CONTINUE' 184) #(926 'CONTROL' 185) #(926 'CONTROLS' 186) #(926 'CONV' 187) #(926 'CONVERSION' 188) #(926 'CONVERT' 189) #(926 'COPIES' 190) #(926 'COPY' 191) #(926 'CORRESPONDING' 192) #(926 'COUNT' 193) #(926 'COUNTRY' 194) #(926 'COVER' 195) #(926 'CP' 196) #(926 'CPI' 197) #(926 'CREATE' 198) #(926 'CRITICAL' 199) #(926 'CS' 200) #(926 'CURRENCY' 201) #(926 'CURRENT' 202) #(926 'CURSOR' 203) #(926 'DANGEROUS' 205) #(926 'DATA' 206) #(926 'DATABASE' 207) #(926 'DATAINFO' 208) #(926 'DATASET' 209) #(926 'DATE' 210) #(926 'DAYLIGHT' 211) #(926 'DB2' 212) #(926 'DB6' 213) #(926 'DD/MM/YY' 214) #(926 'DD/MM/YYYY' 215) #(926 'DDL' 216) #(926 'DDMMYY' 217) #(926 'DEALLOCATE' 218) #(926 'DEC' 219) #(926 'DECIMALS' 220) #(926 'DECLARATIONS' 221) #(926 'DEEP' 222) #(926 'DEFAULT' 223) #(926 'DEFERRED' 224) #(926 'DEFINE' 225) #(926 'DEFINITION' 226) #(926 'DELETE' 227) #(926 'DELETING' 228) #(926 'DEMAND' 229) #(926 'DEPARTMENT' 230) #(926 'DESCENDING' 231) #(926 'DESCRIBE' 232) #(926 'DESTINATION' 233) #(926 'DETAIL' 234) #(926 'DETERMINATION' 235) #(926 'DETERMINE' 236) #(926 'DIALOG' 237) #(926 'DID' 238) #(926 'DIRECTORY' 239) #(926 'DISCARDING' 240) #(926 'DISPLAY' 241) #(926 'DISTANCE' 243) #(926 'DISTINCT' 244) #(926 'DIV' 245) #(926 'DIVIDE' 246) #(926 'DO' 247) #(926 'DUMMY' 248) #(926 'DUPLICATE' 249) #(926 'DUPLICATES' 250) #(926 'DURATION' 251) #(926 'DURING' 252) #(926 'DYNPRO' 253) #(926 'EARLY' 254) #(926 'EDIT' 255) #(926 'ELSE' 257) #(926 'ELSEIF' 258) #(926 'EMPTY' 259) #(926 'ENABLED' 260) #(926 'ENABLING' 261) #(926 'ENCODING' 262) #(926 'END' 263) #(926 'ENDAT' 270) #(926 'ENDCASE' 271) #(926 'ENDCATCH' 272) #(926 'ENDCHAIN' 273) #(926 'ENDCLASS' 274) #(926 'ENDDO' 275) #(926 'ENDENHANCEMENT' 276) #(926 'ENDEXEC' 277) #(926 'ENDFORM' 278) #(926 'ENDFUNCTION' 279) #(926 'ENDIAN' 280) #(926 'ENDIF' 281) #(926 'ENDING' 282) #(926 'ENDINTERFACE' 283) #(926 'ENDLOOP' 284) #(926 'ENDMETHOD' 285) #(926 'ENDMODULE' 286) #(926 'ENDON' 287) #(926 'ENDPROVIDE' 288) #(926 'ENDSELECT' 289) #(926 'ENDTRY' 290) #(926 'ENDWHILE' 291) #(926 'ENDWITH' 292) #(926 'ENGINEERING' 293) #(926 'ENHANCEMENT' 294) #(926 'ENHANCEMENTS' 297) #(926 'ENTITIES' 298) #(926 'ENTITY' 299) #(926 'ENTRIES' 300) #(926 'ENTRY' 301) #(926 'ENUM' 302) #(926 'ENVIRONMENT' 303) #(926 'EQ' 304) #(926 'EQUIV' 305) #(926 'ERRORS' 306) #(926 'ESCAPE' 307) #(926 'ESCAPING' 308) #(926 'EVENT' 309) #(926 'EVENTS' 310) #(926 'EXACT' 311) #(926 'EXCEPT' 312) #(926 'EXCEPTION' 313) #(926 'EXCEPTIONS' 315) #(926 'EXCLUDE' 316) #(926 'EXCLUDING' 317) #(926 'EXEC' 318) #(926 'EXECUTE' 319) #(926 'EXISTS' 320) #(926 'EXIT' 321) #(926 'EXPANDING' 323) #(926 'EXPIRATION' 324) #(926 'EXPLICIT' 325) #(926 'EXPONENT' 326) #(926 'EXPORT' 327) #(926 'EXPORTING' 328) #(926 'EXTENDED' 329) #(926 'EXTENSION' 330) #(926 'EXTRACT' 331) #(926 'FAIL' 332) #(926 'FAILED' 333) #(926 'FEATURES' 334) #(926 'FETCH' 335) #(926 'FIELD' 336) #(926 'FIELDS' 340) #(926 'FILE' 341) #(926 'FILL' 342) #(926 'FILTER' 343) #(926 'FILTERS' 344) #(926 'FINAL' 345) #(926 'FIND' 346) #(926 'FIRST' 347) #(926 'FLOOR' 881) #(926 'FLTP' 350) #(926 'FLUSH' 351) #(926 'FONT' 352) #(926 'FOR' 353) #(926 'FORM' 354) #(926 'FORMAT' 355) #(926 'FORWARD' 356) #(926 'FOUND' 357) #(926 'FRAME' 358) #(926 'FRAMES' 359) #(926 'FREE' 360) #(926 'FRIENDS' 361) #(926 'FROM' 362) #(926 'FULL' 363) #(926 'FUNCTION' 364) #(926 'FURTHER' 366) #(926 'GE' 367) #(926 'GENERATE' 368) #(926 'GET' 369) #(926 'GIVING' 370) #(926 'GLOBAL' 371) #(926 'GRAPH' 372) #(926 'GROUP' 373) #(926 'GROUPS' 374) #(926 'GT' 375) #(926 'HANDLE' 376) #(926 'HANDLER' 377) #(926 'HARMLESS' 378) #(926 'HASHED' 379) #(926 'HAVING' 380) #(926 'HDB' 381) #(926 'HEADER' 382) #(926 'HEADERS' 383) #(926 'HEADING' 384) #(926 'HIDE' 387) #(926 'HIERARCHY' 388) #(926 'HIGH' 389) #(926 'HINT' 390) #(926 'HOLD' 391) #(926 'HOTSPOT' 392) #(926 'ICON' 393) #(926 'ID' 394) #(926 'IDENTIFICATION' 395) #(926 'IDENTIFIER' 396) #(926 'IDS' 397) #(926 'IF' 398) #(926 'IGNORE' 399) #(926 'IGNORING' 400) #(926 'IMMEDIATELY' 401) #(926 'IMPLEMENTATION' 402) #(926 'IMPLEMENTED' 403) #(926 'IMPLICIT' 404) #(926 'IMPORT' 405) #(926 'IMPORTING' 406) #(926 'IN' 407) #(926 'INACTIVE' 408) #(926 'INCL' 409) #(926 'INCLUDE' 410) #(926 'INCLUDES' 411) #(926 'INCREMENT' 412) #(926 'INDEX' 413) #(926 'INFORMIX' 415) #(926 'INFOTYPES' 416) #(926 'INHERITING' 417) #(926 'INIT' 418) #(926 'INITIAL' 419) #(926 'INITIALIZATION' 420) #(926 'INNER' 421) #(926 'INPUT' 422) #(926 'INSERT' 423) #(926 'INSTANCE' 424) #(926 'INSTANCES' 425) #(926 'INT2' 426) #(926 'INT4' 427) #(926 'INT8' 428) #(926 'INTENSIFIED' 429) #(926 'INTERFACE' 430) #(926 'INTERFACES' 431) #(926 'INTERNAL' 432) #(926 'INTERVALS' 433) #(926 'INTO' 434) #(926 'INVERSE' 435) #(926 'IS' 437) #(926 'ISO' 438) #(926 'JOB' 439) #(926 'JOIN' 440) #(926 'KEEP' 441) #(926 'KEEPING' 442) #(926 'KERNEL' 443) #(926 'KEY' 444) #(926 'KEYS' 445) #(926 'KEYWORDS' 446) #(926 'KIND' 447) #(926 'LANGUAGE' 448) #(926 'LAST' 449) #(926 'LATE' 450) #(926 'LAYOUT' 451) #(926 'LE' 452) #(926 'LEADING' 453) #(926 'LEAVE' 454) #(926 'LEFT' 455) #(926 'LEFTPLUS' 457) #(926 'LEFTSPACE' 458) #(926 'LEGACY' 459) #(926 'LENGTH' 460) #(926 'LET' 461) #(926 'LEVEL' 462) #(926 'LEVELS' 463) #(926 'LIKE' 464) #(926 'LINE' 465) #(926 'LINEFEED' 469) #(926 'LINES' 470) #(926 'LINK' 471) #(926 'LIST' 472) #(926 'LISTBOX' 474) #(926 'LOAD' 475) #(926 'LOCAL' 477) #(926 'LOCALE' 478) #(926 'LOCK' 479) #(926 'LOCKS' 480) #(926 'LOGFILE' 482) #(926 'LOGICAL' 483) #(926 'LONG' 484) #(926 'LOOP' 485) #(926 'LOW' 486) #(926 'LOWER' 487) #(926 'LPI' 488) #(926 'LT' 489) #(926 'LTRIM' 882) #(926 'MAIN' 491) #(926 'MAPPED' 492) #(926 'MAPPING' 493) #(926 'MARGIN' 494) #(926 'MARK' 495) #(926 'MASK' 496) #(926 'MATCH' 497) #(926 'MATCHCODE' 498) #(926 'MAX' 499) #(926 'MAXIMUM' 500) #(926 'MEDIUM' 501) #(926 'MEMBERS' 502) #(926 'MEMORY' 503) #(926 'MESH' 504) #(926 'MESSAGE' 505) #(926 'MESSAGES' 507) #(926 'MESSAGING' 508) #(926 'METHOD' 509) #(926 'METHODS' 510) #(926 'MIN' 511) #(926 'MM/DD/YY' 512) #(926 'MM/DD/YYYY' 513) #(926 'MMDDYY' 514) #(926 'MOD' 515) #(926 'MODE' 516) #(926 'MODIF' 517) #(926 'MODIFIER' 518) #(926 'MODIFY' 519) #(926 'MODULE' 520) #(926 'MOVE' 521) #(926 'MSSQLNT' 523) #(926 'MULTIPLY' 524) #(926 'NA' 526) #(926 'NAME' 527) #(926 'NAMETAB' 528) #(926 'NATIVE' 529) #(926 'NE' 530) #(926 'NESTED' 531) #(926 'NESTING' 532) #(926 'NEW' 533) #(926 'NEXT' 537) #(926 'NO' 538) #(926 'NODES' 550) #(926 'NOT' 553) #(926 'NP' 554) #(926 'NS' 555) #(926 'NULL' 556) #(926 'NUMBER' 557) #(926 'NUMBERING' 558) #(926 'NUMC' 559) #(926 'OBJECT' 561) #(926 'OBJECTS' 562) #(926 'OBJMGR' 563) #(926 'OBLIGATORY' 564) #(926 'OCCURENCE' 565) #(926 'OCCURENCES' 566) #(926 'OCCURRENCE' 567) #(926 'OCCURRENCES' 568) #(926 'OCCURS' 569) #(926 'OF' 570) #(926 'OFF' 571) #(926 'OFFSET' 572) #(926 'ON' 573) #(926 'ONE' 574) #(926 'ONLY' 575) #(926 'OPEN' 576) #(926 'OPTION' 577) #(926 'OPTIONAL' 578) #(926 'OPTIONS' 579) #(926 'OR' 580) #(926 'ORACLE' 581) #(926 'ORDER' 582) #(926 'OTHERS' 583) #(926 'OUT' 584) #(926 'OUTER' 585) #(926 'OUTPUT' 586) #(926 'OVERFLOW' 588) #(926 'OVERLAY' 589) #(926 'PACK' 590) #(926 'PACKAGE' 591) #(926 'PAD' 592) #(926 'PADDING' 593) #(926 'PAGE' 594) #(926 'PAGES' 595) #(926 'PARAMETER' 596) #(926 'PARAMETERS' 598) #(926 'PART' 599) #(926 'PARTIALLY' 600) #(926 'PCRE' 601) #(926 'PERCENTAGE' 602) #(926 'PERFORM' 603) #(926 'PERFORMING' 604) #(926 'PERMISSIONS' 605) #(926 'PLACES' 607) #(926 'POOL' 608) #(926 'POSITION' 609) #(926 'POS_HIGH' 610) #(926 'POS_LOW' 611) #(926 'PRAGMAS' 612) #(926 'PRECHECK' 613) #(926 'PRECOMPILED' 614) #(926 'PREFERRED' 615) #(926 'PRESERVING' 616) #(926 'PRIMARY' 617) #(926 'PRINT' 618) #(926 'PRIVATE' 620) #(926 'PRIVILEGED' 621) #(926 'PROCEDURE' 622) #(926 'PROGRAM' 623) #(926 'PROPERTY' 624) #(926 'PROTECTED' 625) #(926 'PROVIDE' 626) #(926 'PUBLIC' 627) #(926 'PUSH' 628) #(926 'PUSHBUTTON' 629) #(926 'PUT' 630) #(926 'QUEUEONLY' 632) #(926 'QUICKINFO' 633) #(926 'RADIOBUTTON' 634) #(926 'RAISE' 635) #(926 'RAISING' 636) #(926 'RANGE' 637) #(926 'RANGES' 638) #(926 'RAW' 639) #(926 'READ' 640) #(926 'RECEIVE' 642) #(926 'RECEIVED' 643) #(926 'RECEIVER' 644) #(926 'RECEIVING' 645) #(926 'REDEFINITION' 646) #(926 'REDUCE' 647) #(926 'REF' 648) #(926 'REFERENCE' 649) #(926 'REFRESH' 650) #(926 'REGEX' 651) #(926 'REJECT' 652) #(926 'RELATING' 653) #(926 'RENAMING' 654) #(926 'REPLACE' 655) #(926 'REPLACEMENT' 656) #(926 'REPLACING' 657) #(926 'REPORT' 658) #(926 'REPORTED' 659) #(926 'REQUEST' 660) #(926 'REQUESTED' 661) #(926 'REQUIRED' 662) #(926 'RESERVE' 663) #(926 'RESET' 664) #(926 'RESOLUTION' 665) #(926 'RESPECTING' 666) #(926 'RESPONSE' 667) #(926 'RESPONSES' 668) #(926 'RESULT' 669) #(926 'RESULTS' 670) #(926 'RESUMABLE' 671) #(926 'RESUME' 672) #(926 'RETRY' 673) #(926 'RETURN' 674) #(926 'RETURNCODE' 675) #(926 'RETURNING' 676) #(926 'RIGHT' 677) #(926 'RIGHTPLUS' 679) #(926 'RIGHTSPACE' 680) #(926 'RISK' 681) #(926 'ROLLBACK' 682) #(926 'ROUND' 683) #(926 'ROWS' 684) #(926 'RTRIM' 883) #(926 'RUN' 685) #(926 'SAP' 686) #(926 'SAVE' 688) #(926 'SAVING' 689) #(926 'SCALE_PRESERVING' 690) #(926 'SCALE_PRESERVING_SCIENTIFIC' 691) #(926 'SCAN' 692) #(926 'SCIENTIFIC' 693) #(926 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(926 'SCREEN' 695) #(926 'SCROLL' 696) #(926 'SCROLLING' 698) #(926 'SEARCH' 699) #(926 'SECONDARY' 700) #(926 'SECONDS' 701) #(926 'SECTION' 702) #(926 'SELECT' 703) #(926 'SELECTION' 705) #(926 'SELECTIONS' 710) #(926 'SEND' 711) #(926 'SEPARATE' 712) #(926 'SEPARATED' 713) #(926 'SESSION' 714) #(926 'SET' 715) #(926 'SHARED' 716) #(926 'SHIFT' 717) #(926 'SHORT' 718) #(926 'SHORTDUMP' 719) #(926 'SIGN' 721) #(926 'SIGN_AS_POSTFIX' 722) #(926 'SIMPLE' 723) #(926 'SIMULATION' 724) #(926 'SINGLE' 725) #(926 'SIZE' 726) #(926 'SKIP' 727) #(926 'SKIPPING' 728) #(926 'SMART' 729) #(926 'SOME' 730) #(926 'SORT' 731) #(926 'SORTABLE' 732) #(926 'SORTED' 733) #(926 'SOURCE' 734) #(926 'SPACE' 735) #(926 'SPECIFIED' 736) #(926 'SPLIT' 737) #(926 'SPOOL' 738) #(926 'SPOTS' 739) #(926 'SQL' 740) #(926 'SQLSCRIPT' 741) #(926 'STABLE' 742) #(926 'STAMP' 743) #(926 'STANDARD' 744) #(926 'STARTING' 746) #(926 'STATE' 747) #(926 'STATEMENT' 748) #(926 'STATEMENTS' 749) #(926 'STATIC' 750) #(926 'STATICS' 751) #(926 'STATUSINFO' 752) #(926 'STEP' 753) #(926 'STOP' 755) #(926 'STRUCTURE' 756) #(926 'STRUCTURES' 757) #(926 'STYLE' 758) #(926 'SUBKEY' 759) #(926 'SUBMATCHES' 760) #(926 'SUBMIT' 761) #(926 'SUBROUTINE' 762) #(926 'SUBSCREEN' 763) #(926 'SUBSTRING' 764) #(926 'SUBTRACT' 765) #(926 'SUFFIX' 767) #(926 'SUM' 768) #(926 'SUMMARY' 769) #(926 'SUPPLIED' 770) #(926 'SUPPLY' 771) #(926 'SUPPRESS' 772) #(926 'SWITCH' 773) #(926 'SYBASE' 774) #(926 'SYMBOL' 775) #(926 'T000' 779) #(926 'TAB' 780) #(926 'TABBED' 781) #(926 'TABLE' 782) #(926 'TABLES' 783) #(926 'TABLEVIEW' 784) #(926 'TABSTRIP' 785) #(926 'TARGET' 786) #(926 'TASK' 787) #(926 'TASKS' 788) #(926 'TEST' 789) #(926 'TESTING' 792) #(926 'TEXT' 793) #(926 'TEXTPOOL' 794) #(926 'THEN' 795) #(926 'THROW' 796) #(926 'TIME' 797) #(926 'TIMES' 798) #(926 'TIMESTAMP' 799) #(926 'TIMEZONE' 800) #(926 'TITLE' 801) #(926 'TITLEBAR' 802) #(926 'TO' 803) #(926 'TOKENIZATION' 804) #(926 'TOKENS' 805) #(926 'TRAILING' 810) #(926 'TRANSACTION' 811) #(926 'TRANSFER' 812) #(926 'TRANSFORMATION' 813) #(926 'TRANSLATE' 814) #(926 'TRANSPORTING' 815) #(926 'TRMAC' 816) #(926 'TRUNCATION' 817) #(926 'TRY' 818) #(926 'TYPE' 819) #(926 'TYPES' 822) #(926 'ULINE' 823) #(926 'UNASSIGN' 824) #(926 'UNDER' 825) #(926 'UNICODE' 826) #(926 'UNION' 827) #(926 'UNIQUE' 828) #(926 'UNIT' 829) #(926 'UNIX' 830) #(926 'UNPACK' 831) #(926 'UNTIL' 832) #(926 'UNWIND' 833) #(926 'UP' 834) #(926 'UPDATE' 835) #(926 'UPPER' 836) #(926 'USER' 837) #(926 'USING' 839) #(926 'UTCLONG' 840) #(926 'UUID' 884) #(926 'VALID' 842) #(926 'VALIDATE' 843) #(926 'VALUE' 844) #(926 'VALUES' 846) #(926 'VARY' 847) #(926 'VARYING' 848) #(926 'VERSION' 849) #(926 'VIA' 850) #(926 'VISIBLE' 851) #(926 'WAIT' 852) #(926 'WHEN' 853) #(926 'WHERE' 854) #(926 'WHILE' 855) #(926 'WIDTH' 856) #(926 'WINDOW' 857) #(926 'WINDOWS' 858) #(926 'WITH' 859) #(926 'WITHOUT' 862) #(926 'WORD' 863) #(926 'WORK' 864) #(926 'WORKSPACE' 865) #(926 'WRITE' 866) #(926 'WRITER' 867) #(926 'XML' 868) #(926 'XSD' 869) #(926 'XSDBOOL' 870) #(926 'YES' 871) #(926 'YYMMDD' 872) #(926 'ZERO' 874) #(926 'ZONE' 875) #(907 '%_FINAL' 2) #(907 '%_HINTS' 3) #(907 '%_PREDEFINED' 4) #(907 'ABS' 876) #(907 'ABSTRACT' 33) #(907 'ACCEPT' 34) #(907 'ACCEPTING' 35) #(907 'ACCESS' 36) #(907 'ACCORDING' 37) #(907 'ACTION' 38) #(907 'ACTIVATION' 39) #(907 'ACTUAL' 40) #(907 'ADABAS' 41) #(907 'ADD' 42) #(907 'ADJACENT' 44) #(907 'ALIAS' 45) #(907 'ALIASES' 46) #(907 'ALIGN' 47) #(907 'ALL' 48) #(907 'ALLOCATE' 49) #(907 'ALPHA' 50) #(907 'AMDP' 51) #(907 'ANALYSIS' 52) #(907 'ANALYZER' 53) #(907 'AND' 54) #(907 'ANY' 55) #(907 'APPEND' 56) #(907 'APPENDING' 57) #(907 'APPLICATION' 58) #(907 'ARCHIVE' 59) #(907 'AREA' 60) #(907 'ARITHMETIC' 61) #(907 'AS' 62) #(907 'AS400' 63) #(907 'ASCENDING' 64) #(907 'ASSERT' 65) #(907 'ASSIGN' 66) #(907 'ASSIGNED' 67) #(907 'ASSIGNING' 68) #(907 'ASSOCIATION' 69) #(907 'ASYNCHRONOUS' 70) #(907 'AT' 71) #(907 'ATTRIBUTES' 72) #(907 'AUGMENTING' 73) #(907 'AUTHORITY' 74) #(907 'AUTHORIZATION' 76) #(907 'AUTO' 77) #(907 'AVG' 78) #(907 'BACK' 79) #(907 'BACKGROUND' 80) #(907 'BACKWARD' 81) #(907 'BADI' 82) #(907 'BASE' 83) #(907 'BEFORE' 84) #(907 'BEGIN' 85) #(907 'BEHAVIOR' 86) #(907 'BETWEEN' 87) #(907 'BINARY' 88) #(907 'BIT' 89) #(907 'BLANK' 94) #(907 'BLANKS' 95) #(907 'BLOCK' 96) #(907 'BLOCKS' 97) #(907 'BOOLC' 98) #(907 'BOUND' 99) #(907 'BOUNDARIES' 100) #(907 'BOUNDS' 101) #(907 'BOXED' 102) #(907 'BREAK' 103) #(907 'BUFFER' 105) #(907 'BY' 106) #(907 'BYPASSING' 107) #(907 'BYTE' 108) #(907 'CA' 116) #(907 'CALL' 117) #(907 'CALLING' 118) #(907 'CASE' 119) #(907 'CAST' 120) #(907 'CASTING' 121) #(907 'CATCH' 122) #(907 'CDS' 123) #(907 'CEIL' 877) #(907 'CENTER' 124) #(907 'CENTERED' 125) #(907 'CHAIN' 126) #(907 'CHANGE' 129) #(907 'CHANGING' 130) #(907 'CHANNELS' 131) #(907 'CHAR' 132) #(907 'CHARACTER' 134) #(907 'CHECK' 135) #(907 'CHECKBOX' 136) #(907 'CID' 137) #(907 'CIRCULAR' 138) #(907 'CLASS' 139) #(907 'CLEANUP' 143) #(907 'CLEAR' 144) #(907 'CLIENT' 145) #(907 'CLIENTS' 146) #(907 'CLOCK' 147) #(907 'CLONE' 148) #(907 'CLOSE' 149) #(907 'CN' 150) #(907 'CO' 151) #(907 'COALESCE' 878) #(907 'CODE' 152) #(907 'COLLECT' 153) #(907 'COLOR' 154) #(907 'COLUMN' 155) #(907 'COLUMNS' 156) #(907 'COL_BACKGROUND' 157) #(907 'COL_GROUP' 158) #(907 'COL_HEADING' 159) #(907 'COL_KEY' 160) #(907 'COL_NEGATIVE' 161) #(907 'COL_NORMAL' 162) #(907 'COL_POSITIVE' 163) #(907 'COL_TOTAL' 164) #(907 'COMMENT' 165) #(907 'COMMENTS' 166) #(907 'COMMIT' 167) #(907 'COMMON' 168) #(907 'COMMUNICATION' 169) #(907 'COMPARING' 170) #(907 'COMPONENT' 171) #(907 'COMPONENTS' 172) #(907 'COMPRESSION' 173) #(907 'COMPUTE' 174) #(907 'CONCAT' 879) #(907 'CONCATENATE' 175) #(907 'CONCAT_WITH_SPACE' 880) #(907 'COND' 176) #(907 'CONDENSE' 177) #(907 'CONDITION' 178) #(907 'CONNECTION' 179) #(907 'CONSTANT' 180) #(907 'CONSTANTS' 181) #(907 'CONTEXT' 182) #(907 'CONTEXTS' 183) #(907 'CONTINUE' 184) #(907 'CONTROL' 185) #(907 'CONTROLS' 186) #(907 'CONV' 187) #(907 'CONVERSION' 188) #(907 'CONVERT' 189) #(907 'COPIES' 190) #(907 'COPY' 191) #(907 'CORRESPONDING' 192) #(907 'COUNT' 193) #(907 'COUNTRY' 194) #(907 'COVER' 195) #(907 'CP' 196) #(907 'CPI' 197) #(907 'CREATE' 198) #(907 'CRITICAL' 199) #(907 'CS' 200) #(907 'CURRENCY' 201) #(907 'CURRENT' 202) #(907 'CURSOR' 203) #(907 'DANGEROUS' 205) #(907 'DATA' 206) #(907 'DATABASE' 207) #(907 'DATAINFO' 208) #(907 'DATASET' 209) #(907 'DATE' 210) #(907 'DAYLIGHT' 211) #(907 'DB2' 212) #(907 'DB6' 213) #(907 'DD/MM/YY' 214) #(907 'DD/MM/YYYY' 215) #(907 'DDL' 216) #(907 'DDMMYY' 217) #(907 'DEALLOCATE' 218) #(907 'DEC' 219) #(907 'DECIMALS' 220) #(907 'DECLARATIONS' 221) #(907 'DEEP' 222) #(907 'DEFAULT' 223) #(907 'DEFERRED' 224) #(907 'DEFINE' 225) #(907 'DEFINITION' 226) #(907 'DELETE' 227) #(907 'DELETING' 228) #(907 'DEMAND' 229) #(907 'DEPARTMENT' 230) #(907 'DESCENDING' 231) #(907 'DESCRIBE' 232) #(907 'DESTINATION' 233) #(907 'DETAIL' 234) #(907 'DETERMINATION' 235) #(907 'DETERMINE' 236) #(907 'DIALOG' 237) #(907 'DID' 238) #(907 'DIRECTORY' 239) #(907 'DISCARDING' 240) #(907 'DISPLAY' 241) #(907 'DISTANCE' 243) #(907 'DISTINCT' 244) #(907 'DIV' 245) #(907 'DIVIDE' 246) #(907 'DO' 247) #(907 'DUMMY' 248) #(907 'DUPLICATE' 249) #(907 'DUPLICATES' 250) #(907 'DURATION' 251) #(907 'DURING' 252) #(907 'DYNPRO' 253) #(907 'EARLY' 254) #(907 'EDIT' 255) #(907 'ELSE' 257) #(907 'ELSEIF' 258) #(907 'EMPTY' 259) #(907 'ENABLED' 260) #(907 'ENABLING' 261) #(907 'ENCODING' 262) #(907 'END' 263) #(907 'ENDAT' 270) #(907 'ENDCASE' 271) #(907 'ENDCATCH' 272) #(907 'ENDCHAIN' 273) #(907 'ENDCLASS' 274) #(907 'ENDDO' 275) #(907 'ENDENHANCEMENT' 276) #(907 'ENDEXEC' 277) #(907 'ENDFORM' 278) #(907 'ENDFUNCTION' 279) #(907 'ENDIAN' 280) #(907 'ENDIF' 281) #(907 'ENDING' 282) #(907 'ENDINTERFACE' 283) #(907 'ENDLOOP' 284) #(907 'ENDMETHOD' 285) #(907 'ENDMODULE' 286) #(907 'ENDON' 287) #(907 'ENDPROVIDE' 288) #(907 'ENDSELECT' 289) #(907 'ENDTRY' 290) #(907 'ENDWHILE' 291) #(907 'ENDWITH' 292) #(907 'ENGINEERING' 293) #(907 'ENHANCEMENT' 294) #(907 'ENHANCEMENTS' 297) #(907 'ENTITIES' 298) #(907 'ENTITY' 299) #(907 'ENTRIES' 300) #(907 'ENTRY' 301) #(907 'ENUM' 302) #(907 'ENVIRONMENT' 303) #(907 'EQ' 304) #(907 'EQUIV' 305) #(907 'ERRORS' 306) #(907 'ESCAPE' 307) #(907 'ESCAPING' 308) #(907 'EVENT' 309) #(907 'EVENTS' 310) #(907 'EXACT' 311) #(907 'EXCEPT' 312) #(907 'EXCEPTION' 313) #(907 'EXCEPTIONS' 315) #(907 'EXCLUDE' 316) #(907 'EXCLUDING' 317) #(907 'EXEC' 318) #(907 'EXECUTE' 319) #(907 'EXISTS' 320) #(907 'EXIT' 321) #(907 'EXPANDING' 323) #(907 'EXPIRATION' 324) #(907 'EXPLICIT' 325) #(907 'EXPONENT' 326) #(907 'EXPORT' 327) #(907 'EXPORTING' 328) #(907 'EXTENDED' 329) #(907 'EXTENSION' 330) #(907 'EXTRACT' 331) #(907 'FAIL' 332) #(907 'FAILED' 333) #(907 'FEATURES' 334) #(907 'FETCH' 335) #(907 'FIELD' 336) #(907 'FIELDS' 340) #(907 'FILE' 341) #(907 'FILL' 342) #(907 'FILTER' 343) #(907 'FILTERS' 344) #(907 'FINAL' 345) #(907 'FIND' 346) #(907 'FIRST' 347) #(907 'FLOOR' 881) #(907 'FLTP' 350) #(907 'FLUSH' 351) #(907 'FONT' 352) #(907 'FOR' 353) #(907 'FORM' 354) #(907 'FORMAT' 355) #(907 'FORWARD' 356) #(907 'FOUND' 357) #(907 'FRAME' 358) #(907 'FRAMES' 359) #(907 'FREE' 360) #(907 'FRIENDS' 361) #(907 'FROM' 362) #(907 'FULL' 363) #(907 'FUNCTION' 364) #(907 'FURTHER' 366) #(907 'GE' 367) #(907 'GENERATE' 368) #(907 'GET' 369) #(907 'GIVING' 370) #(907 'GLOBAL' 371) #(907 'GRAPH' 372) #(907 'GROUP' 373) #(907 'GROUPS' 374) #(907 'GT' 375) #(907 'HANDLE' 376) #(907 'HANDLER' 377) #(907 'HARMLESS' 378) #(907 'HASHED' 379) #(907 'HAVING' 380) #(907 'HDB' 381) #(907 'HEADER' 382) #(907 'HEADERS' 383) #(907 'HEADING' 384) #(907 'HIDE' 387) #(907 'HIERARCHY' 388) #(907 'HIGH' 389) #(907 'HINT' 390) #(907 'HOLD' 391) #(907 'HOTSPOT' 392) #(907 'ICON' 393) #(907 'ID' 394) #(907 'IDENTIFICATION' 395) #(907 'IDENTIFIER' 396) #(907 'IDS' 397) #(907 'IF' 398) #(907 'IGNORE' 399) #(907 'IGNORING' 400) #(907 'IMMEDIATELY' 401) #(907 'IMPLEMENTATION' 402) #(907 'IMPLEMENTED' 403) #(907 'IMPLICIT' 404) #(907 'IMPORT' 405) #(907 'IMPORTING' 406) #(907 'IN' 407) #(907 'INACTIVE' 408) #(907 'INCL' 409) #(907 'INCLUDE' 410) #(907 'INCLUDES' 411) #(907 'INCREMENT' 412) #(907 'INDEX' 413) #(907 'INFORMIX' 415) #(907 'INFOTYPES' 416) #(907 'INHERITING' 417) #(907 'INIT' 418) #(907 'INITIAL' 419) #(907 'INITIALIZATION' 420) #(907 'INNER' 421) #(907 'INPUT' 422) #(907 'INSERT' 423) #(907 'INSTANCE' 424) #(907 'INSTANCES' 425) #(907 'INT2' 426) #(907 'INT4' 427) #(907 'INT8' 428) #(907 'INTENSIFIED' 429) #(907 'INTERFACE' 430) #(907 'INTERFACES' 431) #(907 'INTERNAL' 432) #(907 'INTERVALS' 433) #(907 'INTO' 434) #(907 'INVERSE' 435) #(907 'IS' 437) #(907 'ISO' 438) #(907 'JOB' 439) #(907 'JOIN' 440) #(907 'KEEP' 441) #(907 'KEEPING' 442) #(907 'KERNEL' 443) #(907 'KEY' 444) #(907 'KEYS' 445) #(907 'KEYWORDS' 446) #(907 'KIND' 447) #(907 'LANGUAGE' 448) #(907 'LAST' 449) #(907 'LATE' 450) #(907 'LAYOUT' 451) #(907 'LE' 452) #(907 'LEADING' 453) #(907 'LEAVE' 454) #(907 'LEFT' 455) #(907 'LEFTPLUS' 457) #(907 'LEFTSPACE' 458) #(907 'LEGACY' 459) #(907 'LENGTH' 460) #(907 'LET' 461) #(907 'LEVEL' 462) #(907 'LEVELS' 463) #(907 'LIKE' 464) #(907 'LINE' 465) #(907 'LINEFEED' 469) #(907 'LINES' 470) #(907 'LINK' 471) #(907 'LIST' 472) #(907 'LISTBOX' 474) #(907 'LOAD' 475) #(907 'LOCAL' 477) #(907 'LOCALE' 478) #(907 'LOCK' 479) #(907 'LOCKS' 480) #(907 'LOGFILE' 482) #(907 'LOGICAL' 483) #(907 'LONG' 484) #(907 'LOOP' 485) #(907 'LOW' 486) #(907 'LOWER' 487) #(907 'LPI' 488) #(907 'LT' 489) #(907 'LTRIM' 882) #(907 'MAIN' 491) #(907 'MAPPED' 492) #(907 'MAPPING' 493) #(907 'MARGIN' 494) #(907 'MARK' 495) #(907 'MASK' 496) #(907 'MATCH' 497) #(907 'MATCHCODE' 498) #(907 'MAX' 499) #(907 'MAXIMUM' 500) #(907 'MEDIUM' 501) #(907 'MEMBERS' 502) #(907 'MEMORY' 503) #(907 'MESH' 504) #(907 'MESSAGE' 505) #(907 'MESSAGES' 507) #(907 'MESSAGING' 508) #(907 'METHOD' 509) #(907 'METHODS' 510) #(907 'MIN' 511) #(907 'MM/DD/YY' 512) #(907 'MM/DD/YYYY' 513) #(907 'MMDDYY' 514) #(907 'MOD' 515) #(907 'MODE' 516) #(907 'MODIF' 517) #(907 'MODIFIER' 518) #(907 'MODIFY' 519) #(907 'MODULE' 520) #(907 'MOVE' 521) #(907 'MSSQLNT' 523) #(907 'MULTIPLY' 524) #(907 'NA' 526) #(907 'NAME' 527) #(907 'NAMETAB' 528) #(907 'NATIVE' 529) #(907 'NE' 530) #(907 'NESTED' 531) #(907 'NESTING' 532) #(907 'NEW' 533) #(907 'NEXT' 537) #(907 'NO' 538) #(907 'NODES' 550) #(907 'NOT' 553) #(907 'NP' 554) #(907 'NS' 555) #(907 'NULL' 556) #(907 'NUMBER' 557) #(907 'NUMBERING' 558) #(907 'NUMC' 559) #(907 'OBJECT' 561) #(907 'OBJECTS' 562) #(907 'OBJMGR' 563) #(907 'OBLIGATORY' 564) #(907 'OCCURENCE' 565) #(907 'OCCURENCES' 566) #(907 'OCCURRENCE' 567) #(907 'OCCURRENCES' 568) #(907 'OCCURS' 569) #(907 'OF' 570) #(907 'OFF' 571) #(907 'OFFSET' 572) #(907 'ON' 573) #(907 'ONE' 574) #(907 'ONLY' 575) #(907 'OPEN' 576) #(907 'OPTION' 577) #(907 'OPTIONAL' 578) #(907 'OPTIONS' 579) #(907 'OR' 580) #(907 'ORACLE' 581) #(907 'ORDER' 582) #(907 'OTHERS' 583) #(907 'OUT' 584) #(907 'OUTER' 585) #(907 'OUTPUT' 586) #(907 'OVERFLOW' 588) #(907 'OVERLAY' 589) #(907 'PACK' 590) #(907 'PACKAGE' 591) #(907 'PAD' 592) #(907 'PADDING' 593) #(907 'PAGE' 594) #(907 'PAGES' 595) #(907 'PARAMETER' 596) #(907 'PARAMETERS' 598) #(907 'PART' 599) #(907 'PARTIALLY' 600) #(907 'PCRE' 601) #(907 'PERCENTAGE' 602) #(907 'PERFORM' 603) #(907 'PERFORMING' 604) #(907 'PERMISSIONS' 605) #(907 'PLACES' 607) #(907 'POOL' 608) #(907 'POSITION' 609) #(907 'POS_HIGH' 610) #(907 'POS_LOW' 611) #(907 'PRAGMAS' 612) #(907 'PRECHECK' 613) #(907 'PRECOMPILED' 614) #(907 'PREFERRED' 615) #(907 'PRESERVING' 616) #(907 'PRIMARY' 617) #(907 'PRINT' 618) #(907 'PRIVATE' 620) #(907 'PRIVILEGED' 621) #(907 'PROCEDURE' 622) #(907 'PROGRAM' 623) #(907 'PROPERTY' 624) #(907 'PROTECTED' 625) #(907 'PROVIDE' 626) #(907 'PUBLIC' 627) #(907 'PUSH' 628) #(907 'PUSHBUTTON' 629) #(907 'PUT' 630) #(907 'QUEUEONLY' 632) #(907 'QUICKINFO' 633) #(907 'RADIOBUTTON' 634) #(907 'RAISE' 635) #(907 'RAISING' 636) #(907 'RANGE' 637) #(907 'RANGES' 638) #(907 'RAW' 639) #(907 'READ' 640) #(907 'RECEIVE' 642) #(907 'RECEIVED' 643) #(907 'RECEIVER' 644) #(907 'RECEIVING' 645) #(907 'REDEFINITION' 646) #(907 'REDUCE' 647) #(907 'REF' 648) #(907 'REFERENCE' 649) #(907 'REFRESH' 650) #(907 'REGEX' 651) #(907 'REJECT' 652) #(907 'RELATING' 653) #(907 'RENAMING' 654) #(907 'REPLACE' 655) #(907 'REPLACEMENT' 656) #(907 'REPLACING' 657) #(907 'REPORT' 658) #(907 'REPORTED' 659) #(907 'REQUEST' 660) #(907 'REQUESTED' 661) #(907 'REQUIRED' 662) #(907 'RESERVE' 663) #(907 'RESET' 664) #(907 'RESOLUTION' 665) #(907 'RESPECTING' 666) #(907 'RESPONSE' 667) #(907 'RESPONSES' 668) #(907 'RESULT' 669) #(907 'RESULTS' 670) #(907 'RESUMABLE' 671) #(907 'RESUME' 672) #(907 'RETRY' 673) #(907 'RETURN' 674) #(907 'RETURNCODE' 675) #(907 'RETURNING' 676) #(907 'RIGHT' 677) #(907 'RIGHTPLUS' 679) #(907 'RIGHTSPACE' 680) #(907 'RISK' 681) #(907 'ROLLBACK' 682) #(907 'ROUND' 683) #(907 'ROWS' 684) #(907 'RTRIM' 883) #(907 'RUN' 685) #(907 'SAP' 686) #(907 'SAVE' 688) #(907 'SAVING' 689) #(907 'SCALE_PRESERVING' 690) #(907 'SCALE_PRESERVING_SCIENTIFIC' 691) #(907 'SCAN' 692) #(907 'SCIENTIFIC' 693) #(907 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(907 'SCREEN' 695) #(907 'SCROLL' 696) #(907 'SCROLLING' 698) #(907 'SEARCH' 699) #(907 'SECONDARY' 700) #(907 'SECONDS' 701) #(907 'SECTION' 702) #(907 'SELECT' 703) #(907 'SELECTION' 705) #(907 'SELECTIONS' 710) #(907 'SEND' 711) #(907 'SEPARATE' 712) #(907 'SEPARATED' 713) #(907 'SESSION' 714) #(907 'SET' 715) #(907 'SHARED' 716) #(907 'SHIFT' 717) #(907 'SHORT' 718) #(907 'SHORTDUMP' 719) #(907 'SIGN' 721) #(907 'SIGN_AS_POSTFIX' 722) #(907 'SIMPLE' 723) #(907 'SIMULATION' 724) #(907 'SINGLE' 725) #(907 'SIZE' 726) #(907 'SKIP' 727) #(907 'SKIPPING' 728) #(907 'SMART' 729) #(907 'SOME' 730) #(907 'SORT' 731) #(907 'SORTABLE' 732) #(907 'SORTED' 733) #(907 'SOURCE' 734) #(907 'SPACE' 735) #(907 'SPECIFIED' 736) #(907 'SPLIT' 737) #(907 'SPOOL' 738) #(907 'SPOTS' 739) #(907 'SQL' 740) #(907 'SQLSCRIPT' 741) #(907 'STABLE' 742) #(907 'STAMP' 743) #(907 'STANDARD' 744) #(907 'STARTING' 746) #(907 'STATE' 747) #(907 'STATEMENT' 748) #(907 'STATEMENTS' 749) #(907 'STATIC' 750) #(907 'STATICS' 751) #(907 'STATUSINFO' 752) #(907 'STEP' 753) #(907 'STOP' 755) #(907 'STRUCTURE' 756) #(907 'STRUCTURES' 757) #(907 'STYLE' 758) #(907 'SUBKEY' 759) #(907 'SUBMATCHES' 760) #(907 'SUBMIT' 761) #(907 'SUBROUTINE' 762) #(907 'SUBSCREEN' 763) #(907 'SUBSTRING' 764) #(907 'SUBTRACT' 765) #(907 'SUFFIX' 767) #(907 'SUM' 768) #(907 'SUMMARY' 769) #(907 'SUPPLIED' 770) #(907 'SUPPLY' 771) #(907 'SUPPRESS' 772) #(907 'SWITCH' 773) #(907 'SYBASE' 774) #(907 'SYMBOL' 775) #(907 'T000' 779) #(907 'TAB' 780) #(907 'TABBED' 781) #(907 'TABLE' 782) #(907 'TABLES' 783) #(907 'TABLEVIEW' 784) #(907 'TABSTRIP' 785) #(907 'TARGET' 786) #(907 'TASK' 787) #(907 'TASKS' 788) #(907 'TEST' 789) #(907 'TESTING' 792) #(907 'TEXT' 793) #(907 'TEXTPOOL' 794) #(907 'THEN' 795) #(907 'THROW' 796) #(907 'TIME' 797) #(907 'TIMES' 798) #(907 'TIMESTAMP' 799) #(907 'TIMEZONE' 800) #(907 'TITLE' 801) #(907 'TITLEBAR' 802) #(907 'TO' 803) #(907 'TOKENIZATION' 804) #(907 'TOKENS' 805) #(907 'TRAILING' 810) #(907 'TRANSACTION' 811) #(907 'TRANSFER' 812) #(907 'TRANSFORMATION' 813) #(907 'TRANSLATE' 814) #(907 'TRANSPORTING' 815) #(907 'TRMAC' 816) #(907 'TRUNCATION' 817) #(907 'TRY' 818) #(907 'TYPE' 819) #(907 'TYPES' 822) #(907 'ULINE' 823) #(907 'UNASSIGN' 824) #(907 'UNDER' 825) #(907 'UNICODE' 826) #(907 'UNION' 827) #(907 'UNIQUE' 828) #(907 'UNIT' 829) #(907 'UNIX' 830) #(907 'UNPACK' 831) #(907 'UNTIL' 832) #(907 'UNWIND' 833) #(907 'UP' 834) #(907 'UPDATE' 835) #(907 'UPPER' 836) #(907 'USER' 837) #(907 'USING' 839) #(907 'UTCLONG' 840) #(907 'UUID' 884) #(907 'VALID' 842) #(907 'VALIDATE' 843) #(907 'VALUE' 844) #(907 'VALUES' 846) #(907 'VARY' 847) #(907 'VARYING' 848) #(907 'VERSION' 849) #(907 'VIA' 850) #(907 'VISIBLE' 851) #(907 'WAIT' 852) #(907 'WHEN' 853) #(907 'WHERE' 854) #(907 'WHILE' 855) #(907 'WIDTH' 856) #(907 'WINDOW' 857) #(907 'WINDOWS' 858) #(907 'WITH' 859) #(907 'WITHOUT' 862) #(907 'WORD' 863) #(907 'WORK' 864) #(907 'WORKSPACE' 865) #(907 'WRITE' 866) #(907 'WRITER' 867) #(907 'XML' 868) #(907 'XSD' 869) #(907 'XSDBOOL' 870) #(907 'YES' 871) #(907 'YYMMDD' 872) #(907 'ZERO' 874) #(907 'ZONE' 875) #(946 'AS' 62) #(946 'AT' 71) #(946 'BY' 106) #(946 'CA' 116) #(946 'CN' 150) #(946 'CO' 151) #(946 'CP' 196) #(946 'CS' 200) #(946 'DO' 247) #(946 'EQ' 304) #(946 'GE' 367) #(946 'GT' 375) #(946 'ID' 394) #(946 'IF' 398) #(946 'IN' 407) #(946 'IS' 437) #(946 'LE' 452) #(946 'LT' 489) #(946 'NA' 526) #(946 'NE' 530) #(946 'NO' 538) #(946 'NP' 554) #(946 'NS' 555) #(946 'OF' 570) #(946 'ON' 573) #(946 'OR' 580) #(946 'TO' 803) #(946 'UP' 834) #(888 '%_FINAL' 2) #(888 '%_HINTS' 3) #(888 '%_PREDEFINED' 4) #(888 'ABS' 876) #(888 'ABSTRACT' 33) #(888 'ACCEPT' 34) #(888 'ACCEPTING' 35) #(888 'ACCESS' 36) #(888 'ACCORDING' 37) #(888 'ACTION' 38) #(888 'ACTIVATION' 39) #(888 'ACTUAL' 40) #(888 'ADABAS' 41) #(888 'ADD' 42) #(888 'ADJACENT' 44) #(888 'ALIAS' 45) #(888 'ALIASES' 46) #(888 'ALIGN' 47) #(888 'ALL' 48) #(888 'ALLOCATE' 49) #(888 'ALPHA' 50) #(888 'AMDP' 51) #(888 'ANALYSIS' 52) #(888 'ANALYZER' 53) #(888 'AND' 54) #(888 'ANY' 55) #(888 'APPEND' 56) #(888 'APPENDING' 57) #(888 'APPLICATION' 58) #(888 'ARCHIVE' 59) #(888 'AREA' 60) #(888 'ARITHMETIC' 61) #(888 'AS' 62) #(888 'AS400' 63) #(888 'ASCENDING' 64) #(888 'ASSERT' 65) #(888 'ASSIGN' 66) #(888 'ASSIGNED' 67) #(888 'ASSIGNING' 68) #(888 'ASSOCIATION' 69) #(888 'ASYNCHRONOUS' 70) #(888 'AT' 71) #(888 'ATTRIBUTES' 72) #(888 'AUGMENTING' 73) #(888 'AUTHORITY' 74) #(888 'AUTHORIZATION' 76) #(888 'AUTO' 77) #(888 'AVG' 78) #(888 'BACK' 79) #(888 'BACKGROUND' 80) #(888 'BACKWARD' 81) #(888 'BADI' 82) #(888 'BASE' 83) #(888 'BEFORE' 84) #(888 'BEGIN' 85) #(888 'BEHAVIOR' 86) #(888 'BETWEEN' 87) #(888 'BINARY' 88) #(888 'BIT' 89) #(888 'BLANK' 94) #(888 'BLANKS' 95) #(888 'BLOCK' 96) #(888 'BLOCKS' 97) #(888 'BOOLC' 98) #(888 'BOUND' 99) #(888 'BOUNDARIES' 100) #(888 'BOUNDS' 101) #(888 'BOXED' 102) #(888 'BREAK' 103) #(888 'BUFFER' 105) #(888 'BY' 106) #(888 'BYPASSING' 107) #(888 'BYTE' 108) #(888 'CA' 116) #(888 'CALL' 117) #(888 'CALLING' 118) #(888 'CASE' 119) #(888 'CAST' 120) #(888 'CASTING' 121) #(888 'CATCH' 122) #(888 'CDS' 123) #(888 'CEIL' 877) #(888 'CENTER' 124) #(888 'CENTERED' 125) #(888 'CHAIN' 126) #(888 'CHANGE' 129) #(888 'CHANGING' 130) #(888 'CHANNELS' 131) #(888 'CHAR' 132) #(888 'CHARACTER' 134) #(888 'CHECK' 135) #(888 'CHECKBOX' 136) #(888 'CID' 137) #(888 'CIRCULAR' 138) #(888 'CLASS' 139) #(888 'CLEANUP' 143) #(888 'CLEAR' 144) #(888 'CLIENT' 145) #(888 'CLIENTS' 146) #(888 'CLOCK' 147) #(888 'CLONE' 148) #(888 'CLOSE' 149) #(888 'CN' 150) #(888 'CO' 151) #(888 'COALESCE' 878) #(888 'CODE' 152) #(888 'COLLECT' 153) #(888 'COLOR' 154) #(888 'COLUMN' 155) #(888 'COLUMNS' 156) #(888 'COL_BACKGROUND' 157) #(888 'COL_GROUP' 158) #(888 'COL_HEADING' 159) #(888 'COL_KEY' 160) #(888 'COL_NEGATIVE' 161) #(888 'COL_NORMAL' 162) #(888 'COL_POSITIVE' 163) #(888 'COL_TOTAL' 164) #(888 'COMMENT' 165) #(888 'COMMENTS' 166) #(888 'COMMIT' 167) #(888 'COMMON' 168) #(888 'COMMUNICATION' 169) #(888 'COMPARING' 170) #(888 'COMPONENT' 171) #(888 'COMPONENTS' 172) #(888 'COMPRESSION' 173) #(888 'COMPUTE' 174) #(888 'CONCAT' 879) #(888 'CONCATENATE' 175) #(888 'CONCAT_WITH_SPACE' 880) #(888 'COND' 176) #(888 'CONDENSE' 177) #(888 'CONDITION' 178) #(888 'CONNECTION' 179) #(888 'CONSTANT' 180) #(888 'CONSTANTS' 181) #(888 'CONTEXT' 182) #(888 'CONTEXTS' 183) #(888 'CONTINUE' 184) #(888 'CONTROL' 185) #(888 'CONTROLS' 186) #(888 'CONV' 187) #(888 'CONVERSION' 188) #(888 'CONVERT' 189) #(888 'COPIES' 190) #(888 'COPY' 191) #(888 'CORRESPONDING' 192) #(888 'COUNT' 193) #(888 'COUNTRY' 194) #(888 'COVER' 195) #(888 'CP' 196) #(888 'CPI' 197) #(888 'CREATE' 198) #(888 'CRITICAL' 199) #(888 'CS' 200) #(888 'CURRENCY' 201) #(888 'CURRENT' 202) #(888 'CURSOR' 203) #(888 'DANGEROUS' 205) #(888 'DATA' 206) #(888 'DATABASE' 207) #(888 'DATAINFO' 208) #(888 'DATASET' 209) #(888 'DATE' 210) #(888 'DAYLIGHT' 211) #(888 'DB2' 212) #(888 'DB6' 213) #(888 'DD/MM/YY' 214) #(888 'DD/MM/YYYY' 215) #(888 'DDL' 216) #(888 'DDMMYY' 217) #(888 'DEALLOCATE' 218) #(888 'DEC' 219) #(888 'DECIMALS' 220) #(888 'DECLARATIONS' 221) #(888 'DEEP' 222) #(888 'DEFAULT' 223) #(888 'DEFERRED' 224) #(888 'DEFINE' 225) #(888 'DEFINITION' 226) #(888 'DELETE' 227) #(888 'DELETING' 228) #(888 'DEMAND' 229) #(888 'DEPARTMENT' 230) #(888 'DESCENDING' 231) #(888 'DESCRIBE' 232) #(888 'DESTINATION' 233) #(888 'DETAIL' 234) #(888 'DETERMINATION' 235) #(888 'DETERMINE' 236) #(888 'DIALOG' 237) #(888 'DID' 238) #(888 'DIRECTORY' 239) #(888 'DISCARDING' 240) #(888 'DISPLAY' 241) #(888 'DISTANCE' 243) #(888 'DISTINCT' 244) #(888 'DIV' 245) #(888 'DIVIDE' 246) #(888 'DO' 247) #(888 'DUMMY' 248) #(888 'DUPLICATE' 249) #(888 'DUPLICATES' 250) #(888 'DURATION' 251) #(888 'DURING' 252) #(888 'DYNPRO' 253) #(888 'EARLY' 254) #(888 'EDIT' 255) #(888 'ELSE' 257) #(888 'ELSEIF' 258) #(888 'EMPTY' 259) #(888 'ENABLED' 260) #(888 'ENABLING' 261) #(888 'ENCODING' 262) #(888 'END' 263) #(888 'ENDAT' 270) #(888 'ENDCASE' 271) #(888 'ENDCATCH' 272) #(888 'ENDCHAIN' 273) #(888 'ENDCLASS' 274) #(888 'ENDDO' 275) #(888 'ENDENHANCEMENT' 276) #(888 'ENDEXEC' 277) #(888 'ENDFORM' 278) #(888 'ENDFUNCTION' 279) #(888 'ENDIAN' 280) #(888 'ENDIF' 281) #(888 'ENDING' 282) #(888 'ENDINTERFACE' 283) #(888 'ENDLOOP' 284) #(888 'ENDMETHOD' 285) #(888 'ENDMODULE' 286) #(888 'ENDON' 287) #(888 'ENDPROVIDE' 288) #(888 'ENDSELECT' 289) #(888 'ENDTRY' 290) #(888 'ENDWHILE' 291) #(888 'ENDWITH' 292) #(888 'ENGINEERING' 293) #(888 'ENHANCEMENT' 294) #(888 'ENHANCEMENTS' 297) #(888 'ENTITIES' 298) #(888 'ENTITY' 299) #(888 'ENTRIES' 300) #(888 'ENTRY' 301) #(888 'ENUM' 302) #(888 'ENVIRONMENT' 303) #(888 'EQ' 304) #(888 'EQUIV' 305) #(888 'ERRORS' 306) #(888 'ESCAPE' 307) #(888 'ESCAPING' 308) #(888 'EVENT' 309) #(888 'EVENTS' 310) #(888 'EXACT' 311) #(888 'EXCEPT' 312) #(888 'EXCEPTION' 313) #(888 'EXCEPTIONS' 315) #(888 'EXCLUDE' 316) #(888 'EXCLUDING' 317) #(888 'EXEC' 318) #(888 'EXECUTE' 319) #(888 'EXISTS' 320) #(888 'EXIT' 321) #(888 'EXPANDING' 323) #(888 'EXPIRATION' 324) #(888 'EXPLICIT' 325) #(888 'EXPONENT' 326) #(888 'EXPORT' 327) #(888 'EXPORTING' 328) #(888 'EXTENDED' 329) #(888 'EXTENSION' 330) #(888 'EXTRACT' 331) #(888 'FAIL' 332) #(888 'FAILED' 333) #(888 'FEATURES' 334) #(888 'FETCH' 335) #(888 'FIELD' 336) #(888 'FIELDS' 340) #(888 'FILE' 341) #(888 'FILL' 342) #(888 'FILTER' 343) #(888 'FILTERS' 344) #(888 'FINAL' 345) #(888 'FIND' 346) #(888 'FIRST' 347) #(888 'FLOOR' 881) #(888 'FLTP' 350) #(888 'FLUSH' 351) #(888 'FONT' 352) #(888 'FOR' 353) #(888 'FORM' 354) #(888 'FORMAT' 355) #(888 'FORWARD' 356) #(888 'FOUND' 357) #(888 'FRAME' 358) #(888 'FRAMES' 359) #(888 'FREE' 360) #(888 'FRIENDS' 361) #(888 'FROM' 362) #(888 'FULL' 363) #(888 'FUNCTION' 364) #(888 'FURTHER' 366) #(888 'GE' 367) #(888 'GENERATE' 368) #(888 'GET' 369) #(888 'GIVING' 370) #(888 'GLOBAL' 371) #(888 'GRAPH' 372) #(888 'GROUP' 373) #(888 'GROUPS' 374) #(888 'GT' 375) #(888 'HANDLE' 376) #(888 'HANDLER' 377) #(888 'HARMLESS' 378) #(888 'HASHED' 379) #(888 'HAVING' 380) #(888 'HDB' 381) #(888 'HEADER' 382) #(888 'HEADERS' 383) #(888 'HEADING' 384) #(888 'HIDE' 387) #(888 'HIERARCHY' 388) #(888 'HIGH' 389) #(888 'HINT' 390) #(888 'HOLD' 391) #(888 'HOTSPOT' 392) #(888 'ICON' 393) #(888 'ID' 394) #(888 'IDENTIFICATION' 395) #(888 'IDENTIFIER' 396) #(888 'IDS' 397) #(888 'IF' 398) #(888 'IGNORE' 399) #(888 'IGNORING' 400) #(888 'IMMEDIATELY' 401) #(888 'IMPLEMENTATION' 402) #(888 'IMPLEMENTED' 403) #(888 'IMPLICIT' 404) #(888 'IMPORT' 405) #(888 'IMPORTING' 406) #(888 'IN' 407) #(888 'INACTIVE' 408) #(888 'INCL' 409) #(888 'INCLUDE' 410) #(888 'INCLUDES' 411) #(888 'INCREMENT' 412) #(888 'INDEX' 413) #(888 'INFORMIX' 415) #(888 'INFOTYPES' 416) #(888 'INHERITING' 417) #(888 'INIT' 418) #(888 'INITIAL' 419) #(888 'INITIALIZATION' 420) #(888 'INNER' 421) #(888 'INPUT' 422) #(888 'INSERT' 423) #(888 'INSTANCE' 424) #(888 'INSTANCES' 425) #(888 'INT2' 426) #(888 'INT4' 427) #(888 'INT8' 428) #(888 'INTENSIFIED' 429) #(888 'INTERFACE' 430) #(888 'INTERFACES' 431) #(888 'INTERNAL' 432) #(888 'INTERVALS' 433) #(888 'INTO' 434) #(888 'INVERSE' 435) #(888 'IS' 437) #(888 'ISO' 438) #(888 'JOB' 439) #(888 'JOIN' 440) #(888 'KEEP' 441) #(888 'KEEPING' 442) #(888 'KERNEL' 443) #(888 'KEY' 444) #(888 'KEYS' 445) #(888 'KEYWORDS' 446) #(888 'KIND' 447) #(888 'LANGUAGE' 448) #(888 'LAST' 449) #(888 'LATE' 450) #(888 'LAYOUT' 451) #(888 'LE' 452) #(888 'LEADING' 453) #(888 'LEAVE' 454) #(888 'LEFT' 455) #(888 'LEFTPLUS' 457) #(888 'LEFTSPACE' 458) #(888 'LEGACY' 459) #(888 'LENGTH' 460) #(888 'LET' 461) #(888 'LEVEL' 462) #(888 'LEVELS' 463) #(888 'LIKE' 464) #(888 'LINE' 465) #(888 'LINEFEED' 469) #(888 'LINES' 470) #(888 'LINK' 471) #(888 'LIST' 472) #(888 'LISTBOX' 474) #(888 'LOAD' 475) #(888 'LOCAL' 477) #(888 'LOCALE' 478) #(888 'LOCK' 479) #(888 'LOCKS' 480) #(888 'LOGFILE' 482) #(888 'LOGICAL' 483) #(888 'LONG' 484) #(888 'LOOP' 485) #(888 'LOW' 486) #(888 'LOWER' 487) #(888 'LPI' 488) #(888 'LT' 489) #(888 'LTRIM' 882) #(888 'MAIN' 491) #(888 'MAPPED' 492) #(888 'MAPPING' 493) #(888 'MARGIN' 494) #(888 'MARK' 495) #(888 'MASK' 496) #(888 'MATCH' 497) #(888 'MATCHCODE' 498) #(888 'MAX' 499) #(888 'MAXIMUM' 500) #(888 'MEDIUM' 501) #(888 'MEMBERS' 502) #(888 'MEMORY' 503) #(888 'MESH' 504) #(888 'MESSAGE' 505) #(888 'MESSAGES' 507) #(888 'MESSAGING' 508) #(888 'METHOD' 509) #(888 'METHODS' 510) #(888 'MIN' 511) #(888 'MM/DD/YY' 512) #(888 'MM/DD/YYYY' 513) #(888 'MMDDYY' 514) #(888 'MOD' 515) #(888 'MODE' 516) #(888 'MODIF' 517) #(888 'MODIFIER' 518) #(888 'MODIFY' 519) #(888 'MODULE' 520) #(888 'MOVE' 521) #(888 'MSSQLNT' 523) #(888 'MULTIPLY' 524) #(888 'NA' 526) #(888 'NAME' 527) #(888 'NAMETAB' 528) #(888 'NATIVE' 529) #(888 'NE' 530) #(888 'NESTED' 531) #(888 'NESTING' 532) #(888 'NEW' 533) #(888 'NEXT' 537) #(888 'NO' 538) #(888 'NODES' 550) #(888 'NOT' 553) #(888 'NP' 554) #(888 'NS' 555) #(888 'NULL' 556) #(888 'NUMBER' 557) #(888 'NUMBERING' 558) #(888 'NUMC' 559) #(888 'OBJECT' 561) #(888 'OBJECTS' 562) #(888 'OBJMGR' 563) #(888 'OBLIGATORY' 564) #(888 'OCCURENCE' 565) #(888 'OCCURENCES' 566) #(888 'OCCURRENCE' 567) #(888 'OCCURRENCES' 568) #(888 'OCCURS' 569) #(888 'OF' 570) #(888 'OFF' 571) #(888 'OFFSET' 572) #(888 'ON' 573) #(888 'ONE' 574) #(888 'ONLY' 575) #(888 'OPEN' 576) #(888 'OPTION' 577) #(888 'OPTIONAL' 578) #(888 'OPTIONS' 579) #(888 'OR' 580) #(888 'ORACLE' 581) #(888 'ORDER' 582) #(888 'OTHERS' 583) #(888 'OUT' 584) #(888 'OUTER' 585) #(888 'OUTPUT' 586) #(888 'OVERFLOW' 588) #(888 'OVERLAY' 589) #(888 'PACK' 590) #(888 'PACKAGE' 591) #(888 'PAD' 592) #(888 'PADDING' 593) #(888 'PAGE' 594) #(888 'PAGES' 595) #(888 'PARAMETER' 596) #(888 'PARAMETERS' 598) #(888 'PART' 599) #(888 'PARTIALLY' 600) #(888 'PCRE' 601) #(888 'PERCENTAGE' 602) #(888 'PERFORM' 603) #(888 'PERFORMING' 604) #(888 'PERMISSIONS' 605) #(888 'PLACES' 607) #(888 'POOL' 608) #(888 'POSITION' 609) #(888 'POS_HIGH' 610) #(888 'POS_LOW' 611) #(888 'PRAGMAS' 612) #(888 'PRECHECK' 613) #(888 'PRECOMPILED' 614) #(888 'PREFERRED' 615) #(888 'PRESERVING' 616) #(888 'PRIMARY' 617) #(888 'PRINT' 618) #(888 'PRIVATE' 620) #(888 'PRIVILEGED' 621) #(888 'PROCEDURE' 622) #(888 'PROGRAM' 623) #(888 'PROPERTY' 624) #(888 'PROTECTED' 625) #(888 'PROVIDE' 626) #(888 'PUBLIC' 627) #(888 'PUSH' 628) #(888 'PUSHBUTTON' 629) #(888 'PUT' 630) #(888 'QUEUEONLY' 632) #(888 'QUICKINFO' 633) #(888 'RADIOBUTTON' 634) #(888 'RAISE' 635) #(888 'RAISING' 636) #(888 'RANGE' 637) #(888 'RANGES' 638) #(888 'RAW' 639) #(888 'READ' 640) #(888 'RECEIVE' 642) #(888 'RECEIVED' 643) #(888 'RECEIVER' 644) #(888 'RECEIVING' 645) #(888 'REDEFINITION' 646) #(888 'REDUCE' 647) #(888 'REF' 648) #(888 'REFERENCE' 649) #(888 'REFRESH' 650) #(888 'REGEX' 651) #(888 'REJECT' 652) #(888 'RELATING' 653) #(888 'RENAMING' 654) #(888 'REPLACE' 655) #(888 'REPLACEMENT' 656) #(888 'REPLACING' 657) #(888 'REPORT' 658) #(888 'REPORTED' 659) #(888 'REQUEST' 660) #(888 'REQUESTED' 661) #(888 'REQUIRED' 662) #(888 'RESERVE' 663) #(888 'RESET' 664) #(888 'RESOLUTION' 665) #(888 'RESPECTING' 666) #(888 'RESPONSE' 667) #(888 'RESPONSES' 668) #(888 'RESULT' 669) #(888 'RESULTS' 670) #(888 'RESUMABLE' 671) #(888 'RESUME' 672) #(888 'RETRY' 673) #(888 'RETURN' 674) #(888 'RETURNCODE' 675) #(888 'RETURNING' 676) #(888 'RIGHT' 677) #(888 'RIGHTPLUS' 679) #(888 'RIGHTSPACE' 680) #(888 'RISK' 681) #(888 'ROLLBACK' 682) #(888 'ROUND' 683) #(888 'ROWS' 684) #(888 'RTRIM' 883) #(888 'RUN' 685) #(888 'SAP' 686) #(888 'SAVE' 688) #(888 'SAVING' 689) #(888 'SCALE_PRESERVING' 690) #(888 'SCALE_PRESERVING_SCIENTIFIC' 691) #(888 'SCAN' 692) #(888 'SCIENTIFIC' 693) #(888 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(888 'SCREEN' 695) #(888 'SCROLL' 696) #(888 'SCROLLING' 698) #(888 'SEARCH' 699) #(888 'SECONDARY' 700) #(888 'SECONDS' 701) #(888 'SECTION' 702) #(888 'SELECT' 703) #(888 'SELECTION' 705) #(888 'SELECTIONS' 710) #(888 'SEND' 711) #(888 'SEPARATE' 712) #(888 'SEPARATED' 713) #(888 'SESSION' 714) #(888 'SET' 715) #(888 'SHARED' 716) #(888 'SHIFT' 717) #(888 'SHORT' 718) #(888 'SHORTDUMP' 719) #(888 'SIGN' 721) #(888 'SIGN_AS_POSTFIX' 722) #(888 'SIMPLE' 723) #(888 'SIMULATION' 724) #(888 'SINGLE' 725) #(888 'SIZE' 726) #(888 'SKIP' 727) #(888 'SKIPPING' 728) #(888 'SMART' 729) #(888 'SOME' 730) #(888 'SORT' 731) #(888 'SORTABLE' 732) #(888 'SORTED' 733) #(888 'SOURCE' 734) #(888 'SPACE' 735) #(888 'SPECIFIED' 736) #(888 'SPLIT' 737) #(888 'SPOOL' 738) #(888 'SPOTS' 739) #(888 'SQL' 740) #(888 'SQLSCRIPT' 741) #(888 'STABLE' 742) #(888 'STAMP' 743) #(888 'STANDARD' 744) #(888 'STARTING' 746) #(888 'STATE' 747) #(888 'STATEMENT' 748) #(888 'STATEMENTS' 749) #(888 'STATIC' 750) #(888 'STATICS' 751) #(888 'STATUSINFO' 752) #(888 'STEP' 753) #(888 'STOP' 755) #(888 'STRUCTURE' 756) #(888 'STRUCTURES' 757) #(888 'STYLE' 758) #(888 'SUBKEY' 759) #(888 'SUBMATCHES' 760) #(888 'SUBMIT' 761) #(888 'SUBROUTINE' 762) #(888 'SUBSCREEN' 763) #(888 'SUBSTRING' 764) #(888 'SUBTRACT' 765) #(888 'SUFFIX' 767) #(888 'SUM' 768) #(888 'SUMMARY' 769) #(888 'SUPPLIED' 770) #(888 'SUPPLY' 771) #(888 'SUPPRESS' 772) #(888 'SWITCH' 773) #(888 'SYBASE' 774) #(888 'SYMBOL' 775) #(888 'T000' 779) #(888 'TAB' 780) #(888 'TABBED' 781) #(888 'TABLE' 782) #(888 'TABLES' 783) #(888 'TABLEVIEW' 784) #(888 'TABSTRIP' 785) #(888 'TARGET' 786) #(888 'TASK' 787) #(888 'TASKS' 788) #(888 'TEST' 789) #(888 'TESTING' 792) #(888 'TEXT' 793) #(888 'TEXTPOOL' 794) #(888 'THEN' 795) #(888 'THROW' 796) #(888 'TIME' 797) #(888 'TIMES' 798) #(888 'TIMESTAMP' 799) #(888 'TIMEZONE' 800) #(888 'TITLE' 801) #(888 'TITLEBAR' 802) #(888 'TO' 803) #(888 'TOKENIZATION' 804) #(888 'TOKENS' 805) #(888 'TRAILING' 810) #(888 'TRANSACTION' 811) #(888 'TRANSFER' 812) #(888 'TRANSFORMATION' 813) #(888 'TRANSLATE' 814) #(888 'TRANSPORTING' 815) #(888 'TRMAC' 816) #(888 'TRUNCATION' 817) #(888 'TRY' 818) #(888 'TYPE' 819) #(888 'TYPES' 822) #(888 'ULINE' 823) #(888 'UNASSIGN' 824) #(888 'UNDER' 825) #(888 'UNICODE' 826) #(888 'UNION' 827) #(888 'UNIQUE' 828) #(888 'UNIT' 829) #(888 'UNIX' 830) #(888 'UNPACK' 831) #(888 'UNTIL' 832) #(888 'UNWIND' 833) #(888 'UP' 834) #(888 'UPDATE' 835) #(888 'UPPER' 836) #(888 'USER' 837) #(888 'USING' 839) #(888 'UTCLONG' 840) #(888 'UUID' 884) #(888 'VALID' 842) #(888 'VALIDATE' 843) #(888 'VALUE' 844) #(888 'VALUES' 846) #(888 'VARY' 847) #(888 'VARYING' 848) #(888 'VERSION' 849) #(888 'VIA' 850) #(888 'VISIBLE' 851) #(888 'WAIT' 852) #(888 'WHEN' 853) #(888 'WHERE' 854) #(888 'WHILE' 855) #(888 'WIDTH' 856) #(888 'WINDOW' 857) #(888 'WINDOWS' 858) #(888 'WITH' 859) #(888 'WITHOUT' 862) #(888 'WORD' 863) #(888 'WORK' 864) #(888 'WORKSPACE' 865) #(888 'WRITE' 866) #(888 'WRITER' 867) #(888 'XML' 868) #(888 'XSD' 869) #(888 'XSDBOOL' 870) #(888 'YES' 871) #(888 'YYMMDD' 872) #(888 'ZERO' 874) #(888 'ZONE' 875) #(927 '%_FINAL' 2) #(927 '%_HINTS' 3) #(927 '%_PREDEFINED' 4) #(927 'ABS' 876) #(927 'ABSTRACT' 33) #(927 'ACCEPT' 34) #(927 'ACCEPTING' 35) #(927 'ACCESS' 36) #(927 'ACCORDING' 37) #(927 'ACTION' 38) #(927 'ACTIVATION' 39) #(927 'ACTUAL' 40) #(927 'ADABAS' 41) #(927 'ADD' 42) #(927 'ADJACENT' 44) #(927 'ALIAS' 45) #(927 'ALIASES' 46) #(927 'ALIGN' 47) #(927 'ALL' 48) #(927 'ALLOCATE' 49) #(927 'ALPHA' 50) #(927 'AMDP' 51) #(927 'ANALYSIS' 52) #(927 'ANALYZER' 53) #(927 'AND' 54) #(927 'ANY' 55) #(927 'APPEND' 56) #(927 'APPENDING' 57) #(927 'APPLICATION' 58) #(927 'ARCHIVE' 59) #(927 'AREA' 60) #(927 'ARITHMETIC' 61) #(927 'AS' 62) #(927 'AS400' 63) #(927 'ASCENDING' 64) #(927 'ASSERT' 65) #(927 'ASSIGN' 66) #(927 'ASSIGNED' 67) #(927 'ASSIGNING' 68) #(927 'ASSOCIATION' 69) #(927 'ASYNCHRONOUS' 70) #(927 'AT' 71) #(927 'ATTRIBUTES' 72) #(927 'AUGMENTING' 73) #(927 'AUTHORITY' 74) #(927 'AUTHORIZATION' 76) #(927 'AUTO' 77) #(927 'AVG' 78) #(927 'BACK' 79) #(927 'BACKGROUND' 80) #(927 'BACKWARD' 81) #(927 'BADI' 82) #(927 'BASE' 83) #(927 'BEFORE' 84) #(927 'BEGIN' 85) #(927 'BEHAVIOR' 86) #(927 'BETWEEN' 87) #(927 'BINARY' 88) #(927 'BIT' 89) #(927 'BLANK' 94) #(927 'BLANKS' 95) #(927 'BLOCK' 96) #(927 'BLOCKS' 97) #(927 'BOOLC' 98) #(927 'BOUND' 99) #(927 'BOUNDARIES' 100) #(927 'BOUNDS' 101) #(927 'BOXED' 102) #(927 'BREAK' 103) #(927 'BUFFER' 105) #(927 'BY' 106) #(927 'BYPASSING' 107) #(927 'BYTE' 108) #(927 'CA' 116) #(927 'CALL' 117) #(927 'CALLING' 118) #(927 'CASE' 119) #(927 'CAST' 120) #(927 'CASTING' 121) #(927 'CATCH' 122) #(927 'CDS' 123) #(927 'CEIL' 877) #(927 'CENTER' 124) #(927 'CENTERED' 125) #(927 'CHAIN' 126) #(927 'CHANGE' 129) #(927 'CHANGING' 130) #(927 'CHANNELS' 131) #(927 'CHAR' 132) #(927 'CHARACTER' 134) #(927 'CHECK' 135) #(927 'CHECKBOX' 136) #(927 'CID' 137) #(927 'CIRCULAR' 138) #(927 'CLASS' 139) #(927 'CLEANUP' 143) #(927 'CLEAR' 144) #(927 'CLIENT' 145) #(927 'CLIENTS' 146) #(927 'CLOCK' 147) #(927 'CLONE' 148) #(927 'CLOSE' 149) #(927 'CN' 150) #(927 'CO' 151) #(927 'COALESCE' 878) #(927 'CODE' 152) #(927 'COLLECT' 153) #(927 'COLOR' 154) #(927 'COLUMN' 155) #(927 'COLUMNS' 156) #(927 'COL_BACKGROUND' 157) #(927 'COL_GROUP' 158) #(927 'COL_HEADING' 159) #(927 'COL_KEY' 160) #(927 'COL_NEGATIVE' 161) #(927 'COL_NORMAL' 162) #(927 'COL_POSITIVE' 163) #(927 'COL_TOTAL' 164) #(927 'COMMENT' 165) #(927 'COMMENTS' 166) #(927 'COMMIT' 167) #(927 'COMMON' 168) #(927 'COMMUNICATION' 169) #(927 'COMPARING' 170) #(927 'COMPONENT' 171) #(927 'COMPONENTS' 172) #(927 'COMPRESSION' 173) #(927 'COMPUTE' 174) #(927 'CONCAT' 879) #(927 'CONCATENATE' 175) #(927 'CONCAT_WITH_SPACE' 880) #(927 'COND' 176) #(927 'CONDENSE' 177) #(927 'CONDITION' 178) #(927 'CONNECTION' 179) #(927 'CONSTANT' 180) #(927 'CONSTANTS' 181) #(927 'CONTEXT' 182) #(927 'CONTEXTS' 183) #(927 'CONTINUE' 184) #(927 'CONTROL' 185) #(927 'CONTROLS' 186) #(927 'CONV' 187) #(927 'CONVERSION' 188) #(927 'CONVERT' 189) #(927 'COPIES' 190) #(927 'COPY' 191) #(927 'CORRESPONDING' 192) #(927 'COUNT' 193) #(927 'COUNTRY' 194) #(927 'COVER' 195) #(927 'CP' 196) #(927 'CPI' 197) #(927 'CREATE' 198) #(927 'CRITICAL' 199) #(927 'CS' 200) #(927 'CURRENCY' 201) #(927 'CURRENT' 202) #(927 'CURSOR' 203) #(927 'DANGEROUS' 205) #(927 'DATA' 206) #(927 'DATABASE' 207) #(927 'DATAINFO' 208) #(927 'DATASET' 209) #(927 'DATE' 210) #(927 'DAYLIGHT' 211) #(927 'DB2' 212) #(927 'DB6' 213) #(927 'DD/MM/YY' 214) #(927 'DD/MM/YYYY' 215) #(927 'DDL' 216) #(927 'DDMMYY' 217) #(927 'DEALLOCATE' 218) #(927 'DEC' 219) #(927 'DECIMALS' 220) #(927 'DECLARATIONS' 221) #(927 'DEEP' 222) #(927 'DEFAULT' 223) #(927 'DEFERRED' 224) #(927 'DEFINE' 225) #(927 'DEFINITION' 226) #(927 'DELETE' 227) #(927 'DELETING' 228) #(927 'DEMAND' 229) #(927 'DEPARTMENT' 230) #(927 'DESCENDING' 231) #(927 'DESCRIBE' 232) #(927 'DESTINATION' 233) #(927 'DETAIL' 234) #(927 'DETERMINATION' 235) #(927 'DETERMINE' 236) #(927 'DIALOG' 237) #(927 'DID' 238) #(927 'DIRECTORY' 239) #(927 'DISCARDING' 240) #(927 'DISPLAY' 241) #(927 'DISTANCE' 243) #(927 'DISTINCT' 244) #(927 'DIV' 245) #(927 'DIVIDE' 246) #(927 'DO' 247) #(927 'DUMMY' 248) #(927 'DUPLICATE' 249) #(927 'DUPLICATES' 250) #(927 'DURATION' 251) #(927 'DURING' 252) #(927 'DYNPRO' 253) #(927 'EARLY' 254) #(927 'EDIT' 255) #(927 'ELSE' 257) #(927 'ELSEIF' 258) #(927 'EMPTY' 259) #(927 'ENABLED' 260) #(927 'ENABLING' 261) #(927 'ENCODING' 262) #(927 'END' 263) #(927 'ENDAT' 270) #(927 'ENDCASE' 271) #(927 'ENDCATCH' 272) #(927 'ENDCHAIN' 273) #(927 'ENDCLASS' 274) #(927 'ENDDO' 275) #(927 'ENDENHANCEMENT' 276) #(927 'ENDEXEC' 277) #(927 'ENDFORM' 278) #(927 'ENDFUNCTION' 279) #(927 'ENDIAN' 280) #(927 'ENDIF' 281) #(927 'ENDING' 282) #(927 'ENDINTERFACE' 283) #(927 'ENDLOOP' 284) #(927 'ENDMETHOD' 285) #(927 'ENDMODULE' 286) #(927 'ENDON' 287) #(927 'ENDPROVIDE' 288) #(927 'ENDSELECT' 289) #(927 'ENDTRY' 290) #(927 'ENDWHILE' 291) #(927 'ENDWITH' 292) #(927 'ENGINEERING' 293) #(927 'ENHANCEMENT' 294) #(927 'ENHANCEMENTS' 297) #(927 'ENTITIES' 298) #(927 'ENTITY' 299) #(927 'ENTRIES' 300) #(927 'ENTRY' 301) #(927 'ENUM' 302) #(927 'ENVIRONMENT' 303) #(927 'EQ' 304) #(927 'EQUIV' 305) #(927 'ERRORS' 306) #(927 'ESCAPE' 307) #(927 'ESCAPING' 308) #(927 'EVENT' 309) #(927 'EVENTS' 310) #(927 'EXACT' 311) #(927 'EXCEPT' 312) #(927 'EXCEPTION' 313) #(927 'EXCEPTIONS' 315) #(927 'EXCLUDE' 316) #(927 'EXCLUDING' 317) #(927 'EXEC' 318) #(927 'EXECUTE' 319) #(927 'EXISTS' 320) #(927 'EXIT' 321) #(927 'EXPANDING' 323) #(927 'EXPIRATION' 324) #(927 'EXPLICIT' 325) #(927 'EXPONENT' 326) #(927 'EXPORT' 327) #(927 'EXPORTING' 328) #(927 'EXTENDED' 329) #(927 'EXTENSION' 330) #(927 'EXTRACT' 331) #(927 'FAIL' 332) #(927 'FAILED' 333) #(927 'FEATURES' 334) #(927 'FETCH' 335) #(927 'FIELD' 336) #(927 'FIELDS' 340) #(927 'FILE' 341) #(927 'FILL' 342) #(927 'FILTER' 343) #(927 'FILTERS' 344) #(927 'FINAL' 345) #(927 'FIND' 346) #(927 'FIRST' 347) #(927 'FLOOR' 881) #(927 'FLTP' 350) #(927 'FLUSH' 351) #(927 'FONT' 352) #(927 'FOR' 353) #(927 'FORM' 354) #(927 'FORMAT' 355) #(927 'FORWARD' 356) #(927 'FOUND' 357) #(927 'FRAME' 358) #(927 'FRAMES' 359) #(927 'FREE' 360) #(927 'FRIENDS' 361) #(927 'FROM' 362) #(927 'FULL' 363) #(927 'FUNCTION' 364) #(927 'FURTHER' 366) #(927 'GE' 367) #(927 'GENERATE' 368) #(927 'GET' 369) #(927 'GIVING' 370) #(927 'GLOBAL' 371) #(927 'GRAPH' 372) #(927 'GROUP' 373) #(927 'GROUPS' 374) #(927 'GT' 375) #(927 'HANDLE' 376) #(927 'HANDLER' 377) #(927 'HARMLESS' 378) #(927 'HASHED' 379) #(927 'HAVING' 380) #(927 'HDB' 381) #(927 'HEADER' 382) #(927 'HEADERS' 383) #(927 'HEADING' 384) #(927 'HIDE' 387) #(927 'HIERARCHY' 388) #(927 'HIGH' 389) #(927 'HINT' 390) #(927 'HOLD' 391) #(927 'HOTSPOT' 392) #(927 'ICON' 393) #(927 'ID' 394) #(927 'IDENTIFICATION' 395) #(927 'IDENTIFIER' 396) #(927 'IDS' 397) #(927 'IF' 398) #(927 'IGNORE' 399) #(927 'IGNORING' 400) #(927 'IMMEDIATELY' 401) #(927 'IMPLEMENTATION' 402) #(927 'IMPLEMENTED' 403) #(927 'IMPLICIT' 404) #(927 'IMPORT' 405) #(927 'IMPORTING' 406) #(927 'IN' 407) #(927 'INACTIVE' 408) #(927 'INCL' 409) #(927 'INCLUDE' 410) #(927 'INCLUDES' 411) #(927 'INCREMENT' 412) #(927 'INDEX' 413) #(927 'INFORMIX' 415) #(927 'INFOTYPES' 416) #(927 'INHERITING' 417) #(927 'INIT' 418) #(927 'INITIAL' 419) #(927 'INITIALIZATION' 420) #(927 'INNER' 421) #(927 'INPUT' 422) #(927 'INSERT' 423) #(927 'INSTANCE' 424) #(927 'INSTANCES' 425) #(927 'INT2' 426) #(927 'INT4' 427) #(927 'INT8' 428) #(927 'INTENSIFIED' 429) #(927 'INTERFACE' 430) #(927 'INTERFACES' 431) #(927 'INTERNAL' 432) #(927 'INTERVALS' 433) #(927 'INTO' 434) #(927 'INVERSE' 435) #(927 'IS' 437) #(927 'ISO' 438) #(927 'JOB' 439) #(927 'JOIN' 440) #(927 'KEEP' 441) #(927 'KEEPING' 442) #(927 'KERNEL' 443) #(927 'KEY' 444) #(927 'KEYS' 445) #(927 'KEYWORDS' 446) #(927 'KIND' 447) #(927 'LANGUAGE' 448) #(927 'LAST' 449) #(927 'LATE' 450) #(927 'LAYOUT' 451) #(927 'LE' 452) #(927 'LEADING' 453) #(927 'LEAVE' 454) #(927 'LEFT' 455) #(927 'LEFTPLUS' 457) #(927 'LEFTSPACE' 458) #(927 'LEGACY' 459) #(927 'LENGTH' 460) #(927 'LET' 461) #(927 'LEVEL' 462) #(927 'LEVELS' 463) #(927 'LIKE' 464) #(927 'LINE' 465) #(927 'LINEFEED' 469) #(927 'LINES' 470) #(927 'LINK' 471) #(927 'LIST' 472) #(927 'LISTBOX' 474) #(927 'LOAD' 475) #(927 'LOCAL' 477) #(927 'LOCALE' 478) #(927 'LOCK' 479) #(927 'LOCKS' 480) #(927 'LOGFILE' 482) #(927 'LOGICAL' 483) #(927 'LONG' 484) #(927 'LOOP' 485) #(927 'LOW' 486) #(927 'LOWER' 487) #(927 'LPI' 488) #(927 'LT' 489) #(927 'LTRIM' 882) #(927 'MAIN' 491) #(927 'MAPPED' 492) #(927 'MAPPING' 493) #(927 'MARGIN' 494) #(927 'MARK' 495) #(927 'MASK' 496) #(927 'MATCH' 497) #(927 'MATCHCODE' 498) #(927 'MAX' 499) #(927 'MAXIMUM' 500) #(927 'MEDIUM' 501) #(927 'MEMBERS' 502) #(927 'MEMORY' 503) #(927 'MESH' 504) #(927 'MESSAGE' 505) #(927 'MESSAGES' 507) #(927 'MESSAGING' 508) #(927 'METHOD' 509) #(927 'METHODS' 510) #(927 'MIN' 511) #(927 'MM/DD/YY' 512) #(927 'MM/DD/YYYY' 513) #(927 'MMDDYY' 514) #(927 'MOD' 515) #(927 'MODE' 516) #(927 'MODIF' 517) #(927 'MODIFIER' 518) #(927 'MODIFY' 519) #(927 'MODULE' 520) #(927 'MOVE' 521) #(927 'MSSQLNT' 523) #(927 'MULTIPLY' 524) #(927 'NA' 526) #(927 'NAME' 527) #(927 'NAMETAB' 528) #(927 'NATIVE' 529) #(927 'NE' 530) #(927 'NESTED' 531) #(927 'NESTING' 532) #(927 'NEW' 533) #(927 'NEXT' 537) #(927 'NO' 538) #(927 'NODES' 550) #(927 'NOT' 553) #(927 'NP' 554) #(927 'NS' 555) #(927 'NULL' 556) #(927 'NUMBER' 557) #(927 'NUMBERING' 558) #(927 'NUMC' 559) #(927 'OBJECT' 561) #(927 'OBJECTS' 562) #(927 'OBJMGR' 563) #(927 'OBLIGATORY' 564) #(927 'OCCURENCE' 565) #(927 'OCCURENCES' 566) #(927 'OCCURRENCE' 567) #(927 'OCCURRENCES' 568) #(927 'OCCURS' 569) #(927 'OF' 570) #(927 'OFF' 571) #(927 'OFFSET' 572) #(927 'ON' 573) #(927 'ONE' 574) #(927 'ONLY' 575) #(927 'OPEN' 576) #(927 'OPTION' 577) #(927 'OPTIONAL' 578) #(927 'OPTIONS' 579) #(927 'OR' 580) #(927 'ORACLE' 581) #(927 'ORDER' 582) #(927 'OTHERS' 583) #(927 'OUT' 584) #(927 'OUTER' 585) #(927 'OUTPUT' 586) #(927 'OVERFLOW' 588) #(927 'OVERLAY' 589) #(927 'PACK' 590) #(927 'PACKAGE' 591) #(927 'PAD' 592) #(927 'PADDING' 593) #(927 'PAGE' 594) #(927 'PAGES' 595) #(927 'PARAMETER' 596) #(927 'PARAMETERS' 598) #(927 'PART' 599) #(927 'PARTIALLY' 600) #(927 'PCRE' 601) #(927 'PERCENTAGE' 602) #(927 'PERFORM' 603) #(927 'PERFORMING' 604) #(927 'PERMISSIONS' 605) #(927 'PLACES' 607) #(927 'POOL' 608) #(927 'POSITION' 609) #(927 'POS_HIGH' 610) #(927 'POS_LOW' 611) #(927 'PRAGMAS' 612) #(927 'PRECHECK' 613) #(927 'PRECOMPILED' 614) #(927 'PREFERRED' 615) #(927 'PRESERVING' 616) #(927 'PRIMARY' 617) #(927 'PRINT' 618) #(927 'PRIVATE' 620) #(927 'PRIVILEGED' 621) #(927 'PROCEDURE' 622) #(927 'PROGRAM' 623) #(927 'PROPERTY' 624) #(927 'PROTECTED' 625) #(927 'PROVIDE' 626) #(927 'PUBLIC' 627) #(927 'PUSH' 628) #(927 'PUSHBUTTON' 629) #(927 'PUT' 630) #(927 'QUEUEONLY' 632) #(927 'QUICKINFO' 633) #(927 'RADIOBUTTON' 634) #(927 'RAISE' 635) #(927 'RAISING' 636) #(927 'RANGE' 637) #(927 'RANGES' 638) #(927 'RAW' 639) #(927 'READ' 640) #(927 'RECEIVE' 642) #(927 'RECEIVED' 643) #(927 'RECEIVER' 644) #(927 'RECEIVING' 645) #(927 'REDEFINITION' 646) #(927 'REDUCE' 647) #(927 'REF' 648) #(927 'REFERENCE' 649) #(927 'REFRESH' 650) #(927 'REGEX' 651) #(927 'REJECT' 652) #(927 'RELATING' 653) #(927 'RENAMING' 654) #(927 'REPLACE' 655) #(927 'REPLACEMENT' 656) #(927 'REPLACING' 657) #(927 'REPORT' 658) #(927 'REPORTED' 659) #(927 'REQUEST' 660) #(927 'REQUESTED' 661) #(927 'REQUIRED' 662) #(927 'RESERVE' 663) #(927 'RESET' 664) #(927 'RESOLUTION' 665) #(927 'RESPECTING' 666) #(927 'RESPONSE' 667) #(927 'RESPONSES' 668) #(927 'RESULT' 669) #(927 'RESULTS' 670) #(927 'RESUMABLE' 671) #(927 'RESUME' 672) #(927 'RETRY' 673) #(927 'RETURN' 674) #(927 'RETURNCODE' 675) #(927 'RETURNING' 676) #(927 'RIGHT' 677) #(927 'RIGHTPLUS' 679) #(927 'RIGHTSPACE' 680) #(927 'RISK' 681) #(927 'ROLLBACK' 682) #(927 'ROUND' 683) #(927 'ROWS' 684) #(927 'RTRIM' 883) #(927 'RUN' 685) #(927 'SAP' 686) #(927 'SAVE' 688) #(927 'SAVING' 689) #(927 'SCALE_PRESERVING' 690) #(927 'SCALE_PRESERVING_SCIENTIFIC' 691) #(927 'SCAN' 692) #(927 'SCIENTIFIC' 693) #(927 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(927 'SCREEN' 695) #(927 'SCROLL' 696) #(927 'SCROLLING' 698) #(927 'SEARCH' 699) #(927 'SECONDARY' 700) #(927 'SECONDS' 701) #(927 'SECTION' 702) #(927 'SELECT' 703) #(927 'SELECTION' 705) #(927 'SELECTIONS' 710) #(927 'SEND' 711) #(927 'SEPARATE' 712) #(927 'SEPARATED' 713) #(927 'SESSION' 714) #(927 'SET' 715) #(927 'SHARED' 716) #(927 'SHIFT' 717) #(927 'SHORT' 718) #(927 'SHORTDUMP' 719) #(927 'SIGN' 721) #(927 'SIGN_AS_POSTFIX' 722) #(927 'SIMPLE' 723) #(927 'SIMULATION' 724) #(927 'SINGLE' 725) #(927 'SIZE' 726) #(927 'SKIP' 727) #(927 'SKIPPING' 728) #(927 'SMART' 729) #(927 'SOME' 730) #(927 'SORT' 731) #(927 'SORTABLE' 732) #(927 'SORTED' 733) #(927 'SOURCE' 734) #(927 'SPACE' 735) #(927 'SPECIFIED' 736) #(927 'SPLIT' 737) #(927 'SPOOL' 738) #(927 'SPOTS' 739) #(927 'SQL' 740) #(927 'SQLSCRIPT' 741) #(927 'STABLE' 742) #(927 'STAMP' 743) #(927 'STANDARD' 744) #(927 'STARTING' 746) #(927 'STATE' 747) #(927 'STATEMENT' 748) #(927 'STATEMENTS' 749) #(927 'STATIC' 750) #(927 'STATICS' 751) #(927 'STATUSINFO' 752) #(927 'STEP' 753) #(927 'STOP' 755) #(927 'STRUCTURE' 756) #(927 'STRUCTURES' 757) #(927 'STYLE' 758) #(927 'SUBKEY' 759) #(927 'SUBMATCHES' 760) #(927 'SUBMIT' 761) #(927 'SUBROUTINE' 762) #(927 'SUBSCREEN' 763) #(927 'SUBSTRING' 764) #(927 'SUBTRACT' 765) #(927 'SUFFIX' 767) #(927 'SUM' 768) #(927 'SUMMARY' 769) #(927 'SUPPLIED' 770) #(927 'SUPPLY' 771) #(927 'SUPPRESS' 772) #(927 'SWITCH' 773) #(927 'SYBASE' 774) #(927 'SYMBOL' 775) #(927 'T000' 779) #(927 'TAB' 780) #(927 'TABBED' 781) #(927 'TABLE' 782) #(927 'TABLES' 783) #(927 'TABLEVIEW' 784) #(927 'TABSTRIP' 785) #(927 'TARGET' 786) #(927 'TASK' 787) #(927 'TASKS' 788) #(927 'TEST' 789) #(927 'TESTING' 792) #(927 'TEXT' 793) #(927 'TEXTPOOL' 794) #(927 'THEN' 795) #(927 'THROW' 796) #(927 'TIME' 797) #(927 'TIMES' 798) #(927 'TIMESTAMP' 799) #(927 'TIMEZONE' 800) #(927 'TITLE' 801) #(927 'TITLEBAR' 802) #(927 'TO' 803) #(927 'TOKENIZATION' 804) #(927 'TOKENS' 805) #(927 'TRAILING' 810) #(927 'TRANSACTION' 811) #(927 'TRANSFER' 812) #(927 'TRANSFORMATION' 813) #(927 'TRANSLATE' 814) #(927 'TRANSPORTING' 815) #(927 'TRMAC' 816) #(927 'TRUNCATION' 817) #(927 'TRY' 818) #(927 'TYPE' 819) #(927 'TYPES' 822) #(927 'ULINE' 823) #(927 'UNASSIGN' 824) #(927 'UNDER' 825) #(927 'UNICODE' 826) #(927 'UNION' 827) #(927 'UNIQUE' 828) #(927 'UNIT' 829) #(927 'UNIX' 830) #(927 'UNPACK' 831) #(927 'UNTIL' 832) #(927 'UNWIND' 833) #(927 'UP' 834) #(927 'UPDATE' 835) #(927 'UPPER' 836) #(927 'USER' 837) #(927 'USING' 839) #(927 'UTCLONG' 840) #(927 'UUID' 884) #(927 'VALID' 842) #(927 'VALIDATE' 843) #(927 'VALUE' 844) #(927 'VALUES' 846) #(927 'VARY' 847) #(927 'VARYING' 848) #(927 'VERSION' 849) #(927 'VIA' 850) #(927 'VISIBLE' 851) #(927 'WAIT' 852) #(927 'WHEN' 853) #(927 'WHERE' 854) #(927 'WHILE' 855) #(927 'WIDTH' 856) #(927 'WINDOW' 857) #(927 'WINDOWS' 858) #(927 'WITH' 859) #(927 'WITHOUT' 862) #(927 'WORD' 863) #(927 'WORK' 864) #(927 'WORKSPACE' 865) #(927 'WRITE' 866) #(927 'WRITER' 867) #(927 'XML' 868) #(927 'XSD' 869) #(927 'XSDBOOL' 870) #(927 'YES' 871) #(927 'YYMMDD' 872) #(927 'ZERO' 874) #(927 'ZONE' 875) #(908 '%_FINAL' 2) #(908 '%_HINTS' 3) #(908 '%_PREDEFINED' 4) #(908 '?TO' 31) #(908 'ABS' 876) #(908 'ABSTRACT' 33) #(908 'ACCEPT' 34) #(908 'ACCEPTING' 35) #(908 'ACCESS' 36) #(908 'ACCORDING' 37) #(908 'ACTION' 38) #(908 'ACTIVATION' 39) #(908 'ACTUAL' 40) #(908 'ADABAS' 41) #(908 'ADD' 42) #(908 'ADJACENT' 44) #(908 'ALIAS' 45) #(908 'ALIASES' 46) #(908 'ALIGN' 47) #(908 'ALL' 48) #(908 'ALLOCATE' 49) #(908 'ALPHA' 50) #(908 'AMDP' 51) #(908 'ANALYSIS' 52) #(908 'ANALYZER' 53) #(908 'AND' 54) #(908 'ANY' 55) #(908 'APPEND' 56) #(908 'APPENDING' 57) #(908 'APPLICATION' 58) #(908 'ARCHIVE' 59) #(908 'AREA' 60) #(908 'ARITHMETIC' 61) #(908 'AS' 62) #(908 'AS400' 63) #(908 'ASCENDING' 64) #(908 'ASSERT' 65) #(908 'ASSIGN' 66) #(908 'ASSIGNED' 67) #(908 'ASSIGNING' 68) #(908 'ASSOCIATION' 69) #(908 'ASYNCHRONOUS' 70) #(908 'AT' 71) #(908 'ATTRIBUTES' 72) #(908 'AUGMENTING' 73) #(908 'AUTHORITY' 74) #(908 'AUTHORIZATION' 76) #(908 'AUTO' 77) #(908 'AVG' 78) #(908 'BACK' 79) #(908 'BACKGROUND' 80) #(908 'BACKWARD' 81) #(908 'BADI' 82) #(908 'BASE' 83) #(908 'BEFORE' 84) #(908 'BEGIN' 85) #(908 'BEHAVIOR' 86) #(908 'BETWEEN' 87) #(908 'BINARY' 88) #(908 'BIT' 89) #(908 'BLANK' 94) #(908 'BLANKS' 95) #(908 'BLOCK' 96) #(908 'BLOCKS' 97) #(908 'BOOLC' 98) #(908 'BOUND' 99) #(908 'BOUNDARIES' 100) #(908 'BOUNDS' 101) #(908 'BOXED' 102) #(908 'BREAK' 103) #(908 'BUFFER' 105) #(908 'BY' 106) #(908 'BYPASSING' 107) #(908 'BYTE' 108) #(908 'CA' 116) #(908 'CALL' 117) #(908 'CALLING' 118) #(908 'CASE' 119) #(908 'CAST' 120) #(908 'CASTING' 121) #(908 'CATCH' 122) #(908 'CDS' 123) #(908 'CEIL' 877) #(908 'CENTER' 124) #(908 'CENTERED' 125) #(908 'CHAIN' 126) #(908 'CHANGE' 129) #(908 'CHANGING' 130) #(908 'CHANNELS' 131) #(908 'CHAR' 132) #(908 'CHARACTER' 134) #(908 'CHECK' 135) #(908 'CHECKBOX' 136) #(908 'CID' 137) #(908 'CIRCULAR' 138) #(908 'CLASS' 139) #(908 'CLEANUP' 143) #(908 'CLEAR' 144) #(908 'CLIENT' 145) #(908 'CLIENTS' 146) #(908 'CLOCK' 147) #(908 'CLONE' 148) #(908 'CLOSE' 149) #(908 'CN' 150) #(908 'CO' 151) #(908 'COALESCE' 878) #(908 'CODE' 152) #(908 'COLLECT' 153) #(908 'COLOR' 154) #(908 'COLUMN' 155) #(908 'COLUMNS' 156) #(908 'COL_BACKGROUND' 157) #(908 'COL_GROUP' 158) #(908 'COL_HEADING' 159) #(908 'COL_KEY' 160) #(908 'COL_NEGATIVE' 161) #(908 'COL_NORMAL' 162) #(908 'COL_POSITIVE' 163) #(908 'COL_TOTAL' 164) #(908 'COMMENT' 165) #(908 'COMMENTS' 166) #(908 'COMMIT' 167) #(908 'COMMON' 168) #(908 'COMMUNICATION' 169) #(908 'COMPARING' 170) #(908 'COMPONENT' 171) #(908 'COMPONENTS' 172) #(908 'COMPRESSION' 173) #(908 'COMPUTE' 174) #(908 'CONCAT' 879) #(908 'CONCATENATE' 175) #(908 'CONCAT_WITH_SPACE' 880) #(908 'COND' 176) #(908 'CONDENSE' 177) #(908 'CONDITION' 178) #(908 'CONNECTION' 179) #(908 'CONSTANT' 180) #(908 'CONSTANTS' 181) #(908 'CONTEXT' 182) #(908 'CONTEXTS' 183) #(908 'CONTINUE' 184) #(908 'CONTROL' 185) #(908 'CONTROLS' 186) #(908 'CONV' 187) #(908 'CONVERSION' 188) #(908 'CONVERT' 189) #(908 'COPIES' 190) #(908 'COPY' 191) #(908 'CORRESPONDING' 192) #(908 'COUNT' 193) #(908 'COUNTRY' 194) #(908 'COVER' 195) #(908 'CP' 196) #(908 'CPI' 197) #(908 'CREATE' 198) #(908 'CRITICAL' 199) #(908 'CS' 200) #(908 'CURRENCY' 201) #(908 'CURRENT' 202) #(908 'CURSOR' 203) #(908 'DANGEROUS' 205) #(908 'DATA' 206) #(908 'DATABASE' 207) #(908 'DATAINFO' 208) #(908 'DATASET' 209) #(908 'DATE' 210) #(908 'DAYLIGHT' 211) #(908 'DB2' 212) #(908 'DB6' 213) #(908 'DD/MM/YY' 214) #(908 'DD/MM/YYYY' 215) #(908 'DDL' 216) #(908 'DDMMYY' 217) #(908 'DEALLOCATE' 218) #(908 'DEC' 219) #(908 'DECIMALS' 220) #(908 'DECLARATIONS' 221) #(908 'DEEP' 222) #(908 'DEFAULT' 223) #(908 'DEFERRED' 224) #(908 'DEFINE' 225) #(908 'DEFINITION' 226) #(908 'DELETE' 227) #(908 'DELETING' 228) #(908 'DEMAND' 229) #(908 'DEPARTMENT' 230) #(908 'DESCENDING' 231) #(908 'DESCRIBE' 232) #(908 'DESTINATION' 233) #(908 'DETAIL' 234) #(908 'DETERMINATION' 235) #(908 'DETERMINE' 236) #(908 'DIALOG' 237) #(908 'DID' 238) #(908 'DIRECTORY' 239) #(908 'DISCARDING' 240) #(908 'DISPLAY' 241) #(908 'DISTANCE' 243) #(908 'DISTINCT' 244) #(908 'DIV' 245) #(908 'DIVIDE' 246) #(908 'DO' 247) #(908 'DUMMY' 248) #(908 'DUPLICATE' 249) #(908 'DUPLICATES' 250) #(908 'DURATION' 251) #(908 'DURING' 252) #(908 'DYNPRO' 253) #(908 'EARLY' 254) #(908 'EDIT' 255) #(908 'ELSE' 257) #(908 'ELSEIF' 258) #(908 'EMPTY' 259) #(908 'ENABLED' 260) #(908 'ENABLING' 261) #(908 'ENCODING' 262) #(908 'END' 263) #(908 'ENDAT' 270) #(908 'ENDCASE' 271) #(908 'ENDCATCH' 272) #(908 'ENDCHAIN' 273) #(908 'ENDCLASS' 274) #(908 'ENDDO' 275) #(908 'ENDENHANCEMENT' 276) #(908 'ENDEXEC' 277) #(908 'ENDFORM' 278) #(908 'ENDFUNCTION' 279) #(908 'ENDIAN' 280) #(908 'ENDIF' 281) #(908 'ENDING' 282) #(908 'ENDINTERFACE' 283) #(908 'ENDLOOP' 284) #(908 'ENDMETHOD' 285) #(908 'ENDMODULE' 286) #(908 'ENDON' 287) #(908 'ENDPROVIDE' 288) #(908 'ENDSELECT' 289) #(908 'ENDTRY' 290) #(908 'ENDWHILE' 291) #(908 'ENDWITH' 292) #(908 'ENGINEERING' 293) #(908 'ENHANCEMENT' 294) #(908 'ENHANCEMENTS' 297) #(908 'ENTITIES' 298) #(908 'ENTITY' 299) #(908 'ENTRIES' 300) #(908 'ENTRY' 301) #(908 'ENUM' 302) #(908 'ENVIRONMENT' 303) #(908 'EQ' 304) #(908 'EQUIV' 305) #(908 'ERRORS' 306) #(908 'ESCAPE' 307) #(908 'ESCAPING' 308) #(908 'EVENT' 309) #(908 'EVENTS' 310) #(908 'EXACT' 311) #(908 'EXCEPT' 312) #(908 'EXCEPTION' 313) #(908 'EXCEPTIONS' 315) #(908 'EXCLUDE' 316) #(908 'EXCLUDING' 317) #(908 'EXEC' 318) #(908 'EXECUTE' 319) #(908 'EXISTS' 320) #(908 'EXIT' 321) #(908 'EXPANDING' 323) #(908 'EXPIRATION' 324) #(908 'EXPLICIT' 325) #(908 'EXPONENT' 326) #(908 'EXPORT' 327) #(908 'EXPORTING' 328) #(908 'EXTENDED' 329) #(908 'EXTENSION' 330) #(908 'EXTRACT' 331) #(908 'FAIL' 332) #(908 'FAILED' 333) #(908 'FEATURES' 334) #(908 'FETCH' 335) #(908 'FIELD' 336) #(908 'FIELDS' 340) #(908 'FILE' 341) #(908 'FILL' 342) #(908 'FILTER' 343) #(908 'FILTERS' 344) #(908 'FINAL' 345) #(908 'FIND' 346) #(908 'FIRST' 347) #(908 'FLOOR' 881) #(908 'FLTP' 350) #(908 'FLUSH' 351) #(908 'FONT' 352) #(908 'FOR' 353) #(908 'FORM' 354) #(908 'FORMAT' 355) #(908 'FORWARD' 356) #(908 'FOUND' 357) #(908 'FRAME' 358) #(908 'FRAMES' 359) #(908 'FREE' 360) #(908 'FRIENDS' 361) #(908 'FROM' 362) #(908 'FULL' 363) #(908 'FUNCTION' 364) #(908 'FURTHER' 366) #(908 'GE' 367) #(908 'GENERATE' 368) #(908 'GET' 369) #(908 'GIVING' 370) #(908 'GLOBAL' 371) #(908 'GRAPH' 372) #(908 'GROUP' 373) #(908 'GROUPS' 374) #(908 'GT' 375) #(908 'HANDLE' 376) #(908 'HANDLER' 377) #(908 'HARMLESS' 378) #(908 'HASHED' 379) #(908 'HAVING' 380) #(908 'HDB' 381) #(908 'HEADER' 382) #(908 'HEADERS' 383) #(908 'HEADING' 384) #(908 'HIDE' 387) #(908 'HIERARCHY' 388) #(908 'HIGH' 389) #(908 'HINT' 390) #(908 'HOLD' 391) #(908 'HOTSPOT' 392) #(908 'ICON' 393) #(908 'ID' 394) #(908 'IDENTIFICATION' 395) #(908 'IDENTIFIER' 396) #(908 'IDS' 397) #(908 'IF' 398) #(908 'IGNORE' 399) #(908 'IGNORING' 400) #(908 'IMMEDIATELY' 401) #(908 'IMPLEMENTATION' 402) #(908 'IMPLEMENTED' 403) #(908 'IMPLICIT' 404) #(908 'IMPORT' 405) #(908 'IMPORTING' 406) #(908 'IN' 407) #(908 'INACTIVE' 408) #(908 'INCL' 409) #(908 'INCLUDE' 410) #(908 'INCLUDES' 411) #(908 'INCREMENT' 412) #(908 'INDEX' 413) #(908 'INFORMIX' 415) #(908 'INFOTYPES' 416) #(908 'INHERITING' 417) #(908 'INIT' 418) #(908 'INITIAL' 419) #(908 'INITIALIZATION' 420) #(908 'INNER' 421) #(908 'INPUT' 422) #(908 'INSERT' 423) #(908 'INSTANCE' 424) #(908 'INSTANCES' 425) #(908 'INT2' 426) #(908 'INT4' 427) #(908 'INT8' 428) #(908 'INTENSIFIED' 429) #(908 'INTERFACE' 430) #(908 'INTERFACES' 431) #(908 'INTERNAL' 432) #(908 'INTERVALS' 433) #(908 'INTO' 434) #(908 'INVERSE' 435) #(908 'IS' 437) #(908 'ISO' 438) #(908 'JOB' 439) #(908 'JOIN' 440) #(908 'KEEP' 441) #(908 'KEEPING' 442) #(908 'KERNEL' 443) #(908 'KEY' 444) #(908 'KEYS' 445) #(908 'KEYWORDS' 446) #(908 'KIND' 447) #(908 'LANGUAGE' 448) #(908 'LAST' 449) #(908 'LATE' 450) #(908 'LAYOUT' 451) #(908 'LE' 452) #(908 'LEADING' 453) #(908 'LEAVE' 454) #(908 'LEFT' 455) #(908 'LEFTPLUS' 457) #(908 'LEFTSPACE' 458) #(908 'LEGACY' 459) #(908 'LENGTH' 460) #(908 'LET' 461) #(908 'LEVEL' 462) #(908 'LEVELS' 463) #(908 'LIKE' 464) #(908 'LINE' 465) #(908 'LINEFEED' 469) #(908 'LINES' 470) #(908 'LINK' 471) #(908 'LIST' 472) #(908 'LISTBOX' 474) #(908 'LOAD' 475) #(908 'LOCAL' 477) #(908 'LOCALE' 478) #(908 'LOCK' 479) #(908 'LOCKS' 480) #(908 'LOGFILE' 482) #(908 'LOGICAL' 483) #(908 'LONG' 484) #(908 'LOOP' 485) #(908 'LOW' 486) #(908 'LOWER' 487) #(908 'LPI' 488) #(908 'LT' 489) #(908 'LTRIM' 882) #(908 'MAIN' 491) #(908 'MAPPED' 492) #(908 'MAPPING' 493) #(908 'MARGIN' 494) #(908 'MARK' 495) #(908 'MASK' 496) #(908 'MATCH' 497) #(908 'MATCHCODE' 498) #(908 'MAX' 499) #(908 'MAXIMUM' 500) #(908 'MEDIUM' 501) #(908 'MEMBERS' 502) #(908 'MEMORY' 503) #(908 'MESH' 504) #(908 'MESSAGE' 505) #(908 'MESSAGES' 507) #(908 'MESSAGING' 508) #(908 'METHOD' 509) #(908 'METHODS' 510) #(908 'MIN' 511) #(908 'MM/DD/YY' 512) #(908 'MM/DD/YYYY' 513) #(908 'MMDDYY' 514) #(908 'MOD' 515) #(908 'MODE' 516) #(908 'MODIF' 517) #(908 'MODIFIER' 518) #(908 'MODIFY' 519) #(908 'MODULE' 520) #(908 'MOVE' 521) #(908 'MSSQLNT' 523) #(908 'MULTIPLY' 524) #(908 'NA' 526) #(908 'NAME' 527) #(908 'NAMETAB' 528) #(908 'NATIVE' 529) #(908 'NE' 530) #(908 'NESTED' 531) #(908 'NESTING' 532) #(908 'NEW' 533) #(908 'NEXT' 537) #(908 'NO' 538) #(908 'NODES' 550) #(908 'NOT' 553) #(908 'NP' 554) #(908 'NS' 555) #(908 'NULL' 556) #(908 'NUMBER' 557) #(908 'NUMBERING' 558) #(908 'NUMC' 559) #(908 'OBJECT' 561) #(908 'OBJECTS' 562) #(908 'OBJMGR' 563) #(908 'OBLIGATORY' 564) #(908 'OCCURENCE' 565) #(908 'OCCURENCES' 566) #(908 'OCCURRENCE' 567) #(908 'OCCURRENCES' 568) #(908 'OCCURS' 569) #(908 'OF' 570) #(908 'OFF' 571) #(908 'OFFSET' 572) #(908 'ON' 573) #(908 'ONE' 574) #(908 'ONLY' 575) #(908 'OPEN' 576) #(908 'OPTION' 577) #(908 'OPTIONAL' 578) #(908 'OPTIONS' 579) #(908 'OR' 580) #(908 'ORACLE' 581) #(908 'ORDER' 582) #(908 'OTHERS' 583) #(908 'OUT' 584) #(908 'OUTER' 585) #(908 'OUTPUT' 586) #(908 'OVERFLOW' 588) #(908 'OVERLAY' 589) #(908 'PACK' 590) #(908 'PACKAGE' 591) #(908 'PAD' 592) #(908 'PADDING' 593) #(908 'PAGE' 594) #(908 'PAGES' 595) #(908 'PARAMETER' 596) #(908 'PARAMETERS' 598) #(908 'PART' 599) #(908 'PARTIALLY' 600) #(908 'PCRE' 601) #(908 'PERCENTAGE' 602) #(908 'PERFORM' 603) #(908 'PERFORMING' 604) #(908 'PERMISSIONS' 605) #(908 'PLACES' 607) #(908 'POOL' 608) #(908 'POSITION' 609) #(908 'POS_HIGH' 610) #(908 'POS_LOW' 611) #(908 'PRAGMAS' 612) #(908 'PRECHECK' 613) #(908 'PRECOMPILED' 614) #(908 'PREFERRED' 615) #(908 'PRESERVING' 616) #(908 'PRIMARY' 617) #(908 'PRINT' 618) #(908 'PRIVATE' 620) #(908 'PRIVILEGED' 621) #(908 'PROCEDURE' 622) #(908 'PROGRAM' 623) #(908 'PROPERTY' 624) #(908 'PROTECTED' 625) #(908 'PROVIDE' 626) #(908 'PUBLIC' 627) #(908 'PUSH' 628) #(908 'PUSHBUTTON' 629) #(908 'PUT' 630) #(908 'QUEUEONLY' 632) #(908 'QUICKINFO' 633) #(908 'RADIOBUTTON' 634) #(908 'RAISE' 635) #(908 'RAISING' 636) #(908 'RANGE' 637) #(908 'RANGES' 638) #(908 'RAW' 639) #(908 'READ' 640) #(908 'RECEIVE' 642) #(908 'RECEIVED' 643) #(908 'RECEIVER' 644) #(908 'RECEIVING' 645) #(908 'REDEFINITION' 646) #(908 'REDUCE' 647) #(908 'REF' 648) #(908 'REFERENCE' 649) #(908 'REFRESH' 650) #(908 'REGEX' 651) #(908 'REJECT' 652) #(908 'RELATING' 653) #(908 'RENAMING' 654) #(908 'REPLACE' 655) #(908 'REPLACEMENT' 656) #(908 'REPLACING' 657) #(908 'REPORT' 658) #(908 'REPORTED' 659) #(908 'REQUEST' 660) #(908 'REQUESTED' 661) #(908 'REQUIRED' 662) #(908 'RESERVE' 663) #(908 'RESET' 664) #(908 'RESOLUTION' 665) #(908 'RESPECTING' 666) #(908 'RESPONSE' 667) #(908 'RESPONSES' 668) #(908 'RESULT' 669) #(908 'RESULTS' 670) #(908 'RESUMABLE' 671) #(908 'RESUME' 672) #(908 'RETRY' 673) #(908 'RETURN' 674) #(908 'RETURNCODE' 675) #(908 'RETURNING' 676) #(908 'RIGHT' 677) #(908 'RIGHTPLUS' 679) #(908 'RIGHTSPACE' 680) #(908 'RISK' 681) #(908 'ROLLBACK' 682) #(908 'ROUND' 683) #(908 'ROWS' 684) #(908 'RTRIM' 883) #(908 'RUN' 685) #(908 'SAP' 686) #(908 'SAVE' 688) #(908 'SAVING' 689) #(908 'SCALE_PRESERVING' 690) #(908 'SCALE_PRESERVING_SCIENTIFIC' 691) #(908 'SCAN' 692) #(908 'SCIENTIFIC' 693) #(908 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(908 'SCREEN' 695) #(908 'SCROLL' 696) #(908 'SCROLLING' 698) #(908 'SEARCH' 699) #(908 'SECONDARY' 700) #(908 'SECONDS' 701) #(908 'SECTION' 702) #(908 'SELECT' 703) #(908 'SELECTION' 705) #(908 'SELECTIONS' 710) #(908 'SEND' 711) #(908 'SEPARATE' 712) #(908 'SEPARATED' 713) #(908 'SESSION' 714) #(908 'SET' 715) #(908 'SHARED' 716) #(908 'SHIFT' 717) #(908 'SHORT' 718) #(908 'SHORTDUMP' 719) #(908 'SIGN' 721) #(908 'SIGN_AS_POSTFIX' 722) #(908 'SIMPLE' 723) #(908 'SIMULATION' 724) #(908 'SINGLE' 725) #(908 'SIZE' 726) #(908 'SKIP' 727) #(908 'SKIPPING' 728) #(908 'SMART' 729) #(908 'SOME' 730) #(908 'SORT' 731) #(908 'SORTABLE' 732) #(908 'SORTED' 733) #(908 'SOURCE' 734) #(908 'SPACE' 735) #(908 'SPECIFIED' 736) #(908 'SPLIT' 737) #(908 'SPOOL' 738) #(908 'SPOTS' 739) #(908 'SQL' 740) #(908 'SQLSCRIPT' 741) #(908 'STABLE' 742) #(908 'STAMP' 743) #(908 'STANDARD' 744) #(908 'STARTING' 746) #(908 'STATE' 747) #(908 'STATEMENT' 748) #(908 'STATEMENTS' 749) #(908 'STATIC' 750) #(908 'STATICS' 751) #(908 'STATUSINFO' 752) #(908 'STEP' 753) #(908 'STOP' 755) #(908 'STRUCTURE' 756) #(908 'STRUCTURES' 757) #(908 'STYLE' 758) #(908 'SUBKEY' 759) #(908 'SUBMATCHES' 760) #(908 'SUBMIT' 761) #(908 'SUBROUTINE' 762) #(908 'SUBSCREEN' 763) #(908 'SUBSTRING' 764) #(908 'SUBTRACT' 765) #(908 'SUFFIX' 767) #(908 'SUM' 768) #(908 'SUMMARY' 769) #(908 'SUPPLIED' 770) #(908 'SUPPLY' 771) #(908 'SUPPRESS' 772) #(908 'SWITCH' 773) #(908 'SYBASE' 774) #(908 'SYMBOL' 775) #(908 'T000' 779) #(908 'TAB' 780) #(908 'TABBED' 781) #(908 'TABLE' 782) #(908 'TABLES' 783) #(908 'TABLEVIEW' 784) #(908 'TABSTRIP' 785) #(908 'TARGET' 786) #(908 'TASK' 787) #(908 'TASKS' 788) #(908 'TEST' 789) #(908 'TESTING' 792) #(908 'TEXT' 793) #(908 'TEXTPOOL' 794) #(908 'THEN' 795) #(908 'THROW' 796) #(908 'TIME' 797) #(908 'TIMES' 798) #(908 'TIMESTAMP' 799) #(908 'TIMEZONE' 800) #(908 'TITLE' 801) #(908 'TITLEBAR' 802) #(908 'TO' 803) #(908 'TOKENIZATION' 804) #(908 'TOKENS' 805) #(908 'TRAILING' 810) #(908 'TRANSACTION' 811) #(908 'TRANSFER' 812) #(908 'TRANSFORMATION' 813) #(908 'TRANSLATE' 814) #(908 'TRANSPORTING' 815) #(908 'TRMAC' 816) #(908 'TRUNCATION' 817) #(908 'TRY' 818) #(908 'TYPE' 819) #(908 'TYPES' 822) #(908 'ULINE' 823) #(908 'UNASSIGN' 824) #(908 'UNDER' 825) #(908 'UNICODE' 826) #(908 'UNION' 827) #(908 'UNIQUE' 828) #(908 'UNIT' 829) #(908 'UNIX' 830) #(908 'UNPACK' 831) #(908 'UNTIL' 832) #(908 'UNWIND' 833) #(908 'UP' 834) #(908 'UPDATE' 835) #(908 'UPPER' 836) #(908 'USER' 837) #(908 'USING' 839) #(908 'UTCLONG' 840) #(908 'UUID' 884) #(908 'VALID' 842) #(908 'VALIDATE' 843) #(908 'VALUE' 844) #(908 'VALUES' 846) #(908 'VARY' 847) #(908 'VARYING' 848) #(908 'VERSION' 849) #(908 'VIA' 850) #(908 'VISIBLE' 851) #(908 'WAIT' 852) #(908 'WHEN' 853) #(908 'WHERE' 854) #(908 'WHILE' 855) #(908 'WIDTH' 856) #(908 'WINDOW' 857) #(908 'WINDOWS' 858) #(908 'WITH' 859) #(908 'WITHOUT' 862) #(908 'WORD' 863) #(908 'WORK' 864) #(908 'WORKSPACE' 865) #(908 'WRITE' 866) #(908 'WRITER' 867) #(908 'XML' 868) #(908 'XSD' 869) #(908 'XSDBOOL' 870) #(908 'YES' 871) #(908 'YYMMDD' 872) #(908 'ZERO' 874) #(908 'ZONE' 875) #(947 '%_FINAL' 2) #(947 '%_HINTS' 3) #(947 '%_PREDEFINED' 4) #(947 'ABS' 876) #(947 'ABSTRACT' 33) #(947 'ACCEPT' 34) #(947 'ACCEPTING' 35) #(947 'ACCESS' 36) #(947 'ACCORDING' 37) #(947 'ACTION' 38) #(947 'ACTIVATION' 39) #(947 'ACTUAL' 40) #(947 'ADABAS' 41) #(947 'ADD' 42) #(947 'ADJACENT' 44) #(947 'ALIAS' 45) #(947 'ALIASES' 46) #(947 'ALIGN' 47) #(947 'ALL' 48) #(947 'ALLOCATE' 49) #(947 'ALPHA' 50) #(947 'AMDP' 51) #(947 'ANALYSIS' 52) #(947 'ANALYZER' 53) #(947 'AND' 54) #(947 'ANY' 55) #(947 'APPEND' 56) #(947 'APPENDING' 57) #(947 'APPLICATION' 58) #(947 'ARCHIVE' 59) #(947 'AREA' 60) #(947 'ARITHMETIC' 61) #(947 'AS' 62) #(947 'AS400' 63) #(947 'ASCENDING' 64) #(947 'ASSERT' 65) #(947 'ASSIGN' 66) #(947 'ASSIGNED' 67) #(947 'ASSIGNING' 68) #(947 'ASSOCIATION' 69) #(947 'ASYNCHRONOUS' 70) #(947 'AT' 71) #(947 'ATTRIBUTES' 72) #(947 'AUGMENTING' 73) #(947 'AUTHORITY' 74) #(947 'AUTHORIZATION' 76) #(947 'AUTO' 77) #(947 'AVG' 78) #(947 'BACK' 79) #(947 'BACKGROUND' 80) #(947 'BACKWARD' 81) #(947 'BADI' 82) #(947 'BASE' 83) #(947 'BEFORE' 84) #(947 'BEGIN' 85) #(947 'BEHAVIOR' 86) #(947 'BETWEEN' 87) #(947 'BINARY' 88) #(947 'BIT' 89) #(947 'BLANK' 94) #(947 'BLANKS' 95) #(947 'BLOCK' 96) #(947 'BLOCKS' 97) #(947 'BOOLC' 98) #(947 'BOUND' 99) #(947 'BOUNDARIES' 100) #(947 'BOUNDS' 101) #(947 'BOXED' 102) #(947 'BREAK' 103) #(947 'BUFFER' 105) #(947 'BY' 106) #(947 'BYPASSING' 107) #(947 'BYTE' 108) #(947 'CA' 116) #(947 'CALL' 117) #(947 'CALLING' 118) #(947 'CASE' 119) #(947 'CAST' 120) #(947 'CASTING' 121) #(947 'CATCH' 122) #(947 'CDS' 123) #(947 'CEIL' 877) #(947 'CENTER' 124) #(947 'CENTERED' 125) #(947 'CHAIN' 126) #(947 'CHANGE' 129) #(947 'CHANGING' 130) #(947 'CHANNELS' 131) #(947 'CHAR' 132) #(947 'CHARACTER' 134) #(947 'CHECK' 135) #(947 'CHECKBOX' 136) #(947 'CID' 137) #(947 'CIRCULAR' 138) #(947 'CLASS' 139) #(947 'CLEANUP' 143) #(947 'CLEAR' 144) #(947 'CLIENT' 145) #(947 'CLIENTS' 146) #(947 'CLOCK' 147) #(947 'CLONE' 148) #(947 'CLOSE' 149) #(947 'CN' 150) #(947 'CO' 151) #(947 'COALESCE' 878) #(947 'CODE' 152) #(947 'COLLECT' 153) #(947 'COLOR' 154) #(947 'COLUMN' 155) #(947 'COLUMNS' 156) #(947 'COL_BACKGROUND' 157) #(947 'COL_GROUP' 158) #(947 'COL_HEADING' 159) #(947 'COL_KEY' 160) #(947 'COL_NEGATIVE' 161) #(947 'COL_NORMAL' 162) #(947 'COL_POSITIVE' 163) #(947 'COL_TOTAL' 164) #(947 'COMMENT' 165) #(947 'COMMENTS' 166) #(947 'COMMIT' 167) #(947 'COMMON' 168) #(947 'COMMUNICATION' 169) #(947 'COMPARING' 170) #(947 'COMPONENT' 171) #(947 'COMPONENTS' 172) #(947 'COMPRESSION' 173) #(947 'COMPUTE' 174) #(947 'CONCAT' 879) #(947 'CONCATENATE' 175) #(947 'CONCAT_WITH_SPACE' 880) #(947 'COND' 176) #(947 'CONDENSE' 177) #(947 'CONDITION' 178) #(947 'CONNECTION' 179) #(947 'CONSTANT' 180) #(947 'CONSTANTS' 181) #(947 'CONTEXT' 182) #(947 'CONTEXTS' 183) #(947 'CONTINUE' 184) #(947 'CONTROL' 185) #(947 'CONTROLS' 186) #(947 'CONV' 187) #(947 'CONVERSION' 188) #(947 'CONVERT' 189) #(947 'COPIES' 190) #(947 'COPY' 191) #(947 'CORRESPONDING' 192) #(947 'COUNT' 193) #(947 'COUNTRY' 194) #(947 'COVER' 195) #(947 'CP' 196) #(947 'CPI' 197) #(947 'CREATE' 198) #(947 'CRITICAL' 199) #(947 'CS' 200) #(947 'CURRENCY' 201) #(947 'CURRENT' 202) #(947 'CURSOR' 203) #(947 'DANGEROUS' 205) #(947 'DATA' 206) #(947 'DATABASE' 207) #(947 'DATAINFO' 208) #(947 'DATASET' 209) #(947 'DATE' 210) #(947 'DAYLIGHT' 211) #(947 'DB2' 212) #(947 'DB6' 213) #(947 'DDL' 216) #(947 'DDMMYY' 217) #(947 'DEALLOCATE' 218) #(947 'DEC' 219) #(947 'DECIMALS' 220) #(947 'DECLARATIONS' 221) #(947 'DEEP' 222) #(947 'DEFAULT' 223) #(947 'DEFERRED' 224) #(947 'DEFINE' 225) #(947 'DEFINITION' 226) #(947 'DELETE' 227) #(947 'DELETING' 228) #(947 'DEMAND' 229) #(947 'DEPARTMENT' 230) #(947 'DESCENDING' 231) #(947 'DESCRIBE' 232) #(947 'DESTINATION' 233) #(947 'DETAIL' 234) #(947 'DETERMINATION' 235) #(947 'DETERMINE' 236) #(947 'DIALOG' 237) #(947 'DID' 238) #(947 'DIRECTORY' 239) #(947 'DISCARDING' 240) #(947 'DISPLAY' 241) #(947 'DISTANCE' 243) #(947 'DISTINCT' 244) #(947 'DIV' 245) #(947 'DIVIDE' 246) #(947 'DO' 247) #(947 'DUMMY' 248) #(947 'DUPLICATE' 249) #(947 'DUPLICATES' 250) #(947 'DURATION' 251) #(947 'DURING' 252) #(947 'DYNPRO' 253) #(947 'EARLY' 254) #(947 'EDIT' 255) #(947 'ELSE' 257) #(947 'ELSEIF' 258) #(947 'EMPTY' 259) #(947 'ENABLED' 260) #(947 'ENABLING' 261) #(947 'ENCODING' 262) #(947 'END' 263) #(947 'ENDAT' 270) #(947 'ENDCASE' 271) #(947 'ENDCATCH' 272) #(947 'ENDCHAIN' 273) #(947 'ENDCLASS' 274) #(947 'ENDDO' 275) #(947 'ENDENHANCEMENT' 276) #(947 'ENDEXEC' 277) #(947 'ENDFORM' 278) #(947 'ENDFUNCTION' 279) #(947 'ENDIAN' 280) #(947 'ENDIF' 281) #(947 'ENDING' 282) #(947 'ENDINTERFACE' 283) #(947 'ENDLOOP' 284) #(947 'ENDMETHOD' 285) #(947 'ENDMODULE' 286) #(947 'ENDON' 287) #(947 'ENDPROVIDE' 288) #(947 'ENDSELECT' 289) #(947 'ENDTRY' 290) #(947 'ENDWHILE' 291) #(947 'ENDWITH' 292) #(947 'ENGINEERING' 293) #(947 'ENHANCEMENT' 294) #(947 'ENHANCEMENTS' 297) #(947 'ENTITIES' 298) #(947 'ENTITY' 299) #(947 'ENTRIES' 300) #(947 'ENTRY' 301) #(947 'ENUM' 302) #(947 'ENVIRONMENT' 303) #(947 'EQ' 304) #(947 'EQUIV' 305) #(947 'ERRORS' 306) #(947 'ESCAPE' 307) #(947 'ESCAPING' 308) #(947 'EVENT' 309) #(947 'EVENTS' 310) #(947 'EXACT' 311) #(947 'EXCEPT' 312) #(947 'EXCEPTION' 313) #(947 'EXCEPTIONS' 315) #(947 'EXCLUDE' 316) #(947 'EXCLUDING' 317) #(947 'EXEC' 318) #(947 'EXECUTE' 319) #(947 'EXISTS' 320) #(947 'EXIT' 321) #(947 'EXPANDING' 323) #(947 'EXPIRATION' 324) #(947 'EXPLICIT' 325) #(947 'EXPONENT' 326) #(947 'EXPORT' 327) #(947 'EXPORTING' 328) #(947 'EXTENDED' 329) #(947 'EXTENSION' 330) #(947 'EXTRACT' 331) #(947 'FAIL' 332) #(947 'FAILED' 333) #(947 'FEATURES' 334) #(947 'FETCH' 335) #(947 'FIELD' 336) #(947 'FIELDS' 340) #(947 'FILE' 341) #(947 'FILL' 342) #(947 'FILTER' 343) #(947 'FILTERS' 344) #(947 'FINAL' 345) #(947 'FIND' 346) #(947 'FIRST' 347) #(947 'FLOOR' 881) #(947 'FLTP' 350) #(947 'FLUSH' 351) #(947 'FONT' 352) #(947 'FOR' 353) #(947 'FORM' 354) #(947 'FORMAT' 355) #(947 'FORWARD' 356) #(947 'FOUND' 357) #(947 'FRAME' 358) #(947 'FRAMES' 359) #(947 'FREE' 360) #(947 'FRIENDS' 361) #(947 'FROM' 362) #(947 'FULL' 363) #(947 'FUNCTION' 364) #(947 'FURTHER' 366) #(947 'GE' 367) #(947 'GENERATE' 368) #(947 'GET' 369) #(947 'GIVING' 370) #(947 'GLOBAL' 371) #(947 'GRAPH' 372) #(947 'GROUP' 373) #(947 'GROUPS' 374) #(947 'GT' 375) #(947 'HANDLE' 376) #(947 'HANDLER' 377) #(947 'HARMLESS' 378) #(947 'HASHED' 379) #(947 'HAVING' 380) #(947 'HDB' 381) #(947 'HEADER' 382) #(947 'HEADERS' 383) #(947 'HEADING' 384) #(947 'HIDE' 387) #(947 'HIERARCHY' 388) #(947 'HIGH' 389) #(947 'HINT' 390) #(947 'HOLD' 391) #(947 'HOTSPOT' 392) #(947 'ICON' 393) #(947 'ID' 394) #(947 'IDENTIFICATION' 395) #(947 'IDENTIFIER' 396) #(947 'IDS' 397) #(947 'IF' 398) #(947 'IGNORE' 399) #(947 'IGNORING' 400) #(947 'IMMEDIATELY' 401) #(947 'IMPLEMENTATION' 402) #(947 'IMPLEMENTED' 403) #(947 'IMPLICIT' 404) #(947 'IMPORT' 405) #(947 'IMPORTING' 406) #(947 'IN' 407) #(947 'INACTIVE' 408) #(947 'INCL' 409) #(947 'INCLUDE' 410) #(947 'INCLUDES' 411) #(947 'INCREMENT' 412) #(947 'INDEX' 413) #(947 'INFORMIX' 415) #(947 'INFOTYPES' 416) #(947 'INHERITING' 417) #(947 'INIT' 418) #(947 'INITIAL' 419) #(947 'INITIALIZATION' 420) #(947 'INNER' 421) #(947 'INPUT' 422) #(947 'INSERT' 423) #(947 'INSTANCE' 424) #(947 'INSTANCES' 425) #(947 'INT2' 426) #(947 'INT4' 427) #(947 'INT8' 428) #(947 'INTENSIFIED' 429) #(947 'INTERFACE' 430) #(947 'INTERFACES' 431) #(947 'INTERNAL' 432) #(947 'INTERVALS' 433) #(947 'INTO' 434) #(947 'INVERSE' 435) #(947 'IS' 437) #(947 'ISO' 438) #(947 'JOB' 439) #(947 'JOIN' 440) #(947 'KEEP' 441) #(947 'KEEPING' 442) #(947 'KERNEL' 443) #(947 'KEY' 444) #(947 'KEYS' 445) #(947 'KEYWORDS' 446) #(947 'KIND' 447) #(947 'LANGUAGE' 448) #(947 'LAST' 449) #(947 'LATE' 450) #(947 'LAYOUT' 451) #(947 'LE' 452) #(947 'LEADING' 453) #(947 'LEAVE' 454) #(947 'LEFT' 455) #(947 'LEFTPLUS' 457) #(947 'LEFTSPACE' 458) #(947 'LEGACY' 459) #(947 'LENGTH' 460) #(947 'LET' 461) #(947 'LEVEL' 462) #(947 'LEVELS' 463) #(947 'LIKE' 464) #(947 'LINE' 465) #(947 'LINEFEED' 469) #(947 'LINES' 470) #(947 'LINK' 471) #(947 'LIST' 472) #(947 'LISTBOX' 474) #(947 'LOAD' 475) #(947 'LOCAL' 477) #(947 'LOCALE' 478) #(947 'LOCK' 479) #(947 'LOCKS' 480) #(947 'LOGFILE' 482) #(947 'LOGICAL' 483) #(947 'LONG' 484) #(947 'LOOP' 485) #(947 'LOW' 486) #(947 'LOWER' 487) #(947 'LPI' 488) #(947 'LT' 489) #(947 'LTRIM' 882) #(947 'MAIN' 491) #(947 'MAPPED' 492) #(947 'MAPPING' 493) #(947 'MARGIN' 494) #(947 'MARK' 495) #(947 'MASK' 496) #(947 'MATCH' 497) #(947 'MATCHCODE' 498) #(947 'MAX' 499) #(947 'MAXIMUM' 500) #(947 'MEDIUM' 501) #(947 'MEMBERS' 502) #(947 'MEMORY' 503) #(947 'MESH' 504) #(947 'MESSAGE' 505) #(947 'MESSAGES' 507) #(947 'MESSAGING' 508) #(947 'METHOD' 509) #(947 'METHODS' 510) #(947 'MIN' 511) #(947 'MMDDYY' 514) #(947 'MOD' 515) #(947 'MODE' 516) #(947 'MODIF' 517) #(947 'MODIFIER' 518) #(947 'MODIFY' 519) #(947 'MODULE' 520) #(947 'MOVE' 521) #(947 'MSSQLNT' 523) #(947 'MULTIPLY' 524) #(947 'NA' 526) #(947 'NAME' 527) #(947 'NAMETAB' 528) #(947 'NATIVE' 529) #(947 'NE' 530) #(947 'NESTED' 531) #(947 'NESTING' 532) #(947 'NEW' 533) #(947 'NEXT' 537) #(947 'NO' 538) #(947 'NODES' 550) #(947 'NOT' 553) #(947 'NP' 554) #(947 'NS' 555) #(947 'NULL' 556) #(947 'NUMBER' 557) #(947 'NUMBERING' 558) #(947 'NUMC' 559) #(947 'OBJECT' 561) #(947 'OBJECTS' 562) #(947 'OBJMGR' 563) #(947 'OBLIGATORY' 564) #(947 'OCCURENCE' 565) #(947 'OCCURENCES' 566) #(947 'OCCURRENCE' 567) #(947 'OCCURRENCES' 568) #(947 'OCCURS' 569) #(947 'OF' 570) #(947 'OFF' 571) #(947 'OFFSET' 572) #(947 'ON' 573) #(947 'ONE' 574) #(947 'ONLY' 575) #(947 'OPEN' 576) #(947 'OPTION' 577) #(947 'OPTIONAL' 578) #(947 'OPTIONS' 579) #(947 'OR' 580) #(947 'ORACLE' 581) #(947 'ORDER' 582) #(947 'OTHERS' 583) #(947 'OUT' 584) #(947 'OUTER' 585) #(947 'OUTPUT' 586) #(947 'OVERFLOW' 588) #(947 'OVERLAY' 589) #(947 'PACK' 590) #(947 'PACKAGE' 591) #(947 'PAD' 592) #(947 'PADDING' 593) #(947 'PAGE' 594) #(947 'PAGES' 595) #(947 'PARAMETER' 596) #(947 'PARAMETERS' 598) #(947 'PART' 599) #(947 'PARTIALLY' 600) #(947 'PCRE' 601) #(947 'PERCENTAGE' 602) #(947 'PERFORM' 603) #(947 'PERFORMING' 604) #(947 'PERMISSIONS' 605) #(947 'PLACES' 607) #(947 'POOL' 608) #(947 'POSITION' 609) #(947 'POS_HIGH' 610) #(947 'POS_LOW' 611) #(947 'PRAGMAS' 612) #(947 'PRECHECK' 613) #(947 'PRECOMPILED' 614) #(947 'PREFERRED' 615) #(947 'PRESERVING' 616) #(947 'PRIMARY' 617) #(947 'PRINT' 618) #(947 'PRIVATE' 620) #(947 'PRIVILEGED' 621) #(947 'PROCEDURE' 622) #(947 'PROGRAM' 623) #(947 'PROPERTY' 624) #(947 'PROTECTED' 625) #(947 'PROVIDE' 626) #(947 'PUBLIC' 627) #(947 'PUSH' 628) #(947 'PUSHBUTTON' 629) #(947 'PUT' 630) #(947 'QUEUEONLY' 632) #(947 'QUICKINFO' 633) #(947 'RADIOBUTTON' 634) #(947 'RAISE' 635) #(947 'RAISING' 636) #(947 'RANGE' 637) #(947 'RANGES' 638) #(947 'RAW' 639) #(947 'READ' 640) #(947 'RECEIVE' 642) #(947 'RECEIVED' 643) #(947 'RECEIVER' 644) #(947 'RECEIVING' 645) #(947 'REDEFINITION' 646) #(947 'REDUCE' 647) #(947 'REF' 648) #(947 'REFERENCE' 649) #(947 'REFRESH' 650) #(947 'REGEX' 651) #(947 'REJECT' 652) #(947 'RELATING' 653) #(947 'RENAMING' 654) #(947 'REPLACE' 655) #(947 'REPLACEMENT' 656) #(947 'REPLACING' 657) #(947 'REPORT' 658) #(947 'REPORTED' 659) #(947 'REQUEST' 660) #(947 'REQUESTED' 661) #(947 'REQUIRED' 662) #(947 'RESERVE' 663) #(947 'RESET' 664) #(947 'RESOLUTION' 665) #(947 'RESPECTING' 666) #(947 'RESPONSE' 667) #(947 'RESPONSES' 668) #(947 'RESULT' 669) #(947 'RESULTS' 670) #(947 'RESUMABLE' 671) #(947 'RESUME' 672) #(947 'RETRY' 673) #(947 'RETURN' 674) #(947 'RETURNCODE' 675) #(947 'RETURNING' 676) #(947 'RIGHT' 677) #(947 'RIGHTPLUS' 679) #(947 'RIGHTSPACE' 680) #(947 'RISK' 681) #(947 'ROLLBACK' 682) #(947 'ROUND' 683) #(947 'ROWS' 684) #(947 'RTRIM' 883) #(947 'RUN' 685) #(947 'SAP' 686) #(947 'SAVE' 688) #(947 'SAVING' 689) #(947 'SCALE_PRESERVING' 690) #(947 'SCALE_PRESERVING_SCIENTIFIC' 691) #(947 'SCAN' 692) #(947 'SCIENTIFIC' 693) #(947 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(947 'SCREEN' 695) #(947 'SCROLL' 696) #(947 'SCROLLING' 698) #(947 'SEARCH' 699) #(947 'SECONDARY' 700) #(947 'SECONDS' 701) #(947 'SECTION' 702) #(947 'SELECT' 703) #(947 'SELECTION' 705) #(947 'SELECTIONS' 710) #(947 'SEND' 711) #(947 'SEPARATE' 712) #(947 'SEPARATED' 713) #(947 'SESSION' 714) #(947 'SET' 715) #(947 'SHARED' 716) #(947 'SHIFT' 717) #(947 'SHORT' 718) #(947 'SHORTDUMP' 719) #(947 'SIGN' 721) #(947 'SIGN_AS_POSTFIX' 722) #(947 'SIMPLE' 723) #(947 'SIMULATION' 724) #(947 'SINGLE' 725) #(947 'SIZE' 726) #(947 'SKIP' 727) #(947 'SKIPPING' 728) #(947 'SMART' 729) #(947 'SOME' 730) #(947 'SORT' 731) #(947 'SORTABLE' 732) #(947 'SORTED' 733) #(947 'SOURCE' 734) #(947 'SPACE' 735) #(947 'SPECIFIED' 736) #(947 'SPLIT' 737) #(947 'SPOOL' 738) #(947 'SPOTS' 739) #(947 'SQL' 740) #(947 'SQLSCRIPT' 741) #(947 'STABLE' 742) #(947 'STAMP' 743) #(947 'STANDARD' 744) #(947 'STARTING' 746) #(947 'STATE' 747) #(947 'STATEMENT' 748) #(947 'STATEMENTS' 749) #(947 'STATIC' 750) #(947 'STATICS' 751) #(947 'STATUSINFO' 752) #(947 'STEP' 753) #(947 'STOP' 755) #(947 'STRUCTURE' 756) #(947 'STRUCTURES' 757) #(947 'STYLE' 758) #(947 'SUBKEY' 759) #(947 'SUBMATCHES' 760) #(947 'SUBMIT' 761) #(947 'SUBROUTINE' 762) #(947 'SUBSCREEN' 763) #(947 'SUBSTRING' 764) #(947 'SUBTRACT' 765) #(947 'SUFFIX' 767) #(947 'SUM' 768) #(947 'SUMMARY' 769) #(947 'SUPPLIED' 770) #(947 'SUPPLY' 771) #(947 'SUPPRESS' 772) #(947 'SWITCH' 773) #(947 'SYBASE' 774) #(947 'SYMBOL' 775) #(947 'T000' 779) #(947 'TAB' 780) #(947 'TABBED' 781) #(947 'TABLE' 782) #(947 'TABLES' 783) #(947 'TABLEVIEW' 784) #(947 'TABSTRIP' 785) #(947 'TARGET' 786) #(947 'TASK' 787) #(947 'TASKS' 788) #(947 'TEST' 789) #(947 'TESTING' 792) #(947 'TEXT' 793) #(947 'TEXTPOOL' 794) #(947 'THEN' 795) #(947 'THROW' 796) #(947 'TIME' 797) #(947 'TIMES' 798) #(947 'TIMESTAMP' 799) #(947 'TIMEZONE' 800) #(947 'TITLE' 801) #(947 'TITLEBAR' 802) #(947 'TO' 803) #(947 'TOKENIZATION' 804) #(947 'TOKENS' 805) #(947 'TRAILING' 810) #(947 'TRANSACTION' 811) #(947 'TRANSFER' 812) #(947 'TRANSFORMATION' 813) #(947 'TRANSLATE' 814) #(947 'TRANSPORTING' 815) #(947 'TRMAC' 816) #(947 'TRUNCATION' 817) #(947 'TRY' 818) #(947 'TYPE' 819) #(947 'TYPES' 822) #(947 'ULINE' 823) #(947 'UNASSIGN' 824) #(947 'UNDER' 825) #(947 'UNICODE' 826) #(947 'UNION' 827) #(947 'UNIQUE' 828) #(947 'UNIT' 829) #(947 'UNIX' 830) #(947 'UNPACK' 831) #(947 'UNTIL' 832) #(947 'UNWIND' 833) #(947 'UP' 834) #(947 'UPDATE' 835) #(947 'UPPER' 836) #(947 'USER' 837) #(947 'USING' 839) #(947 'UTCLONG' 840) #(947 'UUID' 884) #(947 'VALID' 842) #(947 'VALIDATE' 843) #(947 'VALUE' 844) #(947 'VALUES' 846) #(947 'VARY' 847) #(947 'VARYING' 848) #(947 'VERSION' 849) #(947 'VIA' 850) #(947 'VISIBLE' 851) #(947 'WAIT' 852) #(947 'WHEN' 853) #(947 'WHERE' 854) #(947 'WHILE' 855) #(947 'WIDTH' 856) #(947 'WINDOW' 857) #(947 'WINDOWS' 858) #(947 'WITH' 859) #(947 'WITHOUT' 862) #(947 'WORD' 863) #(947 'WORK' 864) #(947 'WORKSPACE' 865) #(947 'WRITE' 866) #(947 'WRITER' 867) #(947 'XML' 868) #(947 'XSD' 869) #(947 'XSDBOOL' 870) #(947 'YES' 871) #(947 'YYMMDD' 872) #(947 'ZERO' 874) #(947 'ZONE' 875) #(889 'ABS' 876) #(889 'ABSTRACT' 33) #(889 'ACCEPT' 34) #(889 'ACCEPTING' 35) #(889 'ACCESS' 36) #(889 'ACCORDING' 37) #(889 'ACTION' 38) #(889 'ACTIVATION' 39) #(889 'ACTUAL' 40) #(889 'ADABAS' 41) #(889 'ADD' 42) #(889 'ADJACENT' 44) #(889 'ALIAS' 45) #(889 'ALIASES' 46) #(889 'ALIGN' 47) #(889 'ALL' 48) #(889 'ALLOCATE' 49) #(889 'ALPHA' 50) #(889 'AMDP' 51) #(889 'ANALYSIS' 52) #(889 'ANALYZER' 53) #(889 'AND' 54) #(889 'ANY' 55) #(889 'APPEND' 56) #(889 'APPENDING' 57) #(889 'APPLICATION' 58) #(889 'ARCHIVE' 59) #(889 'AREA' 60) #(889 'ARITHMETIC' 61) #(889 'AS' 62) #(889 'AS400' 63) #(889 'ASCENDING' 64) #(889 'ASSERT' 65) #(889 'ASSIGN' 66) #(889 'ASSIGNED' 67) #(889 'ASSIGNING' 68) #(889 'ASSOCIATION' 69) #(889 'ASYNCHRONOUS' 70) #(889 'AT' 71) #(889 'ATTRIBUTES' 72) #(889 'AUGMENTING' 73) #(889 'AUTHORITY' 74) #(889 'AUTHORIZATION' 76) #(889 'AUTO' 77) #(889 'AVG' 78) #(889 'BACK' 79) #(889 'BACKGROUND' 80) #(889 'BACKWARD' 81) #(889 'BADI' 82) #(889 'BASE' 83) #(889 'BEFORE' 84) #(889 'BEGIN' 85) #(889 'BEHAVIOR' 86) #(889 'BETWEEN' 87) #(889 'BINARY' 88) #(889 'BIT' 89) #(889 'BLANK' 94) #(889 'BLANKS' 95) #(889 'BLOCK' 96) #(889 'BLOCKS' 97) #(889 'BOOLC' 98) #(889 'BOUND' 99) #(889 'BOUNDARIES' 100) #(889 'BOUNDS' 101) #(889 'BOXED' 102) #(889 'BREAK' 103) #(889 'BUFFER' 105) #(889 'BY' 106) #(889 'BYPASSING' 107) #(889 'BYTE' 108) #(889 'CA' 116) #(889 'CALL' 117) #(889 'CALLING' 118) #(889 'CASE' 119) #(889 'CAST' 120) #(889 'CASTING' 121) #(889 'CATCH' 122) #(889 'CDS' 123) #(889 'CEIL' 877) #(889 'CENTER' 124) #(889 'CENTERED' 125) #(889 'CHAIN' 126) #(889 'CHANGE' 129) #(889 'CHANGING' 130) #(889 'CHANNELS' 131) #(889 'CHAR' 132) #(889 'CHARACTER' 134) #(889 'CHECK' 135) #(889 'CHECKBOX' 136) #(889 'CID' 137) #(889 'CIRCULAR' 138) #(889 'CLASS' 139) #(889 'CLEANUP' 143) #(889 'CLEAR' 144) #(889 'CLIENT' 145) #(889 'CLIENTS' 146) #(889 'CLOCK' 147) #(889 'CLONE' 148) #(889 'CLOSE' 149) #(889 'CN' 150) #(889 'CO' 151) #(889 'COALESCE' 878) #(889 'CODE' 152) #(889 'COLLECT' 153) #(889 'COLOR' 154) #(889 'COLUMN' 155) #(889 'COLUMNS' 156) #(889 'COL_BACKGROUND' 157) #(889 'COL_GROUP' 158) #(889 'COL_HEADING' 159) #(889 'COL_KEY' 160) #(889 'COL_NEGATIVE' 161) #(889 'COL_NORMAL' 162) #(889 'COL_POSITIVE' 163) #(889 'COL_TOTAL' 164) #(889 'COMMENT' 165) #(889 'COMMENTS' 166) #(889 'COMMIT' 167) #(889 'COMMON' 168) #(889 'COMMUNICATION' 169) #(889 'COMPARING' 170) #(889 'COMPONENT' 171) #(889 'COMPONENTS' 172) #(889 'COMPRESSION' 173) #(889 'COMPUTE' 174) #(889 'CONCAT' 879) #(889 'CONCATENATE' 175) #(889 'CONCAT_WITH_SPACE' 880) #(889 'COND' 176) #(889 'CONDENSE' 177) #(889 'CONDITION' 178) #(889 'CONNECTION' 179) #(889 'CONSTANT' 180) #(889 'CONSTANTS' 181) #(889 'CONTEXT' 182) #(889 'CONTEXTS' 183) #(889 'CONTINUE' 184) #(889 'CONTROL' 185) #(889 'CONTROLS' 186) #(889 'CONV' 187) #(889 'CONVERSION' 188) #(889 'CONVERT' 189) #(889 'COPIES' 190) #(889 'COPY' 191) #(889 'CORRESPONDING' 192) #(889 'COUNT' 193) #(889 'COUNTRY' 194) #(889 'COVER' 195) #(889 'CP' 196) #(889 'CPI' 197) #(889 'CREATE' 198) #(889 'CRITICAL' 199) #(889 'CS' 200) #(889 'CURRENCY' 201) #(889 'CURRENT' 202) #(889 'CURSOR' 203) #(889 'DANGEROUS' 205) #(889 'DATA' 206) #(889 'DATABASE' 207) #(889 'DATAINFO' 208) #(889 'DATASET' 209) #(889 'DATE' 210) #(889 'DAYLIGHT' 211) #(889 'DB2' 212) #(889 'DB6' 213) #(889 'DDL' 216) #(889 'DDMMYY' 217) #(889 'DEALLOCATE' 218) #(889 'DEC' 219) #(889 'DECIMALS' 220) #(889 'DECLARATIONS' 221) #(889 'DEEP' 222) #(889 'DEFAULT' 223) #(889 'DEFERRED' 224) #(889 'DEFINE' 225) #(889 'DEFINITION' 226) #(889 'DELETE' 227) #(889 'DELETING' 228) #(889 'DEMAND' 229) #(889 'DEPARTMENT' 230) #(889 'DESCENDING' 231) #(889 'DESCRIBE' 232) #(889 'DESTINATION' 233) #(889 'DETAIL' 234) #(889 'DETERMINATION' 235) #(889 'DETERMINE' 236) #(889 'DIALOG' 237) #(889 'DID' 238) #(889 'DIRECTORY' 239) #(889 'DISCARDING' 240) #(889 'DISPLAY' 241) #(889 'DISTANCE' 243) #(889 'DISTINCT' 244) #(889 'DIV' 245) #(889 'DIVIDE' 246) #(889 'DO' 247) #(889 'DUMMY' 248) #(889 'DUPLICATE' 249) #(889 'DUPLICATES' 250) #(889 'DURATION' 251) #(889 'DURING' 252) #(889 'DYNPRO' 253) #(889 'EARLY' 254) #(889 'EDIT' 255) #(889 'ELSE' 257) #(889 'ELSEIF' 258) #(889 'EMPTY' 259) #(889 'ENABLED' 260) #(889 'ENABLING' 261) #(889 'ENCODING' 262) #(889 'END' 263) #(889 'ENDAT' 270) #(889 'ENDCASE' 271) #(889 'ENDCATCH' 272) #(889 'ENDCHAIN' 273) #(889 'ENDCLASS' 274) #(889 'ENDDO' 275) #(889 'ENDENHANCEMENT' 276) #(889 'ENDEXEC' 277) #(889 'ENDFORM' 278) #(889 'ENDFUNCTION' 279) #(889 'ENDIAN' 280) #(889 'ENDIF' 281) #(889 'ENDING' 282) #(889 'ENDINTERFACE' 283) #(889 'ENDLOOP' 284) #(889 'ENDMETHOD' 285) #(889 'ENDMODULE' 286) #(889 'ENDON' 287) #(889 'ENDPROVIDE' 288) #(889 'ENDSELECT' 289) #(889 'ENDTRY' 290) #(889 'ENDWHILE' 291) #(889 'ENDWITH' 292) #(889 'ENGINEERING' 293) #(889 'ENHANCEMENT' 294) #(889 'ENHANCEMENTS' 297) #(889 'ENTITIES' 298) #(889 'ENTITY' 299) #(889 'ENTRIES' 300) #(889 'ENTRY' 301) #(889 'ENUM' 302) #(889 'ENVIRONMENT' 303) #(889 'EQ' 304) #(889 'EQUIV' 305) #(889 'ERRORS' 306) #(889 'ESCAPE' 307) #(889 'ESCAPING' 308) #(889 'EVENT' 309) #(889 'EVENTS' 310) #(889 'EXACT' 311) #(889 'EXCEPT' 312) #(889 'EXCEPTION' 313) #(889 'EXCEPTIONS' 315) #(889 'EXCLUDE' 316) #(889 'EXCLUDING' 317) #(889 'EXEC' 318) #(889 'EXECUTE' 319) #(889 'EXISTS' 320) #(889 'EXIT' 321) #(889 'EXPANDING' 323) #(889 'EXPIRATION' 324) #(889 'EXPLICIT' 325) #(889 'EXPONENT' 326) #(889 'EXPORT' 327) #(889 'EXPORTING' 328) #(889 'EXTENDED' 329) #(889 'EXTENSION' 330) #(889 'EXTRACT' 331) #(889 'FAIL' 332) #(889 'FAILED' 333) #(889 'FEATURES' 334) #(889 'FETCH' 335) #(889 'FIELD' 336) #(889 'FIELDS' 340) #(889 'FILE' 341) #(889 'FILL' 342) #(889 'FILTER' 343) #(889 'FILTERS' 344) #(889 'FINAL' 345) #(889 'FIND' 346) #(889 'FIRST' 347) #(889 'FLOOR' 881) #(889 'FLTP' 350) #(889 'FLUSH' 351) #(889 'FONT' 352) #(889 'FOR' 353) #(889 'FORM' 354) #(889 'FORMAT' 355) #(889 'FORWARD' 356) #(889 'FOUND' 357) #(889 'FRAME' 358) #(889 'FRAMES' 359) #(889 'FREE' 360) #(889 'FRIENDS' 361) #(889 'FROM' 362) #(889 'FULL' 363) #(889 'FUNCTION' 364) #(889 'FURTHER' 366) #(889 'GE' 367) #(889 'GENERATE' 368) #(889 'GET' 369) #(889 'GIVING' 370) #(889 'GLOBAL' 371) #(889 'GRAPH' 372) #(889 'GROUP' 373) #(889 'GROUPS' 374) #(889 'GT' 375) #(889 'HANDLE' 376) #(889 'HANDLER' 377) #(889 'HARMLESS' 378) #(889 'HASHED' 379) #(889 'HAVING' 380) #(889 'HDB' 381) #(889 'HEADER' 382) #(889 'HEADERS' 383) #(889 'HEADING' 384) #(889 'HIDE' 387) #(889 'HIERARCHY' 388) #(889 'HIGH' 389) #(889 'HINT' 390) #(889 'HOLD' 391) #(889 'HOTSPOT' 392) #(889 'ICON' 393) #(889 'ID' 394) #(889 'IDENTIFICATION' 395) #(889 'IDENTIFIER' 396) #(889 'IDS' 397) #(889 'IF' 398) #(889 'IGNORE' 399) #(889 'IGNORING' 400) #(889 'IMMEDIATELY' 401) #(889 'IMPLEMENTATION' 402) #(889 'IMPLEMENTED' 403) #(889 'IMPLICIT' 404) #(889 'IMPORT' 405) #(889 'IMPORTING' 406) #(889 'IN' 407) #(889 'INACTIVE' 408) #(889 'INCL' 409) #(889 'INCLUDE' 410) #(889 'INCLUDES' 411) #(889 'INCREMENT' 412) #(889 'INDEX' 413) #(889 'INFORMIX' 415) #(889 'INFOTYPES' 416) #(889 'INHERITING' 417) #(889 'INIT' 418) #(889 'INITIAL' 419) #(889 'INITIALIZATION' 420) #(889 'INNER' 421) #(889 'INPUT' 422) #(889 'INSERT' 423) #(889 'INSTANCE' 424) #(889 'INSTANCES' 425) #(889 'INT2' 426) #(889 'INT4' 427) #(889 'INT8' 428) #(889 'INTENSIFIED' 429) #(889 'INTERFACE' 430) #(889 'INTERFACES' 431) #(889 'INTERNAL' 432) #(889 'INTERVALS' 433) #(889 'INTO' 434) #(889 'INVERSE' 435) #(889 'IS' 437) #(889 'ISO' 438) #(889 'JOB' 439) #(889 'JOIN' 440) #(889 'KEEP' 441) #(889 'KEEPING' 442) #(889 'KERNEL' 443) #(889 'KEY' 444) #(889 'KEYS' 445) #(889 'KEYWORDS' 446) #(889 'KIND' 447) #(889 'LANGUAGE' 448) #(889 'LAST' 449) #(889 'LATE' 450) #(889 'LAYOUT' 451) #(889 'LE' 452) #(889 'LEADING' 453) #(889 'LEAVE' 454) #(889 'LEFT' 455) #(889 'LEFTPLUS' 457) #(889 'LEFTSPACE' 458) #(889 'LEGACY' 459) #(889 'LENGTH' 460) #(889 'LET' 461) #(889 'LEVEL' 462) #(889 'LEVELS' 463) #(889 'LIKE' 464) #(889 'LINE' 465) #(889 'LINEFEED' 469) #(889 'LINES' 470) #(889 'LINK' 471) #(889 'LIST' 472) #(889 'LISTBOX' 474) #(889 'LOAD' 475) #(889 'LOCAL' 477) #(889 'LOCALE' 478) #(889 'LOCK' 479) #(889 'LOCKS' 480) #(889 'LOGFILE' 482) #(889 'LOGICAL' 483) #(889 'LONG' 484) #(889 'LOOP' 485) #(889 'LOW' 486) #(889 'LOWER' 487) #(889 'LPI' 488) #(889 'LT' 489) #(889 'LTRIM' 882) #(889 'MAIN' 491) #(889 'MAPPED' 492) #(889 'MAPPING' 493) #(889 'MARGIN' 494) #(889 'MARK' 495) #(889 'MASK' 496) #(889 'MATCH' 497) #(889 'MATCHCODE' 498) #(889 'MAX' 499) #(889 'MAXIMUM' 500) #(889 'MEDIUM' 501) #(889 'MEMBERS' 502) #(889 'MEMORY' 503) #(889 'MESH' 504) #(889 'MESSAGE' 505) #(889 'MESSAGES' 507) #(889 'MESSAGING' 508) #(889 'METHOD' 509) #(889 'METHODS' 510) #(889 'MIN' 511) #(889 'MMDDYY' 514) #(889 'MOD' 515) #(889 'MODE' 516) #(889 'MODIF' 517) #(889 'MODIFIER' 518) #(889 'MODIFY' 519) #(889 'MODULE' 520) #(889 'MOVE' 521) #(889 'MSSQLNT' 523) #(889 'MULTIPLY' 524) #(889 'NA' 526) #(889 'NAME' 527) #(889 'NAMETAB' 528) #(889 'NATIVE' 529) #(889 'NE' 530) #(889 'NESTED' 531) #(889 'NESTING' 532) #(889 'NEW' 533) #(889 'NEXT' 537) #(889 'NO' 538) #(889 'NODES' 550) #(889 'NOT' 553) #(889 'NP' 554) #(889 'NS' 555) #(889 'NULL' 556) #(889 'NUMBER' 557) #(889 'NUMBERING' 558) #(889 'NUMC' 559) #(889 'OBJECT' 561) #(889 'OBJECTS' 562) #(889 'OBJMGR' 563) #(889 'OBLIGATORY' 564) #(889 'OCCURENCE' 565) #(889 'OCCURENCES' 566) #(889 'OCCURRENCE' 567) #(889 'OCCURRENCES' 568) #(889 'OCCURS' 569) #(889 'OF' 570) #(889 'OFF' 571) #(889 'OFFSET' 572) #(889 'ON' 573) #(889 'ONE' 574) #(889 'ONLY' 575) #(889 'OPEN' 576) #(889 'OPTION' 577) #(889 'OPTIONAL' 578) #(889 'OPTIONS' 579) #(889 'OR' 580) #(889 'ORACLE' 581) #(889 'ORDER' 582) #(889 'OTHERS' 583) #(889 'OUT' 584) #(889 'OUTER' 585) #(889 'OUTPUT' 586) #(889 'OVERFLOW' 588) #(889 'OVERLAY' 589) #(889 'PACK' 590) #(889 'PACKAGE' 591) #(889 'PAD' 592) #(889 'PADDING' 593) #(889 'PAGE' 594) #(889 'PAGES' 595) #(889 'PARAMETER' 596) #(889 'PARAMETERS' 598) #(889 'PART' 599) #(889 'PARTIALLY' 600) #(889 'PCRE' 601) #(889 'PERCENTAGE' 602) #(889 'PERFORM' 603) #(889 'PERFORMING' 604) #(889 'PERMISSIONS' 605) #(889 'PLACES' 607) #(889 'POOL' 608) #(889 'POSITION' 609) #(889 'POS_HIGH' 610) #(889 'POS_LOW' 611) #(889 'PRAGMAS' 612) #(889 'PRECHECK' 613) #(889 'PRECOMPILED' 614) #(889 'PREFERRED' 615) #(889 'PRESERVING' 616) #(889 'PRIMARY' 617) #(889 'PRINT' 618) #(889 'PRIVATE' 620) #(889 'PRIVILEGED' 621) #(889 'PROCEDURE' 622) #(889 'PROGRAM' 623) #(889 'PROPERTY' 624) #(889 'PROTECTED' 625) #(889 'PROVIDE' 626) #(889 'PUBLIC' 627) #(889 'PUSH' 628) #(889 'PUSHBUTTON' 629) #(889 'PUT' 630) #(889 'QUEUEONLY' 632) #(889 'QUICKINFO' 633) #(889 'RADIOBUTTON' 634) #(889 'RAISE' 635) #(889 'RAISING' 636) #(889 'RANGE' 637) #(889 'RANGES' 638) #(889 'RAW' 639) #(889 'READ' 640) #(889 'RECEIVE' 642) #(889 'RECEIVED' 643) #(889 'RECEIVER' 644) #(889 'RECEIVING' 645) #(889 'REDEFINITION' 646) #(889 'REDUCE' 647) #(889 'REF' 648) #(889 'REFERENCE' 649) #(889 'REFRESH' 650) #(889 'REGEX' 651) #(889 'REJECT' 652) #(889 'RELATING' 653) #(889 'RENAMING' 654) #(889 'REPLACE' 655) #(889 'REPLACEMENT' 656) #(889 'REPLACING' 657) #(889 'REPORT' 658) #(889 'REPORTED' 659) #(889 'REQUEST' 660) #(889 'REQUESTED' 661) #(889 'REQUIRED' 662) #(889 'RESERVE' 663) #(889 'RESET' 664) #(889 'RESOLUTION' 665) #(889 'RESPECTING' 666) #(889 'RESPONSE' 667) #(889 'RESPONSES' 668) #(889 'RESULT' 669) #(889 'RESULTS' 670) #(889 'RESUMABLE' 671) #(889 'RESUME' 672) #(889 'RETRY' 673) #(889 'RETURN' 674) #(889 'RETURNCODE' 675) #(889 'RETURNING' 676) #(889 'RIGHT' 677) #(889 'RIGHTPLUS' 679) #(889 'RIGHTSPACE' 680) #(889 'RISK' 681) #(889 'ROLLBACK' 682) #(889 'ROUND' 683) #(889 'ROWS' 684) #(889 'RTRIM' 883) #(889 'RUN' 685) #(889 'SAP' 686) #(889 'SAVE' 688) #(889 'SAVING' 689) #(889 'SCALE_PRESERVING' 690) #(889 'SCALE_PRESERVING_SCIENTIFIC' 691) #(889 'SCAN' 692) #(889 'SCIENTIFIC' 693) #(889 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(889 'SCREEN' 695) #(889 'SCROLL' 696) #(889 'SCROLLING' 698) #(889 'SEARCH' 699) #(889 'SECONDARY' 700) #(889 'SECONDS' 701) #(889 'SECTION' 702) #(889 'SELECT' 703) #(889 'SELECTION' 705) #(889 'SELECTIONS' 710) #(889 'SEND' 711) #(889 'SEPARATE' 712) #(889 'SEPARATED' 713) #(889 'SESSION' 714) #(889 'SET' 715) #(889 'SHARED' 716) #(889 'SHIFT' 717) #(889 'SHORT' 718) #(889 'SHORTDUMP' 719) #(889 'SIGN' 721) #(889 'SIGN_AS_POSTFIX' 722) #(889 'SIMPLE' 723) #(889 'SIMULATION' 724) #(889 'SINGLE' 725) #(889 'SIZE' 726) #(889 'SKIP' 727) #(889 'SKIPPING' 728) #(889 'SMART' 729) #(889 'SOME' 730) #(889 'SORT' 731) #(889 'SORTABLE' 732) #(889 'SORTED' 733) #(889 'SOURCE' 734) #(889 'SPACE' 735) #(889 'SPECIFIED' 736) #(889 'SPLIT' 737) #(889 'SPOOL' 738) #(889 'SPOTS' 739) #(889 'SQL' 740) #(889 'SQLSCRIPT' 741) #(889 'STABLE' 742) #(889 'STAMP' 743) #(889 'STANDARD' 744) #(889 'STARTING' 746) #(889 'STATE' 747) #(889 'STATEMENT' 748) #(889 'STATEMENTS' 749) #(889 'STATIC' 750) #(889 'STATICS' 751) #(889 'STATUSINFO' 752) #(889 'STEP' 753) #(889 'STOP' 755) #(889 'STRUCTURE' 756) #(889 'STRUCTURES' 757) #(889 'STYLE' 758) #(889 'SUBKEY' 759) #(889 'SUBMATCHES' 760) #(889 'SUBMIT' 761) #(889 'SUBROUTINE' 762) #(889 'SUBSCREEN' 763) #(889 'SUBSTRING' 764) #(889 'SUBTRACT' 765) #(889 'SUFFIX' 767) #(889 'SUM' 768) #(889 'SUMMARY' 769) #(889 'SUPPLIED' 770) #(889 'SUPPLY' 771) #(889 'SUPPRESS' 772) #(889 'SWITCH' 773) #(889 'SYBASE' 774) #(889 'SYMBOL' 775) #(889 'T000' 779) #(889 'TAB' 780) #(889 'TABBED' 781) #(889 'TABLE' 782) #(889 'TABLES' 783) #(889 'TABLEVIEW' 784) #(889 'TABSTRIP' 785) #(889 'TARGET' 786) #(889 'TASK' 787) #(889 'TASKS' 788) #(889 'TEST' 789) #(889 'TESTING' 792) #(889 'TEXT' 793) #(889 'TEXTPOOL' 794) #(889 'THEN' 795) #(889 'THROW' 796) #(889 'TIME' 797) #(889 'TIMES' 798) #(889 'TIMESTAMP' 799) #(889 'TIMEZONE' 800) #(889 'TITLE' 801) #(889 'TITLEBAR' 802) #(889 'TO' 803) #(889 'TOKENIZATION' 804) #(889 'TOKENS' 805) #(889 'TRAILING' 810) #(889 'TRANSACTION' 811) #(889 'TRANSFER' 812) #(889 'TRANSFORMATION' 813) #(889 'TRANSLATE' 814) #(889 'TRANSPORTING' 815) #(889 'TRMAC' 816) #(889 'TRUNCATION' 817) #(889 'TRY' 818) #(889 'TYPE' 819) #(889 'TYPES' 822) #(889 'ULINE' 823) #(889 'UNASSIGN' 824) #(889 'UNDER' 825) #(889 'UNICODE' 826) #(889 'UNION' 827) #(889 'UNIQUE' 828) #(889 'UNIT' 829) #(889 'UNIX' 830) #(889 'UNPACK' 831) #(889 'UNTIL' 832) #(889 'UNWIND' 833) #(889 'UP' 834) #(889 'UPDATE' 835) #(889 'UPPER' 836) #(889 'USER' 837) #(889 'USING' 839) #(889 'UTCLONG' 840) #(889 'UUID' 884) #(889 'VALID' 842) #(889 'VALIDATE' 843) #(889 'VALUE' 844) #(889 'VALUES' 846) #(889 'VARY' 847) #(889 'VARYING' 848) #(889 'VERSION' 849) #(889 'VIA' 850) #(889 'VISIBLE' 851) #(889 'WAIT' 852) #(889 'WHEN' 853) #(889 'WHERE' 854) #(889 'WHILE' 855) #(889 'WIDTH' 856) #(889 'WINDOW' 857) #(889 'WINDOWS' 858) #(889 'WITH' 859) #(889 'WITHOUT' 862) #(889 'WORD' 863) #(889 'WORK' 864) #(889 'WORKSPACE' 865) #(889 'WRITE' 866) #(889 'WRITER' 867) #(889 'XML' 868) #(889 'XSD' 869) #(889 'XSDBOOL' 870) #(889 'YES' 871) #(889 'YYMMDD' 872) #(889 'ZERO' 874) #(889 'ZONE' 875) #(928 '%_FINAL' 2) #(928 '%_HINTS' 3) #(928 '%_PREDEFINED' 4) #(928 '&&' 6) #(928 '**' 8) #(928 'ABS' 876) #(928 'ABSTRACT' 33) #(928 'ACCEPT' 34) #(928 'ACCEPTING' 35) #(928 'ACCESS' 36) #(928 'ACCORDING' 37) #(928 'ACTION' 38) #(928 'ACTIVATION' 39) #(928 'ACTUAL' 40) #(928 'ADABAS' 41) #(928 'ADD' 42) #(928 'ADJACENT' 44) #(928 'ALIAS' 45) #(928 'ALIASES' 46) #(928 'ALIGN' 47) #(928 'ALL' 48) #(928 'ALLOCATE' 49) #(928 'ALPHA' 50) #(928 'AMDP' 51) #(928 'ANALYSIS' 52) #(928 'ANALYZER' 53) #(928 'AND' 54) #(928 'ANY' 55) #(928 'APPEND' 56) #(928 'APPENDING' 57) #(928 'APPLICATION' 58) #(928 'ARCHIVE' 59) #(928 'AREA' 60) #(928 'ARITHMETIC' 61) #(928 'AS' 62) #(928 'AS400' 63) #(928 'ASCENDING' 64) #(928 'ASSERT' 65) #(928 'ASSIGN' 66) #(928 'ASSIGNED' 67) #(928 'ASSIGNING' 68) #(928 'ASSOCIATION' 69) #(928 'ASYNCHRONOUS' 70) #(928 'AT' 71) #(928 'ATTRIBUTES' 72) #(928 'AUGMENTING' 73) #(928 'AUTHORITY' 74) #(928 'AUTHORIZATION' 76) #(928 'AUTO' 77) #(928 'AVG' 78) #(928 'BACK' 79) #(928 'BACKGROUND' 80) #(928 'BACKWARD' 81) #(928 'BADI' 82) #(928 'BASE' 83) #(928 'BEFORE' 84) #(928 'BEGIN' 85) #(928 'BEHAVIOR' 86) #(928 'BETWEEN' 87) #(928 'BINARY' 88) #(928 'BIT' 89) #(928 'BLANK' 94) #(928 'BLANKS' 95) #(928 'BLOCK' 96) #(928 'BLOCKS' 97) #(928 'BOOLC' 98) #(928 'BOUND' 99) #(928 'BOUNDARIES' 100) #(928 'BOUNDS' 101) #(928 'BOXED' 102) #(928 'BREAK' 103) #(928 'BUFFER' 105) #(928 'BY' 106) #(928 'BYPASSING' 107) #(928 'BYTE' 108) #(928 'CA' 116) #(928 'CALL' 117) #(928 'CALLING' 118) #(928 'CASE' 119) #(928 'CAST' 120) #(928 'CASTING' 121) #(928 'CATCH' 122) #(928 'CDS' 123) #(928 'CEIL' 877) #(928 'CENTER' 124) #(928 'CENTERED' 125) #(928 'CHAIN' 126) #(928 'CHANGE' 129) #(928 'CHANGING' 130) #(928 'CHANNELS' 131) #(928 'CHAR' 132) #(928 'CHARACTER' 134) #(928 'CHECK' 135) #(928 'CHECKBOX' 136) #(928 'CID' 137) #(928 'CIRCULAR' 138) #(928 'CLASS' 139) #(928 'CLEANUP' 143) #(928 'CLEAR' 144) #(928 'CLIENT' 145) #(928 'CLIENTS' 146) #(928 'CLOCK' 147) #(928 'CLONE' 148) #(928 'CLOSE' 149) #(928 'CN' 150) #(928 'CO' 151) #(928 'COALESCE' 878) #(928 'CODE' 152) #(928 'COLLECT' 153) #(928 'COLOR' 154) #(928 'COLUMN' 155) #(928 'COLUMNS' 156) #(928 'COL_BACKGROUND' 157) #(928 'COL_GROUP' 158) #(928 'COL_HEADING' 159) #(928 'COL_KEY' 160) #(928 'COL_NEGATIVE' 161) #(928 'COL_NORMAL' 162) #(928 'COL_POSITIVE' 163) #(928 'COL_TOTAL' 164) #(928 'COMMENT' 165) #(928 'COMMENTS' 166) #(928 'COMMIT' 167) #(928 'COMMON' 168) #(928 'COMMUNICATION' 169) #(928 'COMPARING' 170) #(928 'COMPONENT' 171) #(928 'COMPONENTS' 172) #(928 'COMPRESSION' 173) #(928 'COMPUTE' 174) #(928 'CONCAT' 879) #(928 'CONCATENATE' 175) #(928 'CONCAT_WITH_SPACE' 880) #(928 'COND' 176) #(928 'CONDENSE' 177) #(928 'CONDITION' 178) #(928 'CONNECTION' 179) #(928 'CONSTANT' 180) #(928 'CONSTANTS' 181) #(928 'CONTEXT' 182) #(928 'CONTEXTS' 183) #(928 'CONTINUE' 184) #(928 'CONTROL' 185) #(928 'CONTROLS' 186) #(928 'CONV' 187) #(928 'CONVERSION' 188) #(928 'CONVERT' 189) #(928 'COPIES' 190) #(928 'COPY' 191) #(928 'CORRESPONDING' 192) #(928 'COUNT' 193) #(928 'COUNTRY' 194) #(928 'COVER' 195) #(928 'CP' 196) #(928 'CPI' 197) #(928 'CREATE' 198) #(928 'CRITICAL' 199) #(928 'CS' 200) #(928 'CURRENCY' 201) #(928 'CURRENT' 202) #(928 'CURSOR' 203) #(928 'DANGEROUS' 205) #(928 'DATA' 206) #(928 'DATABASE' 207) #(928 'DATAINFO' 208) #(928 'DATASET' 209) #(928 'DATE' 210) #(928 'DAYLIGHT' 211) #(928 'DB2' 212) #(928 'DB6' 213) #(928 'DD/MM/YY' 214) #(928 'DD/MM/YYYY' 215) #(928 'DDL' 216) #(928 'DDMMYY' 217) #(928 'DEALLOCATE' 218) #(928 'DEC' 219) #(928 'DECIMALS' 220) #(928 'DECLARATIONS' 221) #(928 'DEEP' 222) #(928 'DEFAULT' 223) #(928 'DEFERRED' 224) #(928 'DEFINE' 225) #(928 'DEFINITION' 226) #(928 'DELETE' 227) #(928 'DELETING' 228) #(928 'DEMAND' 229) #(928 'DEPARTMENT' 230) #(928 'DESCENDING' 231) #(928 'DESCRIBE' 232) #(928 'DESTINATION' 233) #(928 'DETAIL' 234) #(928 'DETERMINATION' 235) #(928 'DETERMINE' 236) #(928 'DIALOG' 237) #(928 'DID' 238) #(928 'DIRECTORY' 239) #(928 'DISCARDING' 240) #(928 'DISPLAY' 241) #(928 'DISTANCE' 243) #(928 'DISTINCT' 244) #(928 'DIV' 245) #(928 'DIVIDE' 246) #(928 'DO' 247) #(928 'DUMMY' 248) #(928 'DUPLICATE' 249) #(928 'DUPLICATES' 250) #(928 'DURATION' 251) #(928 'DURING' 252) #(928 'DYNPRO' 253) #(928 'EARLY' 254) #(928 'EDIT' 255) #(928 'ELSE' 257) #(928 'ELSEIF' 258) #(928 'EMPTY' 259) #(928 'ENABLED' 260) #(928 'ENABLING' 261) #(928 'ENCODING' 262) #(928 'END' 263) #(928 'ENDAT' 270) #(928 'ENDCASE' 271) #(928 'ENDCATCH' 272) #(928 'ENDCHAIN' 273) #(928 'ENDCLASS' 274) #(928 'ENDDO' 275) #(928 'ENDENHANCEMENT' 276) #(928 'ENDEXEC' 277) #(928 'ENDFORM' 278) #(928 'ENDFUNCTION' 279) #(928 'ENDIAN' 280) #(928 'ENDIF' 281) #(928 'ENDING' 282) #(928 'ENDINTERFACE' 283) #(928 'ENDLOOP' 284) #(928 'ENDMETHOD' 285) #(928 'ENDMODULE' 286) #(928 'ENDON' 287) #(928 'ENDPROVIDE' 288) #(928 'ENDSELECT' 289) #(928 'ENDTRY' 290) #(928 'ENDWHILE' 291) #(928 'ENDWITH' 292) #(928 'ENGINEERING' 293) #(928 'ENHANCEMENT' 294) #(928 'ENHANCEMENTS' 297) #(928 'ENTITIES' 298) #(928 'ENTITY' 299) #(928 'ENTRIES' 300) #(928 'ENTRY' 301) #(928 'ENUM' 302) #(928 'ENVIRONMENT' 303) #(928 'EQ' 304) #(928 'EQUIV' 305) #(928 'ERRORS' 306) #(928 'ESCAPE' 307) #(928 'ESCAPING' 308) #(928 'EVENT' 309) #(928 'EVENTS' 310) #(928 'EXACT' 311) #(928 'EXCEPT' 312) #(928 'EXCEPTION' 313) #(928 'EXCEPTIONS' 315) #(928 'EXCLUDE' 316) #(928 'EXCLUDING' 317) #(928 'EXEC' 318) #(928 'EXECUTE' 319) #(928 'EXISTS' 320) #(928 'EXIT' 321) #(928 'EXPANDING' 323) #(928 'EXPIRATION' 324) #(928 'EXPLICIT' 325) #(928 'EXPONENT' 326) #(928 'EXPORT' 327) #(928 'EXPORTING' 328) #(928 'EXTENDED' 329) #(928 'EXTENSION' 330) #(928 'EXTRACT' 331) #(928 'FAIL' 332) #(928 'FAILED' 333) #(928 'FEATURES' 334) #(928 'FETCH' 335) #(928 'FIELD' 336) #(928 'FIELDS' 340) #(928 'FILE' 341) #(928 'FILL' 342) #(928 'FILTER' 343) #(928 'FILTERS' 344) #(928 'FINAL' 345) #(928 'FIND' 346) #(928 'FIRST' 347) #(928 'FLOOR' 881) #(928 'FLTP' 350) #(928 'FLUSH' 351) #(928 'FONT' 352) #(928 'FOR' 353) #(928 'FORM' 354) #(928 'FORMAT' 355) #(928 'FORWARD' 356) #(928 'FOUND' 357) #(928 'FRAME' 358) #(928 'FRAMES' 359) #(928 'FREE' 360) #(928 'FRIENDS' 361) #(928 'FROM' 362) #(928 'FULL' 363) #(928 'FUNCTION' 364) #(928 'FURTHER' 366) #(928 'GE' 367) #(928 'GENERATE' 368) #(928 'GET' 369) #(928 'GIVING' 370) #(928 'GLOBAL' 371) #(928 'GRAPH' 372) #(928 'GROUP' 373) #(928 'GROUPS' 374) #(928 'GT' 375) #(928 'HANDLE' 376) #(928 'HANDLER' 377) #(928 'HARMLESS' 378) #(928 'HASHED' 379) #(928 'HAVING' 380) #(928 'HDB' 381) #(928 'HEADER' 382) #(928 'HEADERS' 383) #(928 'HEADING' 384) #(928 'HIDE' 387) #(928 'HIERARCHY' 388) #(928 'HIGH' 389) #(928 'HINT' 390) #(928 'HOLD' 391) #(928 'HOTSPOT' 392) #(928 'ICON' 393) #(928 'ID' 394) #(928 'IDENTIFICATION' 395) #(928 'IDENTIFIER' 396) #(928 'IDS' 397) #(928 'IF' 398) #(928 'IGNORE' 399) #(928 'IGNORING' 400) #(928 'IMMEDIATELY' 401) #(928 'IMPLEMENTATION' 402) #(928 'IMPLEMENTED' 403) #(928 'IMPLICIT' 404) #(928 'IMPORT' 405) #(928 'IMPORTING' 406) #(928 'IN' 407) #(928 'INACTIVE' 408) #(928 'INCL' 409) #(928 'INCLUDE' 410) #(928 'INCLUDES' 411) #(928 'INCREMENT' 412) #(928 'INDEX' 413) #(928 'INFORMIX' 415) #(928 'INFOTYPES' 416) #(928 'INHERITING' 417) #(928 'INIT' 418) #(928 'INITIAL' 419) #(928 'INITIALIZATION' 420) #(928 'INNER' 421) #(928 'INPUT' 422) #(928 'INSERT' 423) #(928 'INSTANCE' 424) #(928 'INSTANCES' 425) #(928 'INT2' 426) #(928 'INT4' 427) #(928 'INT8' 428) #(928 'INTENSIFIED' 429) #(928 'INTERFACE' 430) #(928 'INTERFACES' 431) #(928 'INTERNAL' 432) #(928 'INTERVALS' 433) #(928 'INTO' 434) #(928 'INVERSE' 435) #(928 'IS' 437) #(928 'ISO' 438) #(928 'JOB' 439) #(928 'JOIN' 440) #(928 'KEEP' 441) #(928 'KEEPING' 442) #(928 'KERNEL' 443) #(928 'KEY' 444) #(928 'KEYS' 445) #(928 'KEYWORDS' 446) #(928 'KIND' 447) #(928 'LANGUAGE' 448) #(928 'LAST' 449) #(928 'LATE' 450) #(928 'LAYOUT' 451) #(928 'LE' 452) #(928 'LEADING' 453) #(928 'LEAVE' 454) #(928 'LEFT' 455) #(928 'LEFTPLUS' 457) #(928 'LEFTSPACE' 458) #(928 'LEGACY' 459) #(928 'LENGTH' 460) #(928 'LET' 461) #(928 'LEVEL' 462) #(928 'LEVELS' 463) #(928 'LIKE' 464) #(928 'LINE' 465) #(928 'LINEFEED' 469) #(928 'LINES' 470) #(928 'LINK' 471) #(928 'LIST' 472) #(928 'LISTBOX' 474) #(928 'LOAD' 475) #(928 'LOCAL' 477) #(928 'LOCALE' 478) #(928 'LOCK' 479) #(928 'LOCKS' 480) #(928 'LOGFILE' 482) #(928 'LOGICAL' 483) #(928 'LONG' 484) #(928 'LOOP' 485) #(928 'LOW' 486) #(928 'LOWER' 487) #(928 'LPI' 488) #(928 'LT' 489) #(928 'LTRIM' 882) #(928 'MAIN' 491) #(928 'MAPPED' 492) #(928 'MAPPING' 493) #(928 'MARGIN' 494) #(928 'MARK' 495) #(928 'MASK' 496) #(928 'MATCH' 497) #(928 'MATCHCODE' 498) #(928 'MAX' 499) #(928 'MAXIMUM' 500) #(928 'MEDIUM' 501) #(928 'MEMBERS' 502) #(928 'MEMORY' 503) #(928 'MESH' 504) #(928 'MESSAGE' 505) #(928 'MESSAGES' 507) #(928 'MESSAGING' 508) #(928 'METHOD' 509) #(928 'METHODS' 510) #(928 'MIN' 511) #(928 'MM/DD/YY' 512) #(928 'MM/DD/YYYY' 513) #(928 'MMDDYY' 514) #(928 'MOD' 515) #(928 'MODE' 516) #(928 'MODIF' 517) #(928 'MODIFIER' 518) #(928 'MODIFY' 519) #(928 'MODULE' 520) #(928 'MOVE' 521) #(928 'MSSQLNT' 523) #(928 'MULTIPLY' 524) #(928 'NA' 526) #(928 'NAME' 527) #(928 'NAMETAB' 528) #(928 'NATIVE' 529) #(928 'NE' 530) #(928 'NESTED' 531) #(928 'NESTING' 532) #(928 'NEW' 533) #(928 'NEXT' 537) #(928 'NO' 538) #(928 'NODES' 550) #(928 'NOT' 553) #(928 'NP' 554) #(928 'NS' 555) #(928 'NULL' 556) #(928 'NUMBER' 557) #(928 'NUMBERING' 558) #(928 'NUMC' 559) #(928 'OBJECT' 561) #(928 'OBJECTS' 562) #(928 'OBJMGR' 563) #(928 'OBLIGATORY' 564) #(928 'OCCURENCE' 565) #(928 'OCCURENCES' 566) #(928 'OCCURRENCE' 567) #(928 'OCCURRENCES' 568) #(928 'OCCURS' 569) #(928 'OF' 570) #(928 'OFF' 571) #(928 'OFFSET' 572) #(928 'ON' 573) #(928 'ONE' 574) #(928 'ONLY' 575) #(928 'OPEN' 576) #(928 'OPTION' 577) #(928 'OPTIONAL' 578) #(928 'OPTIONS' 579) #(928 'OR' 580) #(928 'ORACLE' 581) #(928 'ORDER' 582) #(928 'OTHERS' 583) #(928 'OUT' 584) #(928 'OUTER' 585) #(928 'OUTPUT' 586) #(928 'OVERFLOW' 588) #(928 'OVERLAY' 589) #(928 'PACK' 590) #(928 'PACKAGE' 591) #(928 'PAD' 592) #(928 'PADDING' 593) #(928 'PAGE' 594) #(928 'PAGES' 595) #(928 'PARAMETER' 596) #(928 'PARAMETERS' 598) #(928 'PART' 599) #(928 'PARTIALLY' 600) #(928 'PCRE' 601) #(928 'PERCENTAGE' 602) #(928 'PERFORM' 603) #(928 'PERFORMING' 604) #(928 'PERMISSIONS' 605) #(928 'PLACES' 607) #(928 'POOL' 608) #(928 'POSITION' 609) #(928 'POS_HIGH' 610) #(928 'POS_LOW' 611) #(928 'PRAGMAS' 612) #(928 'PRECHECK' 613) #(928 'PRECOMPILED' 614) #(928 'PREFERRED' 615) #(928 'PRESERVING' 616) #(928 'PRIMARY' 617) #(928 'PRINT' 618) #(928 'PRIVATE' 620) #(928 'PRIVILEGED' 621) #(928 'PROCEDURE' 622) #(928 'PROGRAM' 623) #(928 'PROPERTY' 624) #(928 'PROTECTED' 625) #(928 'PROVIDE' 626) #(928 'PUBLIC' 627) #(928 'PUSH' 628) #(928 'PUSHBUTTON' 629) #(928 'PUT' 630) #(928 'QUEUEONLY' 632) #(928 'QUICKINFO' 633) #(928 'RADIOBUTTON' 634) #(928 'RAISE' 635) #(928 'RAISING' 636) #(928 'RANGE' 637) #(928 'RANGES' 638) #(928 'RAW' 639) #(928 'READ' 640) #(928 'RECEIVE' 642) #(928 'RECEIVED' 643) #(928 'RECEIVER' 644) #(928 'RECEIVING' 645) #(928 'REDEFINITION' 646) #(928 'REDUCE' 647) #(928 'REF' 648) #(928 'REFERENCE' 649) #(928 'REFRESH' 650) #(928 'REGEX' 651) #(928 'REJECT' 652) #(928 'RELATING' 653) #(928 'RENAMING' 654) #(928 'REPLACE' 655) #(928 'REPLACEMENT' 656) #(928 'REPLACING' 657) #(928 'REPORT' 658) #(928 'REPORTED' 659) #(928 'REQUEST' 660) #(928 'REQUESTED' 661) #(928 'REQUIRED' 662) #(928 'RESERVE' 663) #(928 'RESET' 664) #(928 'RESOLUTION' 665) #(928 'RESPECTING' 666) #(928 'RESPONSE' 667) #(928 'RESPONSES' 668) #(928 'RESULT' 669) #(928 'RESULTS' 670) #(928 'RESUMABLE' 671) #(928 'RESUME' 672) #(928 'RETRY' 673) #(928 'RETURN' 674) #(928 'RETURNCODE' 675) #(928 'RETURNING' 676) #(928 'RIGHT' 677) #(928 'RIGHTPLUS' 679) #(928 'RIGHTSPACE' 680) #(928 'RISK' 681) #(928 'ROLLBACK' 682) #(928 'ROUND' 683) #(928 'ROWS' 684) #(928 'RTRIM' 883) #(928 'RUN' 685) #(928 'SAP' 686) #(928 'SAVE' 688) #(928 'SAVING' 689) #(928 'SCALE_PRESERVING' 690) #(928 'SCALE_PRESERVING_SCIENTIFIC' 691) #(928 'SCAN' 692) #(928 'SCIENTIFIC' 693) #(928 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(928 'SCREEN' 695) #(928 'SCROLL' 696) #(928 'SCROLLING' 698) #(928 'SEARCH' 699) #(928 'SECONDARY' 700) #(928 'SECONDS' 701) #(928 'SECTION' 702) #(928 'SELECT' 703) #(928 'SELECTION' 705) #(928 'SELECTIONS' 710) #(928 'SEND' 711) #(928 'SEPARATE' 712) #(928 'SEPARATED' 713) #(928 'SESSION' 714) #(928 'SET' 715) #(928 'SHARED' 716) #(928 'SHIFT' 717) #(928 'SHORT' 718) #(928 'SHORTDUMP' 719) #(928 'SIGN' 721) #(928 'SIGN_AS_POSTFIX' 722) #(928 'SIMPLE' 723) #(928 'SIMULATION' 724) #(928 'SINGLE' 725) #(928 'SIZE' 726) #(928 'SKIP' 727) #(928 'SKIPPING' 728) #(928 'SMART' 729) #(928 'SOME' 730) #(928 'SORT' 731) #(928 'SORTABLE' 732) #(928 'SORTED' 733) #(928 'SOURCE' 734) #(928 'SPACE' 735) #(928 'SPECIFIED' 736) #(928 'SPLIT' 737) #(928 'SPOOL' 738) #(928 'SPOTS' 739) #(928 'SQL' 740) #(928 'SQLSCRIPT' 741) #(928 'STABLE' 742) #(928 'STAMP' 743) #(928 'STANDARD' 744) #(928 'STARTING' 746) #(928 'STATE' 747) #(928 'STATEMENT' 748) #(928 'STATEMENTS' 749) #(928 'STATIC' 750) #(928 'STATICS' 751) #(928 'STATUSINFO' 752) #(928 'STEP' 753) #(928 'STOP' 755) #(928 'STRUCTURE' 756) #(928 'STRUCTURES' 757) #(928 'STYLE' 758) #(928 'SUBKEY' 759) #(928 'SUBMATCHES' 760) #(928 'SUBMIT' 761) #(928 'SUBROUTINE' 762) #(928 'SUBSCREEN' 763) #(928 'SUBSTRING' 764) #(928 'SUBTRACT' 765) #(928 'SUFFIX' 767) #(928 'SUM' 768) #(928 'SUMMARY' 769) #(928 'SUPPLIED' 770) #(928 'SUPPLY' 771) #(928 'SUPPRESS' 772) #(928 'SWITCH' 773) #(928 'SYBASE' 774) #(928 'SYMBOL' 775) #(928 'T000' 779) #(928 'TAB' 780) #(928 'TABBED' 781) #(928 'TABLE' 782) #(928 'TABLES' 783) #(928 'TABLEVIEW' 784) #(928 'TABSTRIP' 785) #(928 'TARGET' 786) #(928 'TASK' 787) #(928 'TASKS' 788) #(928 'TEST' 789) #(928 'TESTING' 792) #(928 'TEXT' 793) #(928 'TEXTPOOL' 794) #(928 'THEN' 795) #(928 'THROW' 796) #(928 'TIME' 797) #(928 'TIMES' 798) #(928 'TIMESTAMP' 799) #(928 'TIMEZONE' 800) #(928 'TITLE' 801) #(928 'TITLEBAR' 802) #(928 'TO' 803) #(928 'TOKENIZATION' 804) #(928 'TOKENS' 805) #(928 'TRAILING' 810) #(928 'TRANSACTION' 811) #(928 'TRANSFER' 812) #(928 'TRANSFORMATION' 813) #(928 'TRANSLATE' 814) #(928 'TRANSPORTING' 815) #(928 'TRMAC' 816) #(928 'TRUNCATION' 817) #(928 'TRY' 818) #(928 'TYPE' 819) #(928 'TYPES' 822) #(928 'ULINE' 823) #(928 'UNASSIGN' 824) #(928 'UNDER' 825) #(928 'UNICODE' 826) #(928 'UNION' 827) #(928 'UNIQUE' 828) #(928 'UNIT' 829) #(928 'UNIX' 830) #(928 'UNPACK' 831) #(928 'UNTIL' 832) #(928 'UNWIND' 833) #(928 'UP' 834) #(928 'UPDATE' 835) #(928 'UPPER' 836) #(928 'USER' 837) #(928 'USING' 839) #(928 'UTCLONG' 840) #(928 'UUID' 884) #(928 'VALID' 842) #(928 'VALIDATE' 843) #(928 'VALUE' 844) #(928 'VALUES' 846) #(928 'VARY' 847) #(928 'VARYING' 848) #(928 'VERSION' 849) #(928 'VIA' 850) #(928 'VISIBLE' 851) #(928 'WAIT' 852) #(928 'WHEN' 853) #(928 'WHERE' 854) #(928 'WHILE' 855) #(928 'WIDTH' 856) #(928 'WINDOW' 857) #(928 'WINDOWS' 858) #(928 'WITH' 859) #(928 'WITHOUT' 862) #(928 'WORD' 863) #(928 'WORK' 864) #(928 'WORKSPACE' 865) #(928 'WRITE' 866) #(928 'WRITER' 867) #(928 'XML' 868) #(928 'XSD' 869) #(928 'XSDBOOL' 870) #(928 'YES' 871) #(928 'YYMMDD' 872) #(928 'ZERO' 874) #(928 'ZONE' 875) #(909 '**' 8) #(909 'ABS' 876) #(909 'ADD' 42) #(909 'ALL' 48) #(909 'AND' 54) #(909 'ANY' 55) #(909 'AS' 62) #(909 'AT' 71) #(909 'AVG' 78) #(909 'BIT' 89) #(909 'BY' 106) #(909 'CA' 116) #(909 'CDS' 123) #(909 'CID' 137) #(909 'CN' 150) #(909 'CO' 151) #(909 'CP' 196) #(909 'CPI' 197) #(909 'CS' 200) #(909 'DB2' 212) #(909 'DB6' 213) #(909 'DDL' 216) #(909 'DEC' 219) #(909 'DID' 238) #(909 'DIV' 245) #(909 'DO' 247) #(909 'END' 263) #(909 'EQ' 304) #(909 'FOR' 353) #(909 'GE' 367) #(909 'GET' 369) #(909 'GT' 375) #(909 'HDB' 381) #(909 'ID' 394) #(909 'IDS' 397) #(909 'IF' 398) #(909 'IN' 407) #(909 'IS' 437) #(909 'ISO' 438) #(909 'JOB' 439) #(909 'KEY' 444) #(909 'LE' 452) #(909 'LET' 461) #(909 'LOW' 486) #(909 'LPI' 488) #(909 'LT' 489) #(909 'MAX' 499) #(909 'MIN' 511) #(909 'MOD' 515) #(909 'NA' 526) #(909 'NE' 530) #(909 'NEW' 533) #(909 'NO' 538) #(909 'NOT' 553) #(909 'NP' 554) #(909 'NS' 555) #(909 'OF' 570) #(909 'OFF' 571) #(909 'ON' 573) #(909 'ONE' 574) #(909 'OR' 580) #(909 'OUT' 584) #(909 'PAD' 592) #(909 'PUT' 630) #(909 'RAW' 639) #(909 'REF' 648) #(909 'RUN' 685) #(909 'SAP' 686) #(909 'SET' 715) #(909 'SQL' 740) #(909 'SUM' 768) #(909 'TAB' 780) #(909 'TO' 803) #(909 'TRY' 818) #(909 'UP' 834) #(909 'VIA' 850) #(909 'XML' 868) #(909 'XSD' 869) #(909 'YES' 871) #(948 'ABS' 876) #(948 'ABSTRACT' 33) #(948 'ACCEPT' 34) #(948 'ACCEPTING' 35) #(948 'ACCESS' 36) #(948 'ACCORDING' 37) #(948 'ACTION' 38) #(948 'ACTIVATION' 39) #(948 'ACTUAL' 40) #(948 'ADABAS' 41) #(948 'ADD' 42) #(948 'ADJACENT' 44) #(948 'ALIAS' 45) #(948 'ALIASES' 46) #(948 'ALIGN' 47) #(948 'ALL' 48) #(948 'ALLOCATE' 49) #(948 'ALPHA' 50) #(948 'AMDP' 51) #(948 'ANALYSIS' 52) #(948 'ANALYZER' 53) #(948 'AND' 54) #(948 'ANY' 55) #(948 'APPEND' 56) #(948 'APPENDING' 57) #(948 'APPLICATION' 58) #(948 'ARCHIVE' 59) #(948 'AREA' 60) #(948 'ARITHMETIC' 61) #(948 'AS' 62) #(948 'AS400' 63) #(948 'ASCENDING' 64) #(948 'ASSERT' 65) #(948 'ASSIGN' 66) #(948 'ASSIGNED' 67) #(948 'ASSIGNING' 68) #(948 'ASSOCIATION' 69) #(948 'ASYNCHRONOUS' 70) #(948 'AT' 71) #(948 'ATTRIBUTES' 72) #(948 'AUGMENTING' 73) #(948 'AUTHORITY' 74) #(948 'AUTHORIZATION' 76) #(948 'AUTO' 77) #(948 'AVG' 78) #(948 'BACK' 79) #(948 'BACKGROUND' 80) #(948 'BACKWARD' 81) #(948 'BADI' 82) #(948 'BASE' 83) #(948 'BEFORE' 84) #(948 'BEGIN' 85) #(948 'BEHAVIOR' 86) #(948 'BETWEEN' 87) #(948 'BINARY' 88) #(948 'BIT' 89) #(948 'BLANK' 94) #(948 'BLANKS' 95) #(948 'BLOCK' 96) #(948 'BLOCKS' 97) #(948 'BOOLC' 98) #(948 'BOUND' 99) #(948 'BOUNDARIES' 100) #(948 'BOUNDS' 101) #(948 'BOXED' 102) #(948 'BREAK' 103) #(948 'BUFFER' 105) #(948 'BY' 106) #(948 'BYPASSING' 107) #(948 'BYTE' 108) #(948 'CA' 116) #(948 'CALL' 117) #(948 'CALLING' 118) #(948 'CASE' 119) #(948 'CAST' 120) #(948 'CASTING' 121) #(948 'CATCH' 122) #(948 'CDS' 123) #(948 'CEIL' 877) #(948 'CENTER' 124) #(948 'CENTERED' 125) #(948 'CHAIN' 126) #(948 'CHANGE' 129) #(948 'CHANGING' 130) #(948 'CHANNELS' 131) #(948 'CHAR' 132) #(948 'CHARACTER' 134) #(948 'CHECK' 135) #(948 'CHECKBOX' 136) #(948 'CID' 137) #(948 'CIRCULAR' 138) #(948 'CLASS' 139) #(948 'CLEANUP' 143) #(948 'CLEAR' 144) #(948 'CLIENT' 145) #(948 'CLIENTS' 146) #(948 'CLOCK' 147) #(948 'CLONE' 148) #(948 'CLOSE' 149) #(948 'CN' 150) #(948 'CO' 151) #(948 'COALESCE' 878) #(948 'CODE' 152) #(948 'COLLECT' 153) #(948 'COLOR' 154) #(948 'COLUMN' 155) #(948 'COLUMNS' 156) #(948 'COL_BACKGROUND' 157) #(948 'COL_GROUP' 158) #(948 'COL_HEADING' 159) #(948 'COL_KEY' 160) #(948 'COL_NEGATIVE' 161) #(948 'COL_NORMAL' 162) #(948 'COL_POSITIVE' 163) #(948 'COL_TOTAL' 164) #(948 'COMMENT' 165) #(948 'COMMENTS' 166) #(948 'COMMIT' 167) #(948 'COMMON' 168) #(948 'COMMUNICATION' 169) #(948 'COMPARING' 170) #(948 'COMPONENT' 171) #(948 'COMPONENTS' 172) #(948 'COMPRESSION' 173) #(948 'COMPUTE' 174) #(948 'CONCAT' 879) #(948 'CONCATENATE' 175) #(948 'CONCAT_WITH_SPACE' 880) #(948 'COND' 176) #(948 'CONDENSE' 177) #(948 'CONDITION' 178) #(948 'CONNECTION' 179) #(948 'CONSTANT' 180) #(948 'CONSTANTS' 181) #(948 'CONTEXT' 182) #(948 'CONTEXTS' 183) #(948 'CONTINUE' 184) #(948 'CONTROL' 185) #(948 'CONTROLS' 186) #(948 'CONV' 187) #(948 'CONVERSION' 188) #(948 'CONVERT' 189) #(948 'COPIES' 190) #(948 'COPY' 191) #(948 'CORRESPONDING' 192) #(948 'COUNT' 193) #(948 'COUNTRY' 194) #(948 'COVER' 195) #(948 'CP' 196) #(948 'CPI' 197) #(948 'CREATE' 198) #(948 'CRITICAL' 199) #(948 'CS' 200) #(948 'CURRENCY' 201) #(948 'CURRENT' 202) #(948 'CURSOR' 203) #(948 'DANGEROUS' 205) #(948 'DATA' 206) #(948 'DATABASE' 207) #(948 'DATAINFO' 208) #(948 'DATASET' 209) #(948 'DATE' 210) #(948 'DAYLIGHT' 211) #(948 'DB2' 212) #(948 'DB6' 213) #(948 'DD/MM/YY' 214) #(948 'DD/MM/YYYY' 215) #(948 'DDL' 216) #(948 'DDMMYY' 217) #(948 'DEALLOCATE' 218) #(948 'DEC' 219) #(948 'DECIMALS' 220) #(948 'DECLARATIONS' 221) #(948 'DEEP' 222) #(948 'DEFAULT' 223) #(948 'DEFERRED' 224) #(948 'DEFINE' 225) #(948 'DEFINITION' 226) #(948 'DELETE' 227) #(948 'DELETING' 228) #(948 'DEMAND' 229) #(948 'DEPARTMENT' 230) #(948 'DESCENDING' 231) #(948 'DESCRIBE' 232) #(948 'DESTINATION' 233) #(948 'DETAIL' 234) #(948 'DETERMINATION' 235) #(948 'DETERMINE' 236) #(948 'DIALOG' 237) #(948 'DID' 238) #(948 'DIRECTORY' 239) #(948 'DISCARDING' 240) #(948 'DISPLAY' 241) #(948 'DISTANCE' 243) #(948 'DISTINCT' 244) #(948 'DIV' 245) #(948 'DIVIDE' 246) #(948 'DO' 247) #(948 'DUMMY' 248) #(948 'DUPLICATE' 249) #(948 'DUPLICATES' 250) #(948 'DURATION' 251) #(948 'DURING' 252) #(948 'DYNPRO' 253) #(948 'EARLY' 254) #(948 'EDIT' 255) #(948 'ELSE' 257) #(948 'ELSEIF' 258) #(948 'EMPTY' 259) #(948 'ENABLED' 260) #(948 'ENABLING' 261) #(948 'ENCODING' 262) #(948 'END' 263) #(948 'ENDAT' 270) #(948 'ENDCASE' 271) #(948 'ENDCATCH' 272) #(948 'ENDCHAIN' 273) #(948 'ENDCLASS' 274) #(948 'ENDDO' 275) #(948 'ENDENHANCEMENT' 276) #(948 'ENDEXEC' 277) #(948 'ENDFORM' 278) #(948 'ENDFUNCTION' 279) #(948 'ENDIAN' 280) #(948 'ENDIF' 281) #(948 'ENDING' 282) #(948 'ENDINTERFACE' 283) #(948 'ENDLOOP' 284) #(948 'ENDMETHOD' 285) #(948 'ENDMODULE' 286) #(948 'ENDON' 287) #(948 'ENDPROVIDE' 288) #(948 'ENDSELECT' 289) #(948 'ENDTRY' 290) #(948 'ENDWHILE' 291) #(948 'ENDWITH' 292) #(948 'ENGINEERING' 293) #(948 'ENHANCEMENT' 294) #(948 'ENHANCEMENTS' 297) #(948 'ENTITIES' 298) #(948 'ENTITY' 299) #(948 'ENTRIES' 300) #(948 'ENTRY' 301) #(948 'ENUM' 302) #(948 'ENVIRONMENT' 303) #(948 'EQ' 304) #(948 'EQUIV' 305) #(948 'ERRORS' 306) #(948 'ESCAPE' 307) #(948 'ESCAPING' 308) #(948 'EVENT' 309) #(948 'EVENTS' 310) #(948 'EXACT' 311) #(948 'EXCEPT' 312) #(948 'EXCEPTION' 313) #(948 'EXCEPTIONS' 315) #(948 'EXCLUDE' 316) #(948 'EXCLUDING' 317) #(948 'EXEC' 318) #(948 'EXECUTE' 319) #(948 'EXISTS' 320) #(948 'EXIT' 321) #(948 'EXPANDING' 323) #(948 'EXPIRATION' 324) #(948 'EXPLICIT' 325) #(948 'EXPONENT' 326) #(948 'EXPORT' 327) #(948 'EXPORTING' 328) #(948 'EXTENDED' 329) #(948 'EXTENSION' 330) #(948 'EXTRACT' 331) #(948 'FAIL' 332) #(948 'FAILED' 333) #(948 'FEATURES' 334) #(948 'FETCH' 335) #(948 'FIELD' 336) #(948 'FIELDS' 340) #(948 'FILE' 341) #(948 'FILL' 342) #(948 'FILTER' 343) #(948 'FILTERS' 344) #(948 'FINAL' 345) #(948 'FIND' 346) #(948 'FIRST' 347) #(948 'FLOOR' 881) #(948 'FLTP' 350) #(948 'FLUSH' 351) #(948 'FONT' 352) #(948 'FOR' 353) #(948 'FORM' 354) #(948 'FORMAT' 355) #(948 'FORWARD' 356) #(948 'FOUND' 357) #(948 'FRAME' 358) #(948 'FRAMES' 359) #(948 'FREE' 360) #(948 'FRIENDS' 361) #(948 'FROM' 362) #(948 'FULL' 363) #(948 'FUNCTION' 364) #(948 'FURTHER' 366) #(948 'GE' 367) #(948 'GENERATE' 368) #(948 'GET' 369) #(948 'GIVING' 370) #(948 'GLOBAL' 371) #(948 'GRAPH' 372) #(948 'GROUP' 373) #(948 'GROUPS' 374) #(948 'GT' 375) #(948 'HANDLE' 376) #(948 'HANDLER' 377) #(948 'HARMLESS' 378) #(948 'HASHED' 379) #(948 'HAVING' 380) #(948 'HDB' 381) #(948 'HEADER' 382) #(948 'HEADERS' 383) #(948 'HEADING' 384) #(948 'HIDE' 387) #(948 'HIERARCHY' 388) #(948 'HIGH' 389) #(948 'HINT' 390) #(948 'HOLD' 391) #(948 'HOTSPOT' 392) #(948 'ICON' 393) #(948 'ID' 394) #(948 'IDENTIFICATION' 395) #(948 'IDENTIFIER' 396) #(948 'IDS' 397) #(948 'IF' 398) #(948 'IGNORE' 399) #(948 'IGNORING' 400) #(948 'IMMEDIATELY' 401) #(948 'IMPLEMENTATION' 402) #(948 'IMPLEMENTED' 403) #(948 'IMPLICIT' 404) #(948 'IMPORT' 405) #(948 'IMPORTING' 406) #(948 'IN' 407) #(948 'INACTIVE' 408) #(948 'INCL' 409) #(948 'INCLUDE' 410) #(948 'INCLUDES' 411) #(948 'INCREMENT' 412) #(948 'INDEX' 413) #(948 'INFORMIX' 415) #(948 'INFOTYPES' 416) #(948 'INHERITING' 417) #(948 'INIT' 418) #(948 'INITIAL' 419) #(948 'INITIALIZATION' 420) #(948 'INNER' 421) #(948 'INPUT' 422) #(948 'INSERT' 423) #(948 'INSTANCE' 424) #(948 'INSTANCES' 425) #(948 'INT2' 426) #(948 'INT4' 427) #(948 'INT8' 428) #(948 'INTENSIFIED' 429) #(948 'INTERFACE' 430) #(948 'INTERFACES' 431) #(948 'INTERNAL' 432) #(948 'INTERVALS' 433) #(948 'INTO' 434) #(948 'INVERSE' 435) #(948 'IS' 437) #(948 'ISO' 438) #(948 'JOB' 439) #(948 'JOIN' 440) #(948 'KEEP' 441) #(948 'KEEPING' 442) #(948 'KERNEL' 443) #(948 'KEY' 444) #(948 'KEYS' 445) #(948 'KEYWORDS' 446) #(948 'KIND' 447) #(948 'LANGUAGE' 448) #(948 'LAST' 449) #(948 'LATE' 450) #(948 'LAYOUT' 451) #(948 'LE' 452) #(948 'LEADING' 453) #(948 'LEAVE' 454) #(948 'LEFT' 455) #(948 'LEFTPLUS' 457) #(948 'LEFTSPACE' 458) #(948 'LEGACY' 459) #(948 'LENGTH' 460) #(948 'LET' 461) #(948 'LEVEL' 462) #(948 'LEVELS' 463) #(948 'LIKE' 464) #(948 'LINE' 465) #(948 'LINEFEED' 469) #(948 'LINES' 470) #(948 'LINK' 471) #(948 'LIST' 472) #(948 'LISTBOX' 474) #(948 'LOAD' 475) #(948 'LOCAL' 477) #(948 'LOCALE' 478) #(948 'LOCK' 479) #(948 'LOCKS' 480) #(948 'LOGFILE' 482) #(948 'LOGICAL' 483) #(948 'LONG' 484) #(948 'LOOP' 485) #(948 'LOW' 486) #(948 'LOWER' 487) #(948 'LPI' 488) #(948 'LT' 489) #(948 'LTRIM' 882) #(948 'MAIN' 491) #(948 'MAPPED' 492) #(948 'MAPPING' 493) #(948 'MARGIN' 494) #(948 'MARK' 495) #(948 'MASK' 496) #(948 'MATCH' 497) #(948 'MATCHCODE' 498) #(948 'MAX' 499) #(948 'MAXIMUM' 500) #(948 'MEDIUM' 501) #(948 'MEMBERS' 502) #(948 'MEMORY' 503) #(948 'MESH' 504) #(948 'MESSAGE' 505) #(948 'MESSAGES' 507) #(948 'MESSAGING' 508) #(948 'METHOD' 509) #(948 'METHODS' 510) #(948 'MIN' 511) #(948 'MM/DD/YY' 512) #(948 'MM/DD/YYYY' 513) #(948 'MMDDYY' 514) #(948 'MOD' 515) #(948 'MODE' 516) #(948 'MODIF' 517) #(948 'MODIFIER' 518) #(948 'MODIFY' 519) #(948 'MODULE' 520) #(948 'MOVE' 521) #(948 'MSSQLNT' 523) #(948 'MULTIPLY' 524) #(948 'NA' 526) #(948 'NAME' 527) #(948 'NAMETAB' 528) #(948 'NATIVE' 529) #(948 'NE' 530) #(948 'NESTED' 531) #(948 'NESTING' 532) #(948 'NEW' 533) #(948 'NEXT' 537) #(948 'NO' 538) #(948 'NODES' 550) #(948 'NOT' 553) #(948 'NP' 554) #(948 'NS' 555) #(948 'NULL' 556) #(948 'NUMBER' 557) #(948 'NUMBERING' 558) #(948 'NUMC' 559) #(948 'OBJECT' 561) #(948 'OBJECTS' 562) #(948 'OBJMGR' 563) #(948 'OBLIGATORY' 564) #(948 'OCCURENCE' 565) #(948 'OCCURENCES' 566) #(948 'OCCURRENCE' 567) #(948 'OCCURRENCES' 568) #(948 'OCCURS' 569) #(948 'OF' 570) #(948 'OFF' 571) #(948 'OFFSET' 572) #(948 'ON' 573) #(948 'ONE' 574) #(948 'ONLY' 575) #(948 'OPEN' 576) #(948 'OPTION' 577) #(948 'OPTIONAL' 578) #(948 'OPTIONS' 579) #(948 'OR' 580) #(948 'ORACLE' 581) #(948 'ORDER' 582) #(948 'OTHERS' 583) #(948 'OUT' 584) #(948 'OUTER' 585) #(948 'OUTPUT' 586) #(948 'OVERFLOW' 588) #(948 'OVERLAY' 589) #(948 'PACK' 590) #(948 'PACKAGE' 591) #(948 'PAD' 592) #(948 'PADDING' 593) #(948 'PAGE' 594) #(948 'PAGES' 595) #(948 'PARAMETER' 596) #(948 'PARAMETERS' 598) #(948 'PART' 599) #(948 'PARTIALLY' 600) #(948 'PCRE' 601) #(948 'PERCENTAGE' 602) #(948 'PERFORM' 603) #(948 'PERFORMING' 604) #(948 'PERMISSIONS' 605) #(948 'PLACES' 607) #(948 'POOL' 608) #(948 'POSITION' 609) #(948 'POS_HIGH' 610) #(948 'POS_LOW' 611) #(948 'PRAGMAS' 612) #(948 'PRECHECK' 613) #(948 'PRECOMPILED' 614) #(948 'PREFERRED' 615) #(948 'PRESERVING' 616) #(948 'PRIMARY' 617) #(948 'PRINT' 618) #(948 'PRIVATE' 620) #(948 'PRIVILEGED' 621) #(948 'PROCEDURE' 622) #(948 'PROGRAM' 623) #(948 'PROPERTY' 624) #(948 'PROTECTED' 625) #(948 'PROVIDE' 626) #(948 'PUBLIC' 627) #(948 'PUSH' 628) #(948 'PUSHBUTTON' 629) #(948 'PUT' 630) #(948 'QUEUEONLY' 632) #(948 'QUICKINFO' 633) #(948 'RADIOBUTTON' 634) #(948 'RAISE' 635) #(948 'RAISING' 636) #(948 'RANGE' 637) #(948 'RANGES' 638) #(948 'RAW' 639) #(948 'READ' 640) #(948 'RECEIVE' 642) #(948 'RECEIVED' 643) #(948 'RECEIVER' 644) #(948 'RECEIVING' 645) #(948 'REDEFINITION' 646) #(948 'REDUCE' 647) #(948 'REF' 648) #(948 'REFERENCE' 649) #(948 'REFRESH' 650) #(948 'REGEX' 651) #(948 'REJECT' 652) #(948 'RELATING' 653) #(948 'RENAMING' 654) #(948 'REPLACE' 655) #(948 'REPLACEMENT' 656) #(948 'REPLACING' 657) #(948 'REPORT' 658) #(948 'REPORTED' 659) #(948 'REQUEST' 660) #(948 'REQUESTED' 661) #(948 'REQUIRED' 662) #(948 'RESERVE' 663) #(948 'RESET' 664) #(948 'RESOLUTION' 665) #(948 'RESPECTING' 666) #(948 'RESPONSE' 667) #(948 'RESPONSES' 668) #(948 'RESULT' 669) #(948 'RESULTS' 670) #(948 'RESUMABLE' 671) #(948 'RESUME' 672) #(948 'RETRY' 673) #(948 'RETURN' 674) #(948 'RETURNCODE' 675) #(948 'RETURNING' 676) #(948 'RIGHT' 677) #(948 'RIGHTPLUS' 679) #(948 'RIGHTSPACE' 680) #(948 'RISK' 681) #(948 'ROLLBACK' 682) #(948 'ROUND' 683) #(948 'ROWS' 684) #(948 'RTRIM' 883) #(948 'RUN' 685) #(948 'SAP' 686) #(948 'SAVE' 688) #(948 'SAVING' 689) #(948 'SCALE_PRESERVING' 690) #(948 'SCALE_PRESERVING_SCIENTIFIC' 691) #(948 'SCAN' 692) #(948 'SCIENTIFIC' 693) #(948 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(948 'SCREEN' 695) #(948 'SCROLL' 696) #(948 'SCROLLING' 698) #(948 'SEARCH' 699) #(948 'SECONDARY' 700) #(948 'SECONDS' 701) #(948 'SECTION' 702) #(948 'SELECT' 703) #(948 'SELECTION' 705) #(948 'SELECTIONS' 710) #(948 'SEND' 711) #(948 'SEPARATE' 712) #(948 'SEPARATED' 713) #(948 'SESSION' 714) #(948 'SET' 715) #(948 'SHARED' 716) #(948 'SHIFT' 717) #(948 'SHORT' 718) #(948 'SHORTDUMP' 719) #(948 'SIGN' 721) #(948 'SIGN_AS_POSTFIX' 722) #(948 'SIMPLE' 723) #(948 'SIMULATION' 724) #(948 'SINGLE' 725) #(948 'SIZE' 726) #(948 'SKIP' 727) #(948 'SKIPPING' 728) #(948 'SMART' 729) #(948 'SOME' 730) #(948 'SORT' 731) #(948 'SORTABLE' 732) #(948 'SORTED' 733) #(948 'SOURCE' 734) #(948 'SPACE' 735) #(948 'SPECIFIED' 736) #(948 'SPLIT' 737) #(948 'SPOOL' 738) #(948 'SPOTS' 739) #(948 'SQL' 740) #(948 'SQLSCRIPT' 741) #(948 'STABLE' 742) #(948 'STAMP' 743) #(948 'STANDARD' 744) #(948 'STARTING' 746) #(948 'STATE' 747) #(948 'STATEMENT' 748) #(948 'STATEMENTS' 749) #(948 'STATIC' 750) #(948 'STATICS' 751) #(948 'STATUSINFO' 752) #(948 'STEP' 753) #(948 'STOP' 755) #(948 'STRUCTURE' 756) #(948 'STRUCTURES' 757) #(948 'STYLE' 758) #(948 'SUBKEY' 759) #(948 'SUBMATCHES' 760) #(948 'SUBMIT' 761) #(948 'SUBROUTINE' 762) #(948 'SUBSCREEN' 763) #(948 'SUBSTRING' 764) #(948 'SUBTRACT' 765) #(948 'SUFFIX' 767) #(948 'SUM' 768) #(948 'SUMMARY' 769) #(948 'SUPPLIED' 770) #(948 'SUPPLY' 771) #(948 'SUPPRESS' 772) #(948 'SWITCH' 773) #(948 'SYBASE' 774) #(948 'SYMBOL' 775) #(948 'T000' 779) #(948 'TAB' 780) #(948 'TABBED' 781) #(948 'TABLE' 782) #(948 'TABLES' 783) #(948 'TABLEVIEW' 784) #(948 'TABSTRIP' 785) #(948 'TARGET' 786) #(948 'TASK' 787) #(948 'TASKS' 788) #(948 'TEST' 789) #(948 'TESTING' 792) #(948 'TEXT' 793) #(948 'TEXTPOOL' 794) #(948 'THEN' 795) #(948 'THROW' 796) #(948 'TIME' 797) #(948 'TIMES' 798) #(948 'TIMESTAMP' 799) #(948 'TIMEZONE' 800) #(948 'TITLE' 801) #(948 'TITLEBAR' 802) #(948 'TO' 803) #(948 'TOKENIZATION' 804) #(948 'TOKENS' 805) #(948 'TRAILING' 810) #(948 'TRANSACTION' 811) #(948 'TRANSFER' 812) #(948 'TRANSFORMATION' 813) #(948 'TRANSLATE' 814) #(948 'TRANSPORTING' 815) #(948 'TRMAC' 816) #(948 'TRUNCATION' 817) #(948 'TRY' 818) #(948 'TYPE' 819) #(948 'TYPES' 822) #(948 'ULINE' 823) #(948 'UNASSIGN' 824) #(948 'UNDER' 825) #(948 'UNICODE' 826) #(948 'UNION' 827) #(948 'UNIQUE' 828) #(948 'UNIT' 829) #(948 'UNIX' 830) #(948 'UNPACK' 831) #(948 'UNTIL' 832) #(948 'UNWIND' 833) #(948 'UP' 834) #(948 'UPDATE' 835) #(948 'UPPER' 836) #(948 'USER' 837) #(948 'USING' 839) #(948 'UTCLONG' 840) #(948 'UUID' 884) #(948 'VALID' 842) #(948 'VALIDATE' 843) #(948 'VALUE' 844) #(948 'VALUES' 846) #(948 'VARY' 847) #(948 'VARYING' 848) #(948 'VERSION' 849) #(948 'VIA' 850) #(948 'VISIBLE' 851) #(948 'WAIT' 852) #(948 'WHEN' 853) #(948 'WHERE' 854) #(948 'WHILE' 855) #(948 'WIDTH' 856) #(948 'WINDOW' 857) #(948 'WINDOWS' 858) #(948 'WITH' 859) #(948 'WITHOUT' 862) #(948 'WORD' 863) #(948 'WORK' 864) #(948 'WORKSPACE' 865) #(948 'WRITE' 866) #(948 'WRITER' 867) #(948 'XML' 868) #(948 'XSD' 869) #(948 'XSDBOOL' 870) #(948 'YES' 871) #(948 'YYMMDD' 872) #(948 'ZERO' 874) #(948 'ZONE' 875) #(890 'ABS' 876) #(890 'ABSTRACT' 33) #(890 'ACCEPT' 34) #(890 'ACCEPTING' 35) #(890 'ACCESS' 36) #(890 'ACCORDING' 37) #(890 'ACTION' 38) #(890 'ACTIVATION' 39) #(890 'ACTUAL' 40) #(890 'ADABAS' 41) #(890 'ADD' 42) #(890 'ADJACENT' 44) #(890 'ALIAS' 45) #(890 'ALIASES' 46) #(890 'ALIGN' 47) #(890 'ALL' 48) #(890 'ALLOCATE' 49) #(890 'ALPHA' 50) #(890 'AMDP' 51) #(890 'ANALYSIS' 52) #(890 'ANALYZER' 53) #(890 'AND' 54) #(890 'ANY' 55) #(890 'APPEND' 56) #(890 'APPENDING' 57) #(890 'APPLICATION' 58) #(890 'ARCHIVE' 59) #(890 'AREA' 60) #(890 'ARITHMETIC' 61) #(890 'AS' 62) #(890 'AS400' 63) #(890 'ASCENDING' 64) #(890 'ASSERT' 65) #(890 'ASSIGN' 66) #(890 'ASSIGNED' 67) #(890 'ASSIGNING' 68) #(890 'ASSOCIATION' 69) #(890 'ASYNCHRONOUS' 70) #(890 'AT' 71) #(890 'ATTRIBUTES' 72) #(890 'AUGMENTING' 73) #(890 'AUTHORITY' 74) #(890 'AUTHORIZATION' 76) #(890 'AUTO' 77) #(890 'AVG' 78) #(890 'BACK' 79) #(890 'BACKGROUND' 80) #(890 'BACKWARD' 81) #(890 'BADI' 82) #(890 'BASE' 83) #(890 'BEFORE' 84) #(890 'BEGIN' 85) #(890 'BEHAVIOR' 86) #(890 'BETWEEN' 87) #(890 'BINARY' 88) #(890 'BIT' 89) #(890 'BLANK' 94) #(890 'BLANKS' 95) #(890 'BLOCK' 96) #(890 'BLOCKS' 97) #(890 'BOOLC' 98) #(890 'BOUND' 99) #(890 'BOUNDARIES' 100) #(890 'BOUNDS' 101) #(890 'BOXED' 102) #(890 'BREAK' 103) #(890 'BUFFER' 105) #(890 'BY' 106) #(890 'BYPASSING' 107) #(890 'BYTE' 108) #(890 'CA' 116) #(890 'CALL' 117) #(890 'CALLING' 118) #(890 'CASE' 119) #(890 'CAST' 120) #(890 'CASTING' 121) #(890 'CATCH' 122) #(890 'CDS' 123) #(890 'CEIL' 877) #(890 'CENTER' 124) #(890 'CENTERED' 125) #(890 'CHAIN' 126) #(890 'CHANGE' 129) #(890 'CHANGING' 130) #(890 'CHANNELS' 131) #(890 'CHAR' 132) #(890 'CHARACTER' 134) #(890 'CHECK' 135) #(890 'CHECKBOX' 136) #(890 'CID' 137) #(890 'CIRCULAR' 138) #(890 'CLASS' 139) #(890 'CLEANUP' 143) #(890 'CLEAR' 144) #(890 'CLIENT' 145) #(890 'CLIENTS' 146) #(890 'CLOCK' 147) #(890 'CLONE' 148) #(890 'CLOSE' 149) #(890 'CN' 150) #(890 'CO' 151) #(890 'COALESCE' 878) #(890 'CODE' 152) #(890 'COLLECT' 153) #(890 'COLOR' 154) #(890 'COLUMN' 155) #(890 'COLUMNS' 156) #(890 'COL_BACKGROUND' 157) #(890 'COL_GROUP' 158) #(890 'COL_HEADING' 159) #(890 'COL_KEY' 160) #(890 'COL_NEGATIVE' 161) #(890 'COL_NORMAL' 162) #(890 'COL_POSITIVE' 163) #(890 'COL_TOTAL' 164) #(890 'COMMENT' 165) #(890 'COMMENTS' 166) #(890 'COMMIT' 167) #(890 'COMMON' 168) #(890 'COMMUNICATION' 169) #(890 'COMPARING' 170) #(890 'COMPONENT' 171) #(890 'COMPONENTS' 172) #(890 'COMPRESSION' 173) #(890 'COMPUTE' 174) #(890 'CONCAT' 879) #(890 'CONCATENATE' 175) #(890 'CONCAT_WITH_SPACE' 880) #(890 'COND' 176) #(890 'CONDENSE' 177) #(890 'CONDITION' 178) #(890 'CONNECTION' 179) #(890 'CONSTANT' 180) #(890 'CONSTANTS' 181) #(890 'CONTEXT' 182) #(890 'CONTEXTS' 183) #(890 'CONTINUE' 184) #(890 'CONTROL' 185) #(890 'CONTROLS' 186) #(890 'CONV' 187) #(890 'CONVERSION' 188) #(890 'CONVERT' 189) #(890 'COPIES' 190) #(890 'COPY' 191) #(890 'CORRESPONDING' 192) #(890 'COUNT' 193) #(890 'COUNTRY' 194) #(890 'COVER' 195) #(890 'CP' 196) #(890 'CPI' 197) #(890 'CREATE' 198) #(890 'CRITICAL' 199) #(890 'CS' 200) #(890 'CURRENCY' 201) #(890 'CURRENT' 202) #(890 'CURSOR' 203) #(890 'DANGEROUS' 205) #(890 'DATA' 206) #(890 'DATABASE' 207) #(890 'DATAINFO' 208) #(890 'DATASET' 209) #(890 'DATE' 210) #(890 'DAYLIGHT' 211) #(890 'DB2' 212) #(890 'DB6' 213) #(890 'DDL' 216) #(890 'DDMMYY' 217) #(890 'DEALLOCATE' 218) #(890 'DEC' 219) #(890 'DECIMALS' 220) #(890 'DECLARATIONS' 221) #(890 'DEEP' 222) #(890 'DEFAULT' 223) #(890 'DEFERRED' 224) #(890 'DEFINE' 225) #(890 'DEFINITION' 226) #(890 'DELETE' 227) #(890 'DELETING' 228) #(890 'DEMAND' 229) #(890 'DEPARTMENT' 230) #(890 'DESCENDING' 231) #(890 'DESCRIBE' 232) #(890 'DESTINATION' 233) #(890 'DETAIL' 234) #(890 'DETERMINATION' 235) #(890 'DETERMINE' 236) #(890 'DIALOG' 237) #(890 'DID' 238) #(890 'DIRECTORY' 239) #(890 'DISCARDING' 240) #(890 'DISPLAY' 241) #(890 'DISTANCE' 243) #(890 'DISTINCT' 244) #(890 'DIV' 245) #(890 'DIVIDE' 246) #(890 'DO' 247) #(890 'DUMMY' 248) #(890 'DUPLICATE' 249) #(890 'DUPLICATES' 250) #(890 'DURATION' 251) #(890 'DURING' 252) #(890 'DYNPRO' 253) #(890 'EARLY' 254) #(890 'EDIT' 255) #(890 'ELSE' 257) #(890 'ELSEIF' 258) #(890 'EMPTY' 259) #(890 'ENABLED' 260) #(890 'ENABLING' 261) #(890 'ENCODING' 262) #(890 'END' 263) #(890 'ENDAT' 270) #(890 'ENDCASE' 271) #(890 'ENDCATCH' 272) #(890 'ENDCHAIN' 273) #(890 'ENDCLASS' 274) #(890 'ENDDO' 275) #(890 'ENDENHANCEMENT' 276) #(890 'ENDEXEC' 277) #(890 'ENDFORM' 278) #(890 'ENDFUNCTION' 279) #(890 'ENDIAN' 280) #(890 'ENDIF' 281) #(890 'ENDING' 282) #(890 'ENDINTERFACE' 283) #(890 'ENDLOOP' 284) #(890 'ENDMETHOD' 285) #(890 'ENDMODULE' 286) #(890 'ENDON' 287) #(890 'ENDPROVIDE' 288) #(890 'ENDSELECT' 289) #(890 'ENDTRY' 290) #(890 'ENDWHILE' 291) #(890 'ENDWITH' 292) #(890 'ENGINEERING' 293) #(890 'ENHANCEMENT' 294) #(890 'ENHANCEMENTS' 297) #(890 'ENTITIES' 298) #(890 'ENTITY' 299) #(890 'ENTRIES' 300) #(890 'ENTRY' 301) #(890 'ENUM' 302) #(890 'ENVIRONMENT' 303) #(890 'EQ' 304) #(890 'EQUIV' 305) #(890 'ERRORS' 306) #(890 'ESCAPE' 307) #(890 'ESCAPING' 308) #(890 'EVENT' 309) #(890 'EVENTS' 310) #(890 'EXACT' 311) #(890 'EXCEPT' 312) #(890 'EXCEPTION' 313) #(890 'EXCEPTIONS' 315) #(890 'EXCLUDE' 316) #(890 'EXCLUDING' 317) #(890 'EXEC' 318) #(890 'EXECUTE' 319) #(890 'EXISTS' 320) #(890 'EXIT' 321) #(890 'EXPANDING' 323) #(890 'EXPIRATION' 324) #(890 'EXPLICIT' 325) #(890 'EXPONENT' 326) #(890 'EXPORT' 327) #(890 'EXPORTING' 328) #(890 'EXTENDED' 329) #(890 'EXTENSION' 330) #(890 'EXTRACT' 331) #(890 'FAIL' 332) #(890 'FAILED' 333) #(890 'FEATURES' 334) #(890 'FETCH' 335) #(890 'FIELD' 336) #(890 'FIELDS' 340) #(890 'FILE' 341) #(890 'FILL' 342) #(890 'FILTER' 343) #(890 'FILTERS' 344) #(890 'FINAL' 345) #(890 'FIND' 346) #(890 'FIRST' 347) #(890 'FLOOR' 881) #(890 'FLTP' 350) #(890 'FLUSH' 351) #(890 'FONT' 352) #(890 'FOR' 353) #(890 'FORM' 354) #(890 'FORMAT' 355) #(890 'FORWARD' 356) #(890 'FOUND' 357) #(890 'FRAME' 358) #(890 'FRAMES' 359) #(890 'FREE' 360) #(890 'FRIENDS' 361) #(890 'FROM' 362) #(890 'FULL' 363) #(890 'FUNCTION' 364) #(890 'FURTHER' 366) #(890 'GE' 367) #(890 'GENERATE' 368) #(890 'GET' 369) #(890 'GIVING' 370) #(890 'GLOBAL' 371) #(890 'GRAPH' 372) #(890 'GROUP' 373) #(890 'GROUPS' 374) #(890 'GT' 375) #(890 'HANDLE' 376) #(890 'HANDLER' 377) #(890 'HARMLESS' 378) #(890 'HASHED' 379) #(890 'HAVING' 380) #(890 'HDB' 381) #(890 'HEADER' 382) #(890 'HEADERS' 383) #(890 'HEADING' 384) #(890 'HIDE' 387) #(890 'HIERARCHY' 388) #(890 'HIGH' 389) #(890 'HINT' 390) #(890 'HOLD' 391) #(890 'HOTSPOT' 392) #(890 'ICON' 393) #(890 'ID' 394) #(890 'IDENTIFICATION' 395) #(890 'IDENTIFIER' 396) #(890 'IDS' 397) #(890 'IF' 398) #(890 'IGNORE' 399) #(890 'IGNORING' 400) #(890 'IMMEDIATELY' 401) #(890 'IMPLEMENTATION' 402) #(890 'IMPLEMENTED' 403) #(890 'IMPLICIT' 404) #(890 'IMPORT' 405) #(890 'IMPORTING' 406) #(890 'IN' 407) #(890 'INACTIVE' 408) #(890 'INCL' 409) #(890 'INCLUDE' 410) #(890 'INCLUDES' 411) #(890 'INCREMENT' 412) #(890 'INDEX' 413) #(890 'INFORMIX' 415) #(890 'INFOTYPES' 416) #(890 'INHERITING' 417) #(890 'INIT' 418) #(890 'INITIAL' 419) #(890 'INITIALIZATION' 420) #(890 'INNER' 421) #(890 'INPUT' 422) #(890 'INSERT' 423) #(890 'INSTANCE' 424) #(890 'INSTANCES' 425) #(890 'INT2' 426) #(890 'INT4' 427) #(890 'INT8' 428) #(890 'INTENSIFIED' 429) #(890 'INTERFACE' 430) #(890 'INTERFACES' 431) #(890 'INTERNAL' 432) #(890 'INTERVALS' 433) #(890 'INTO' 434) #(890 'INVERSE' 435) #(890 'IS' 437) #(890 'ISO' 438) #(890 'JOB' 439) #(890 'JOIN' 440) #(890 'KEEP' 441) #(890 'KEEPING' 442) #(890 'KERNEL' 443) #(890 'KEY' 444) #(890 'KEYS' 445) #(890 'KEYWORDS' 446) #(890 'KIND' 447) #(890 'LANGUAGE' 448) #(890 'LAST' 449) #(890 'LATE' 450) #(890 'LAYOUT' 451) #(890 'LE' 452) #(890 'LEADING' 453) #(890 'LEAVE' 454) #(890 'LEFT' 455) #(890 'LEFTPLUS' 457) #(890 'LEFTSPACE' 458) #(890 'LEGACY' 459) #(890 'LENGTH' 460) #(890 'LET' 461) #(890 'LEVEL' 462) #(890 'LEVELS' 463) #(890 'LIKE' 464) #(890 'LINE' 465) #(890 'LINEFEED' 469) #(890 'LINES' 470) #(890 'LINK' 471) #(890 'LIST' 472) #(890 'LISTBOX' 474) #(890 'LOAD' 475) #(890 'LOCAL' 477) #(890 'LOCALE' 478) #(890 'LOCK' 479) #(890 'LOCKS' 480) #(890 'LOGFILE' 482) #(890 'LOGICAL' 483) #(890 'LONG' 484) #(890 'LOOP' 485) #(890 'LOW' 486) #(890 'LOWER' 487) #(890 'LPI' 488) #(890 'LT' 489) #(890 'LTRIM' 882) #(890 'MAIN' 491) #(890 'MAPPED' 492) #(890 'MAPPING' 493) #(890 'MARGIN' 494) #(890 'MARK' 495) #(890 'MASK' 496) #(890 'MATCH' 497) #(890 'MATCHCODE' 498) #(890 'MAX' 499) #(890 'MAXIMUM' 500) #(890 'MEDIUM' 501) #(890 'MEMBERS' 502) #(890 'MEMORY' 503) #(890 'MESH' 504) #(890 'MESSAGE' 505) #(890 'MESSAGES' 507) #(890 'MESSAGING' 508) #(890 'METHOD' 509) #(890 'METHODS' 510) #(890 'MIN' 511) #(890 'MMDDYY' 514) #(890 'MOD' 515) #(890 'MODE' 516) #(890 'MODIF' 517) #(890 'MODIFIER' 518) #(890 'MODIFY' 519) #(890 'MODULE' 520) #(890 'MOVE' 521) #(890 'MSSQLNT' 523) #(890 'MULTIPLY' 524) #(890 'NA' 526) #(890 'NAME' 527) #(890 'NAMETAB' 528) #(890 'NATIVE' 529) #(890 'NE' 530) #(890 'NESTED' 531) #(890 'NESTING' 532) #(890 'NEW' 533) #(890 'NEXT' 537) #(890 'NO' 538) #(890 'NODES' 550) #(890 'NOT' 553) #(890 'NP' 554) #(890 'NS' 555) #(890 'NULL' 556) #(890 'NUMBER' 557) #(890 'NUMBERING' 558) #(890 'NUMC' 559) #(890 'OBJECT' 561) #(890 'OBJECTS' 562) #(890 'OBJMGR' 563) #(890 'OBLIGATORY' 564) #(890 'OCCURENCE' 565) #(890 'OCCURENCES' 566) #(890 'OCCURRENCE' 567) #(890 'OCCURRENCES' 568) #(890 'OCCURS' 569) #(890 'OF' 570) #(890 'OFF' 571) #(890 'OFFSET' 572) #(890 'ON' 573) #(890 'ONE' 574) #(890 'ONLY' 575) #(890 'OPEN' 576) #(890 'OPTION' 577) #(890 'OPTIONAL' 578) #(890 'OPTIONS' 579) #(890 'OR' 580) #(890 'ORACLE' 581) #(890 'ORDER' 582) #(890 'OTHERS' 583) #(890 'OUT' 584) #(890 'OUTER' 585) #(890 'OUTPUT' 586) #(890 'OVERFLOW' 588) #(890 'OVERLAY' 589) #(890 'PACK' 590) #(890 'PACKAGE' 591) #(890 'PAD' 592) #(890 'PADDING' 593) #(890 'PAGE' 594) #(890 'PAGES' 595) #(890 'PARAMETER' 596) #(890 'PARAMETERS' 598) #(890 'PART' 599) #(890 'PARTIALLY' 600) #(890 'PCRE' 601) #(890 'PERCENTAGE' 602) #(890 'PERFORM' 603) #(890 'PERFORMING' 604) #(890 'PERMISSIONS' 605) #(890 'PLACES' 607) #(890 'POOL' 608) #(890 'POSITION' 609) #(890 'POS_HIGH' 610) #(890 'POS_LOW' 611) #(890 'PRAGMAS' 612) #(890 'PRECHECK' 613) #(890 'PRECOMPILED' 614) #(890 'PREFERRED' 615) #(890 'PRESERVING' 616) #(890 'PRIMARY' 617) #(890 'PRINT' 618) #(890 'PRIVATE' 620) #(890 'PRIVILEGED' 621) #(890 'PROCEDURE' 622) #(890 'PROGRAM' 623) #(890 'PROPERTY' 624) #(890 'PROTECTED' 625) #(890 'PROVIDE' 626) #(890 'PUBLIC' 627) #(890 'PUSH' 628) #(890 'PUSHBUTTON' 629) #(890 'PUT' 630) #(890 'QUEUEONLY' 632) #(890 'QUICKINFO' 633) #(890 'RADIOBUTTON' 634) #(890 'RAISE' 635) #(890 'RAISING' 636) #(890 'RANGE' 637) #(890 'RANGES' 638) #(890 'RAW' 639) #(890 'READ' 640) #(890 'RECEIVE' 642) #(890 'RECEIVED' 643) #(890 'RECEIVER' 644) #(890 'RECEIVING' 645) #(890 'REDEFINITION' 646) #(890 'REDUCE' 647) #(890 'REF' 648) #(890 'REFERENCE' 649) #(890 'REFRESH' 650) #(890 'REGEX' 651) #(890 'REJECT' 652) #(890 'RELATING' 653) #(890 'RENAMING' 654) #(890 'REPLACE' 655) #(890 'REPLACEMENT' 656) #(890 'REPLACING' 657) #(890 'REPORT' 658) #(890 'REPORTED' 659) #(890 'REQUEST' 660) #(890 'REQUESTED' 661) #(890 'REQUIRED' 662) #(890 'RESERVE' 663) #(890 'RESET' 664) #(890 'RESOLUTION' 665) #(890 'RESPECTING' 666) #(890 'RESPONSE' 667) #(890 'RESPONSES' 668) #(890 'RESULT' 669) #(890 'RESULTS' 670) #(890 'RESUMABLE' 671) #(890 'RESUME' 672) #(890 'RETRY' 673) #(890 'RETURN' 674) #(890 'RETURNCODE' 675) #(890 'RETURNING' 676) #(890 'RIGHT' 677) #(890 'RIGHTPLUS' 679) #(890 'RIGHTSPACE' 680) #(890 'RISK' 681) #(890 'ROLLBACK' 682) #(890 'ROUND' 683) #(890 'ROWS' 684) #(890 'RTRIM' 883) #(890 'RUN' 685) #(890 'SAP' 686) #(890 'SAVE' 688) #(890 'SAVING' 689) #(890 'SCALE_PRESERVING' 690) #(890 'SCALE_PRESERVING_SCIENTIFIC' 691) #(890 'SCAN' 692) #(890 'SCIENTIFIC' 693) #(890 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(890 'SCREEN' 695) #(890 'SCROLL' 696) #(890 'SCROLLING' 698) #(890 'SEARCH' 699) #(890 'SECONDARY' 700) #(890 'SECONDS' 701) #(890 'SECTION' 702) #(890 'SELECT' 703) #(890 'SELECTION' 705) #(890 'SELECTIONS' 710) #(890 'SEND' 711) #(890 'SEPARATE' 712) #(890 'SEPARATED' 713) #(890 'SESSION' 714) #(890 'SET' 715) #(890 'SHARED' 716) #(890 'SHIFT' 717) #(890 'SHORT' 718) #(890 'SHORTDUMP' 719) #(890 'SIGN' 721) #(890 'SIGN_AS_POSTFIX' 722) #(890 'SIMPLE' 723) #(890 'SIMULATION' 724) #(890 'SINGLE' 725) #(890 'SIZE' 726) #(890 'SKIP' 727) #(890 'SKIPPING' 728) #(890 'SMART' 729) #(890 'SOME' 730) #(890 'SORT' 731) #(890 'SORTABLE' 732) #(890 'SORTED' 733) #(890 'SOURCE' 734) #(890 'SPACE' 735) #(890 'SPECIFIED' 736) #(890 'SPLIT' 737) #(890 'SPOOL' 738) #(890 'SPOTS' 739) #(890 'SQL' 740) #(890 'SQLSCRIPT' 741) #(890 'STABLE' 742) #(890 'STAMP' 743) #(890 'STANDARD' 744) #(890 'STARTING' 746) #(890 'STATE' 747) #(890 'STATEMENT' 748) #(890 'STATEMENTS' 749) #(890 'STATIC' 750) #(890 'STATICS' 751) #(890 'STATUSINFO' 752) #(890 'STEP' 753) #(890 'STOP' 755) #(890 'STRUCTURE' 756) #(890 'STRUCTURES' 757) #(890 'STYLE' 758) #(890 'SUBKEY' 759) #(890 'SUBMATCHES' 760) #(890 'SUBMIT' 761) #(890 'SUBROUTINE' 762) #(890 'SUBSCREEN' 763) #(890 'SUBSTRING' 764) #(890 'SUBTRACT' 765) #(890 'SUFFIX' 767) #(890 'SUM' 768) #(890 'SUMMARY' 769) #(890 'SUPPLIED' 770) #(890 'SUPPLY' 771) #(890 'SUPPRESS' 772) #(890 'SWITCH' 773) #(890 'SYBASE' 774) #(890 'SYMBOL' 775) #(890 'T000' 779) #(890 'TAB' 780) #(890 'TABBED' 781) #(890 'TABLE' 782) #(890 'TABLES' 783) #(890 'TABLEVIEW' 784) #(890 'TABSTRIP' 785) #(890 'TARGET' 786) #(890 'TASK' 787) #(890 'TASKS' 788) #(890 'TEST' 789) #(890 'TESTING' 792) #(890 'TEXT' 793) #(890 'TEXTPOOL' 794) #(890 'THEN' 795) #(890 'THROW' 796) #(890 'TIME' 797) #(890 'TIMES' 798) #(890 'TIMESTAMP' 799) #(890 'TIMEZONE' 800) #(890 'TITLE' 801) #(890 'TITLEBAR' 802) #(890 'TO' 803) #(890 'TOKENIZATION' 804) #(890 'TOKENS' 805) #(890 'TRAILING' 810) #(890 'TRANSACTION' 811) #(890 'TRANSFER' 812) #(890 'TRANSFORMATION' 813) #(890 'TRANSLATE' 814) #(890 'TRANSPORTING' 815) #(890 'TRMAC' 816) #(890 'TRUNCATION' 817) #(890 'TRY' 818) #(890 'TYPE' 819) #(890 'TYPES' 822) #(890 'ULINE' 823) #(890 'UNASSIGN' 824) #(890 'UNDER' 825) #(890 'UNICODE' 826) #(890 'UNION' 827) #(890 'UNIQUE' 828) #(890 'UNIT' 829) #(890 'UNIX' 830) #(890 'UNPACK' 831) #(890 'UNTIL' 832) #(890 'UNWIND' 833) #(890 'UP' 834) #(890 'UPDATE' 835) #(890 'UPPER' 836) #(890 'USER' 837) #(890 'USING' 839) #(890 'UTCLONG' 840) #(890 'UUID' 884) #(890 'VALID' 842) #(890 'VALIDATE' 843) #(890 'VALUE' 844) #(890 'VALUES' 846) #(890 'VARY' 847) #(890 'VARYING' 848) #(890 'VERSION' 849) #(890 'VIA' 850) #(890 'VISIBLE' 851) #(890 'WAIT' 852) #(890 'WHEN' 853) #(890 'WHERE' 854) #(890 'WHILE' 855) #(890 'WIDTH' 856) #(890 'WINDOW' 857) #(890 'WINDOWS' 858) #(890 'WITH' 859) #(890 'WITHOUT' 862) #(890 'WORD' 863) #(890 'WORK' 864) #(890 'WORKSPACE' 865) #(890 'WRITE' 866) #(890 'WRITER' 867) #(890 'XML' 868) #(890 'XSD' 869) #(890 'XSDBOOL' 870) #(890 'YES' 871) #(890 'YYMMDD' 872) #(890 'ZERO' 874) #(890 'ZONE' 875) #(910 'ABS' 876) #(910 'ABSTRACT' 33) #(910 'ACCEPT' 34) #(910 'ACCEPTING' 35) #(910 'ACCESS' 36) #(910 'ACCORDING' 37) #(910 'ACTION' 38) #(910 'ACTIVATION' 39) #(910 'ACTUAL' 40) #(910 'ADABAS' 41) #(910 'ADD' 42) #(910 'ADJACENT' 44) #(910 'ALIAS' 45) #(910 'ALIASES' 46) #(910 'ALIGN' 47) #(910 'ALL' 48) #(910 'ALLOCATE' 49) #(910 'ALPHA' 50) #(910 'AMDP' 51) #(910 'ANALYSIS' 52) #(910 'ANALYZER' 53) #(910 'AND' 54) #(910 'ANY' 55) #(910 'APPEND' 56) #(910 'APPENDING' 57) #(910 'APPLICATION' 58) #(910 'ARCHIVE' 59) #(910 'AREA' 60) #(910 'ARITHMETIC' 61) #(910 'AS' 62) #(910 'AS400' 63) #(910 'ASCENDING' 64) #(910 'ASSERT' 65) #(910 'ASSIGN' 66) #(910 'ASSIGNED' 67) #(910 'ASSIGNING' 68) #(910 'ASSOCIATION' 69) #(910 'ASYNCHRONOUS' 70) #(910 'AT' 71) #(910 'ATTRIBUTES' 72) #(910 'AUGMENTING' 73) #(910 'AUTHORITY' 74) #(910 'AUTHORIZATION' 76) #(910 'AUTO' 77) #(910 'AVG' 78) #(910 'BACK' 79) #(910 'BACKGROUND' 80) #(910 'BACKWARD' 81) #(910 'BADI' 82) #(910 'BASE' 83) #(910 'BEFORE' 84) #(910 'BEGIN' 85) #(910 'BEHAVIOR' 86) #(910 'BETWEEN' 87) #(910 'BINARY' 88) #(910 'BIT' 89) #(910 'BLANK' 94) #(910 'BLANKS' 95) #(910 'BLOCK' 96) #(910 'BLOCKS' 97) #(910 'BOOLC' 98) #(910 'BOUND' 99) #(910 'BOUNDARIES' 100) #(910 'BOUNDS' 101) #(910 'BOXED' 102) #(910 'BREAK' 103) #(910 'BUFFER' 105) #(910 'BY' 106) #(910 'BYPASSING' 107) #(910 'BYTE' 108) #(910 'CA' 116) #(910 'CALL' 117) #(910 'CALLING' 118) #(910 'CASE' 119) #(910 'CAST' 120) #(910 'CASTING' 121) #(910 'CATCH' 122) #(910 'CDS' 123) #(910 'CEIL' 877) #(910 'CENTER' 124) #(910 'CENTERED' 125) #(910 'CHAIN' 126) #(910 'CHANGE' 129) #(910 'CHANGING' 130) #(910 'CHANNELS' 131) #(910 'CHAR' 132) #(910 'CHARACTER' 134) #(910 'CHECK' 135) #(910 'CHECKBOX' 136) #(910 'CID' 137) #(910 'CIRCULAR' 138) #(910 'CLASS' 139) #(910 'CLEANUP' 143) #(910 'CLEAR' 144) #(910 'CLIENT' 145) #(910 'CLIENTS' 146) #(910 'CLOCK' 147) #(910 'CLONE' 148) #(910 'CLOSE' 149) #(910 'CN' 150) #(910 'CO' 151) #(910 'COALESCE' 878) #(910 'CODE' 152) #(910 'COLLECT' 153) #(910 'COLOR' 154) #(910 'COLUMN' 155) #(910 'COLUMNS' 156) #(910 'COL_BACKGROUND' 157) #(910 'COL_GROUP' 158) #(910 'COL_HEADING' 159) #(910 'COL_KEY' 160) #(910 'COL_NEGATIVE' 161) #(910 'COL_NORMAL' 162) #(910 'COL_POSITIVE' 163) #(910 'COL_TOTAL' 164) #(910 'COMMENT' 165) #(910 'COMMENTS' 166) #(910 'COMMIT' 167) #(910 'COMMON' 168) #(910 'COMMUNICATION' 169) #(910 'COMPARING' 170) #(910 'COMPONENT' 171) #(910 'COMPONENTS' 172) #(910 'COMPRESSION' 173) #(910 'COMPUTE' 174) #(910 'CONCAT' 879) #(910 'CONCATENATE' 175) #(910 'CONCAT_WITH_SPACE' 880) #(910 'COND' 176) #(910 'CONDENSE' 177) #(910 'CONDITION' 178) #(910 'CONNECTION' 179) #(910 'CONSTANT' 180) #(910 'CONSTANTS' 181) #(910 'CONTEXT' 182) #(910 'CONTEXTS' 183) #(910 'CONTINUE' 184) #(910 'CONTROL' 185) #(910 'CONTROLS' 186) #(910 'CONV' 187) #(910 'CONVERSION' 188) #(910 'CONVERT' 189) #(910 'COPIES' 190) #(910 'COPY' 191) #(910 'CORRESPONDING' 192) #(910 'COUNT' 193) #(910 'COUNTRY' 194) #(910 'COVER' 195) #(910 'CP' 196) #(910 'CPI' 197) #(910 'CREATE' 198) #(910 'CRITICAL' 199) #(910 'CS' 200) #(910 'CURRENCY' 201) #(910 'CURRENT' 202) #(910 'CURSOR' 203) #(910 'DANGEROUS' 205) #(910 'DATA' 206) #(910 'DATABASE' 207) #(910 'DATAINFO' 208) #(910 'DATASET' 209) #(910 'DATE' 210) #(910 'DAYLIGHT' 211) #(910 'DB2' 212) #(910 'DB6' 213) #(910 'DDL' 216) #(910 'DDMMYY' 217) #(910 'DEALLOCATE' 218) #(910 'DEC' 219) #(910 'DECIMALS' 220) #(910 'DECLARATIONS' 221) #(910 'DEEP' 222) #(910 'DEFAULT' 223) #(910 'DEFERRED' 224) #(910 'DEFINE' 225) #(910 'DEFINITION' 226) #(910 'DELETE' 227) #(910 'DELETING' 228) #(910 'DEMAND' 229) #(910 'DEPARTMENT' 230) #(910 'DESCENDING' 231) #(910 'DESCRIBE' 232) #(910 'DESTINATION' 233) #(910 'DETAIL' 234) #(910 'DETERMINATION' 235) #(910 'DETERMINE' 236) #(910 'DIALOG' 237) #(910 'DID' 238) #(910 'DIRECTORY' 239) #(910 'DISCARDING' 240) #(910 'DISPLAY' 241) #(910 'DISTANCE' 243) #(910 'DISTINCT' 244) #(910 'DIV' 245) #(910 'DIVIDE' 246) #(910 'DO' 247) #(910 'DUMMY' 248) #(910 'DUPLICATE' 249) #(910 'DUPLICATES' 250) #(910 'DURATION' 251) #(910 'DURING' 252) #(910 'DYNPRO' 253) #(910 'EARLY' 254) #(910 'EDIT' 255) #(910 'ELSE' 257) #(910 'ELSEIF' 258) #(910 'EMPTY' 259) #(910 'ENABLED' 260) #(910 'ENABLING' 261) #(910 'ENCODING' 262) #(910 'END' 263) #(910 'ENDAT' 270) #(910 'ENDCASE' 271) #(910 'ENDCATCH' 272) #(910 'ENDCHAIN' 273) #(910 'ENDCLASS' 274) #(910 'ENDDO' 275) #(910 'ENDENHANCEMENT' 276) #(910 'ENDEXEC' 277) #(910 'ENDFORM' 278) #(910 'ENDFUNCTION' 279) #(910 'ENDIAN' 280) #(910 'ENDIF' 281) #(910 'ENDING' 282) #(910 'ENDINTERFACE' 283) #(910 'ENDLOOP' 284) #(910 'ENDMETHOD' 285) #(910 'ENDMODULE' 286) #(910 'ENDON' 287) #(910 'ENDPROVIDE' 288) #(910 'ENDSELECT' 289) #(910 'ENDTRY' 290) #(910 'ENDWHILE' 291) #(910 'ENDWITH' 292) #(910 'ENGINEERING' 293) #(910 'ENHANCEMENT' 294) #(910 'ENHANCEMENTS' 297) #(910 'ENTITIES' 298) #(910 'ENTITY' 299) #(910 'ENTRIES' 300) #(910 'ENTRY' 301) #(910 'ENUM' 302) #(910 'ENVIRONMENT' 303) #(910 'EQ' 304) #(910 'EQUIV' 305) #(910 'ERRORS' 306) #(910 'ESCAPE' 307) #(910 'ESCAPING' 308) #(910 'EVENT' 309) #(910 'EVENTS' 310) #(910 'EXACT' 311) #(910 'EXCEPT' 312) #(910 'EXCEPTION' 313) #(910 'EXCEPTIONS' 315) #(910 'EXCLUDE' 316) #(910 'EXCLUDING' 317) #(910 'EXEC' 318) #(910 'EXECUTE' 319) #(910 'EXISTS' 320) #(910 'EXIT' 321) #(910 'EXPANDING' 323) #(910 'EXPIRATION' 324) #(910 'EXPLICIT' 325) #(910 'EXPONENT' 326) #(910 'EXPORT' 327) #(910 'EXPORTING' 328) #(910 'EXTENDED' 329) #(910 'EXTENSION' 330) #(910 'EXTRACT' 331) #(910 'FAIL' 332) #(910 'FAILED' 333) #(910 'FEATURES' 334) #(910 'FETCH' 335) #(910 'FIELD' 336) #(910 'FIELDS' 340) #(910 'FILE' 341) #(910 'FILL' 342) #(910 'FILTER' 343) #(910 'FILTERS' 344) #(910 'FINAL' 345) #(910 'FIND' 346) #(910 'FIRST' 347) #(910 'FLOOR' 881) #(910 'FLTP' 350) #(910 'FLUSH' 351) #(910 'FONT' 352) #(910 'FOR' 353) #(910 'FORM' 354) #(910 'FORMAT' 355) #(910 'FORWARD' 356) #(910 'FOUND' 357) #(910 'FRAME' 358) #(910 'FRAMES' 359) #(910 'FREE' 360) #(910 'FRIENDS' 361) #(910 'FROM' 362) #(910 'FULL' 363) #(910 'FUNCTION' 364) #(910 'FURTHER' 366) #(910 'GE' 367) #(910 'GENERATE' 368) #(910 'GET' 369) #(910 'GIVING' 370) #(910 'GLOBAL' 371) #(910 'GRAPH' 372) #(910 'GROUP' 373) #(910 'GROUPS' 374) #(910 'GT' 375) #(910 'HANDLE' 376) #(910 'HANDLER' 377) #(910 'HARMLESS' 378) #(910 'HASHED' 379) #(910 'HAVING' 380) #(910 'HDB' 381) #(910 'HEADER' 382) #(910 'HEADERS' 383) #(910 'HEADING' 384) #(910 'HIDE' 387) #(910 'HIERARCHY' 388) #(910 'HIGH' 389) #(910 'HINT' 390) #(910 'HOLD' 391) #(910 'HOTSPOT' 392) #(910 'ICON' 393) #(910 'ID' 394) #(910 'IDENTIFICATION' 395) #(910 'IDENTIFIER' 396) #(910 'IDS' 397) #(910 'IF' 398) #(910 'IGNORE' 399) #(910 'IGNORING' 400) #(910 'IMMEDIATELY' 401) #(910 'IMPLEMENTATION' 402) #(910 'IMPLEMENTED' 403) #(910 'IMPLICIT' 404) #(910 'IMPORT' 405) #(910 'IMPORTING' 406) #(910 'IN' 407) #(910 'INACTIVE' 408) #(910 'INCL' 409) #(910 'INCLUDE' 410) #(910 'INCLUDES' 411) #(910 'INCREMENT' 412) #(910 'INDEX' 413) #(910 'INFORMIX' 415) #(910 'INFOTYPES' 416) #(910 'INHERITING' 417) #(910 'INIT' 418) #(910 'INITIAL' 419) #(910 'INITIALIZATION' 420) #(910 'INNER' 421) #(910 'INPUT' 422) #(910 'INSERT' 423) #(910 'INSTANCE' 424) #(910 'INSTANCES' 425) #(910 'INT2' 426) #(910 'INT4' 427) #(910 'INT8' 428) #(910 'INTENSIFIED' 429) #(910 'INTERFACE' 430) #(910 'INTERFACES' 431) #(910 'INTERNAL' 432) #(910 'INTERVALS' 433) #(910 'INTO' 434) #(910 'INVERSE' 435) #(910 'IS' 437) #(910 'ISO' 438) #(910 'JOB' 439) #(910 'JOIN' 440) #(910 'KEEP' 441) #(910 'KEEPING' 442) #(910 'KERNEL' 443) #(910 'KEY' 444) #(910 'KEYS' 445) #(910 'KEYWORDS' 446) #(910 'KIND' 447) #(910 'LANGUAGE' 448) #(910 'LAST' 449) #(910 'LATE' 450) #(910 'LAYOUT' 451) #(910 'LE' 452) #(910 'LEADING' 453) #(910 'LEAVE' 454) #(910 'LEFT' 455) #(910 'LEFTPLUS' 457) #(910 'LEFTSPACE' 458) #(910 'LEGACY' 459) #(910 'LENGTH' 460) #(910 'LET' 461) #(910 'LEVEL' 462) #(910 'LEVELS' 463) #(910 'LIKE' 464) #(910 'LINE' 465) #(910 'LINEFEED' 469) #(910 'LINES' 470) #(910 'LINK' 471) #(910 'LIST' 472) #(910 'LISTBOX' 474) #(910 'LOAD' 475) #(910 'LOCAL' 477) #(910 'LOCALE' 478) #(910 'LOCK' 479) #(910 'LOCKS' 480) #(910 'LOGFILE' 482) #(910 'LOGICAL' 483) #(910 'LONG' 484) #(910 'LOOP' 485) #(910 'LOW' 486) #(910 'LOWER' 487) #(910 'LPI' 488) #(910 'LT' 489) #(910 'LTRIM' 882) #(910 'MAIN' 491) #(910 'MAPPED' 492) #(910 'MAPPING' 493) #(910 'MARGIN' 494) #(910 'MARK' 495) #(910 'MASK' 496) #(910 'MATCH' 497) #(910 'MATCHCODE' 498) #(910 'MAX' 499) #(910 'MAXIMUM' 500) #(910 'MEDIUM' 501) #(910 'MEMBERS' 502) #(910 'MEMORY' 503) #(910 'MESH' 504) #(910 'MESSAGE' 505) #(910 'MESSAGES' 507) #(910 'MESSAGING' 508) #(910 'METHOD' 509) #(910 'METHODS' 510) #(910 'MIN' 511) #(910 'MMDDYY' 514) #(910 'MOD' 515) #(910 'MODE' 516) #(910 'MODIF' 517) #(910 'MODIFIER' 518) #(910 'MODIFY' 519) #(910 'MODULE' 520) #(910 'MOVE' 521) #(910 'MSSQLNT' 523) #(910 'MULTIPLY' 524) #(910 'NA' 526) #(910 'NAME' 527) #(910 'NAMETAB' 528) #(910 'NATIVE' 529) #(910 'NE' 530) #(910 'NESTED' 531) #(910 'NESTING' 532) #(910 'NEW' 533) #(910 'NEXT' 537) #(910 'NO' 538) #(910 'NODES' 550) #(910 'NOT' 553) #(910 'NP' 554) #(910 'NS' 555) #(910 'NULL' 556) #(910 'NUMBER' 557) #(910 'NUMBERING' 558) #(910 'NUMC' 559) #(910 'OBJECT' 561) #(910 'OBJECTS' 562) #(910 'OBJMGR' 563) #(910 'OBLIGATORY' 564) #(910 'OCCURENCE' 565) #(910 'OCCURENCES' 566) #(910 'OCCURRENCE' 567) #(910 'OCCURRENCES' 568) #(910 'OCCURS' 569) #(910 'OF' 570) #(910 'OFF' 571) #(910 'OFFSET' 572) #(910 'ON' 573) #(910 'ONE' 574) #(910 'ONLY' 575) #(910 'OPEN' 576) #(910 'OPTION' 577) #(910 'OPTIONAL' 578) #(910 'OPTIONS' 579) #(910 'OR' 580) #(910 'ORACLE' 581) #(910 'ORDER' 582) #(910 'OTHERS' 583) #(910 'OUT' 584) #(910 'OUTER' 585) #(910 'OUTPUT' 586) #(910 'OVERFLOW' 588) #(910 'OVERLAY' 589) #(910 'PACK' 590) #(910 'PACKAGE' 591) #(910 'PAD' 592) #(910 'PADDING' 593) #(910 'PAGE' 594) #(910 'PAGES' 595) #(910 'PARAMETER' 596) #(910 'PARAMETERS' 598) #(910 'PART' 599) #(910 'PARTIALLY' 600) #(910 'PCRE' 601) #(910 'PERCENTAGE' 602) #(910 'PERFORM' 603) #(910 'PERFORMING' 604) #(910 'PERMISSIONS' 605) #(910 'PLACES' 607) #(910 'POOL' 608) #(910 'POSITION' 609) #(910 'POS_HIGH' 610) #(910 'POS_LOW' 611) #(910 'PRAGMAS' 612) #(910 'PRECHECK' 613) #(910 'PRECOMPILED' 614) #(910 'PREFERRED' 615) #(910 'PRESERVING' 616) #(910 'PRIMARY' 617) #(910 'PRINT' 618) #(910 'PRIVATE' 620) #(910 'PRIVILEGED' 621) #(910 'PROCEDURE' 622) #(910 'PROGRAM' 623) #(910 'PROPERTY' 624) #(910 'PROTECTED' 625) #(910 'PROVIDE' 626) #(910 'PUBLIC' 627) #(910 'PUSH' 628) #(910 'PUSHBUTTON' 629) #(910 'PUT' 630) #(910 'QUEUEONLY' 632) #(910 'QUICKINFO' 633) #(910 'RADIOBUTTON' 634) #(910 'RAISE' 635) #(910 'RAISING' 636) #(910 'RANGE' 637) #(910 'RANGES' 638) #(910 'RAW' 639) #(910 'READ' 640) #(910 'RECEIVE' 642) #(910 'RECEIVED' 643) #(910 'RECEIVER' 644) #(910 'RECEIVING' 645) #(910 'REDEFINITION' 646) #(910 'REDUCE' 647) #(910 'REF' 648) #(910 'REFERENCE' 649) #(910 'REFRESH' 650) #(910 'REGEX' 651) #(910 'REJECT' 652) #(910 'RELATING' 653) #(910 'RENAMING' 654) #(910 'REPLACE' 655) #(910 'REPLACEMENT' 656) #(910 'REPLACING' 657) #(910 'REPORT' 658) #(910 'REPORTED' 659) #(910 'REQUEST' 660) #(910 'REQUESTED' 661) #(910 'REQUIRED' 662) #(910 'RESERVE' 663) #(910 'RESET' 664) #(910 'RESOLUTION' 665) #(910 'RESPECTING' 666) #(910 'RESPONSE' 667) #(910 'RESPONSES' 668) #(910 'RESULT' 669) #(910 'RESULTS' 670) #(910 'RESUMABLE' 671) #(910 'RESUME' 672) #(910 'RETRY' 673) #(910 'RETURN' 674) #(910 'RETURNCODE' 675) #(910 'RETURNING' 676) #(910 'RIGHT' 677) #(910 'RIGHTPLUS' 679) #(910 'RIGHTSPACE' 680) #(910 'RISK' 681) #(910 'ROLLBACK' 682) #(910 'ROUND' 683) #(910 'ROWS' 684) #(910 'RTRIM' 883) #(910 'RUN' 685) #(910 'SAP' 686) #(910 'SAVE' 688) #(910 'SAVING' 689) #(910 'SCALE_PRESERVING' 690) #(910 'SCALE_PRESERVING_SCIENTIFIC' 691) #(910 'SCAN' 692) #(910 'SCIENTIFIC' 693) #(910 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(910 'SCREEN' 695) #(910 'SCROLL' 696) #(910 'SCROLLING' 698) #(910 'SEARCH' 699) #(910 'SECONDARY' 700) #(910 'SECONDS' 701) #(910 'SECTION' 702) #(910 'SELECT' 703) #(910 'SELECTION' 705) #(910 'SELECTIONS' 710) #(910 'SEND' 711) #(910 'SEPARATE' 712) #(910 'SEPARATED' 713) #(910 'SESSION' 714) #(910 'SET' 715) #(910 'SHARED' 716) #(910 'SHIFT' 717) #(910 'SHORT' 718) #(910 'SHORTDUMP' 719) #(910 'SIGN' 721) #(910 'SIGN_AS_POSTFIX' 722) #(910 'SIMPLE' 723) #(910 'SIMULATION' 724) #(910 'SINGLE' 725) #(910 'SIZE' 726) #(910 'SKIP' 727) #(910 'SKIPPING' 728) #(910 'SMART' 729) #(910 'SOME' 730) #(910 'SORT' 731) #(910 'SORTABLE' 732) #(910 'SORTED' 733) #(910 'SOURCE' 734) #(910 'SPACE' 735) #(910 'SPECIFIED' 736) #(910 'SPLIT' 737) #(910 'SPOOL' 738) #(910 'SPOTS' 739) #(910 'SQL' 740) #(910 'SQLSCRIPT' 741) #(910 'STABLE' 742) #(910 'STAMP' 743) #(910 'STANDARD' 744) #(910 'STARTING' 746) #(910 'STATE' 747) #(910 'STATEMENT' 748) #(910 'STATEMENTS' 749) #(910 'STATIC' 750) #(910 'STATICS' 751) #(910 'STATUSINFO' 752) #(910 'STEP' 753) #(910 'STOP' 755) #(910 'STRUCTURE' 756) #(910 'STRUCTURES' 757) #(910 'STYLE' 758) #(910 'SUBKEY' 759) #(910 'SUBMATCHES' 760) #(910 'SUBMIT' 761) #(910 'SUBROUTINE' 762) #(910 'SUBSCREEN' 763) #(910 'SUBSTRING' 764) #(910 'SUBTRACT' 765) #(910 'SUFFIX' 767) #(910 'SUM' 768) #(910 'SUMMARY' 769) #(910 'SUPPLIED' 770) #(910 'SUPPLY' 771) #(910 'SUPPRESS' 772) #(910 'SWITCH' 773) #(910 'SYBASE' 774) #(910 'SYMBOL' 775) #(910 'T000' 779) #(910 'TAB' 780) #(910 'TABBED' 781) #(910 'TABLE' 782) #(910 'TABLES' 783) #(910 'TABLEVIEW' 784) #(910 'TABSTRIP' 785) #(910 'TARGET' 786) #(910 'TASK' 787) #(910 'TASKS' 788) #(910 'TEST' 789) #(910 'TESTING' 792) #(910 'TEXT' 793) #(910 'TEXTPOOL' 794) #(910 'THEN' 795) #(910 'THROW' 796) #(910 'TIME' 797) #(910 'TIMES' 798) #(910 'TIMESTAMP' 799) #(910 'TIMEZONE' 800) #(910 'TITLE' 801) #(910 'TITLEBAR' 802) #(910 'TO' 803) #(910 'TOKENIZATION' 804) #(910 'TOKENS' 805) #(910 'TRAILING' 810) #(910 'TRANSACTION' 811) #(910 'TRANSFER' 812) #(910 'TRANSFORMATION' 813) #(910 'TRANSLATE' 814) #(910 'TRANSPORTING' 815) #(910 'TRMAC' 816) #(910 'TRUNCATION' 817) #(910 'TRY' 818) #(910 'TYPE' 819) #(910 'TYPES' 822) #(910 'ULINE' 823) #(910 'UNASSIGN' 824) #(910 'UNDER' 825) #(910 'UNICODE' 826) #(910 'UNION' 827) #(910 'UNIQUE' 828) #(910 'UNIT' 829) #(910 'UNIX' 830) #(910 'UNPACK' 831) #(910 'UNTIL' 832) #(910 'UNWIND' 833) #(910 'UP' 834) #(910 'UPDATE' 835) #(910 'UPPER' 836) #(910 'USER' 837) #(910 'USING' 839) #(910 'UTCLONG' 840) #(910 'UUID' 884) #(910 'VALID' 842) #(910 'VALIDATE' 843) #(910 'VALUE' 844) #(910 'VALUES' 846) #(910 'VARY' 847) #(910 'VARYING' 848) #(910 'VERSION' 849) #(910 'VIA' 850) #(910 'VISIBLE' 851) #(910 'WAIT' 852) #(910 'WHEN' 853) #(910 'WHERE' 854) #(910 'WHILE' 855) #(910 'WIDTH' 856) #(910 'WINDOW' 857) #(910 'WINDOWS' 858) #(910 'WITH' 859) #(910 'WITHOUT' 862) #(910 'WORD' 863) #(910 'WORK' 864) #(910 'WORKSPACE' 865) #(910 'WRITE' 866) #(910 'WRITER' 867) #(910 'XML' 868) #(910 'XSD' 869) #(910 'XSDBOOL' 870) #(910 'YES' 871) #(910 'YYMMDD' 872) #(910 'ZERO' 874) #(910 'ZONE' 875) #(949 'AS' 62) #(949 'AT' 71) #(949 'BY' 106) #(949 'CA' 116) #(949 'CN' 150) #(949 'CO' 151) #(949 'CP' 196) #(949 'CS' 200) #(949 'DO' 247) #(949 'EQ' 304) #(949 'GE' 367) #(949 'GT' 375) #(949 'ID' 394) #(949 'IF' 398) #(949 'IN' 407) #(949 'IS' 437) #(949 'LE' 452) #(949 'LT' 489) #(949 'NA' 526) #(949 'NE' 530) #(949 'NO' 538) #(949 'NP' 554) #(949 'NS' 555) #(949 'OF' 570) #(949 'ON' 573) #(949 'OR' 580) #(949 'TO' 803) #(949 'UP' 834) #(891 'ABS' 876) #(891 'ABSTRACT' 33) #(891 'ACCEPT' 34) #(891 'ACCEPTING' 35) #(891 'ACCESS' 36) #(891 'ACCORDING' 37) #(891 'ACTION' 38) #(891 'ACTIVATION' 39) #(891 'ACTUAL' 40) #(891 'ADABAS' 41) #(891 'ADD' 42) #(891 'ADJACENT' 44) #(891 'ALIAS' 45) #(891 'ALIASES' 46) #(891 'ALIGN' 47) #(891 'ALL' 48) #(891 'ALLOCATE' 49) #(891 'ALPHA' 50) #(891 'AMDP' 51) #(891 'ANALYSIS' 52) #(891 'ANALYZER' 53) #(891 'AND' 54) #(891 'ANY' 55) #(891 'APPEND' 56) #(891 'APPENDING' 57) #(891 'APPLICATION' 58) #(891 'ARCHIVE' 59) #(891 'AREA' 60) #(891 'ARITHMETIC' 61) #(891 'AS' 62) #(891 'AS400' 63) #(891 'ASCENDING' 64) #(891 'ASSERT' 65) #(891 'ASSIGN' 66) #(891 'ASSIGNED' 67) #(891 'ASSIGNING' 68) #(891 'ASSOCIATION' 69) #(891 'ASYNCHRONOUS' 70) #(891 'AT' 71) #(891 'ATTRIBUTES' 72) #(891 'AUGMENTING' 73) #(891 'AUTHORITY' 74) #(891 'AUTHORIZATION' 76) #(891 'AUTO' 77) #(891 'AVG' 78) #(891 'BACK' 79) #(891 'BACKGROUND' 80) #(891 'BACKWARD' 81) #(891 'BADI' 82) #(891 'BASE' 83) #(891 'BEFORE' 84) #(891 'BEGIN' 85) #(891 'BEHAVIOR' 86) #(891 'BETWEEN' 87) #(891 'BINARY' 88) #(891 'BIT' 89) #(891 'BLANK' 94) #(891 'BLANKS' 95) #(891 'BLOCK' 96) #(891 'BLOCKS' 97) #(891 'BOOLC' 98) #(891 'BOUND' 99) #(891 'BOUNDARIES' 100) #(891 'BOUNDS' 101) #(891 'BOXED' 102) #(891 'BREAK' 103) #(891 'BUFFER' 105) #(891 'BY' 106) #(891 'BYPASSING' 107) #(891 'BYTE' 108) #(891 'CA' 116) #(891 'CALL' 117) #(891 'CALLING' 118) #(891 'CASE' 119) #(891 'CAST' 120) #(891 'CASTING' 121) #(891 'CATCH' 122) #(891 'CDS' 123) #(891 'CEIL' 877) #(891 'CENTER' 124) #(891 'CENTERED' 125) #(891 'CHAIN' 126) #(891 'CHANGE' 129) #(891 'CHANGING' 130) #(891 'CHANNELS' 131) #(891 'CHAR' 132) #(891 'CHARACTER' 134) #(891 'CHECK' 135) #(891 'CHECKBOX' 136) #(891 'CID' 137) #(891 'CIRCULAR' 138) #(891 'CLASS' 139) #(891 'CLEANUP' 143) #(891 'CLEAR' 144) #(891 'CLIENT' 145) #(891 'CLIENTS' 146) #(891 'CLOCK' 147) #(891 'CLONE' 148) #(891 'CLOSE' 149) #(891 'CN' 150) #(891 'CO' 151) #(891 'COALESCE' 878) #(891 'CODE' 152) #(891 'COLLECT' 153) #(891 'COLOR' 154) #(891 'COLUMN' 155) #(891 'COLUMNS' 156) #(891 'COL_BACKGROUND' 157) #(891 'COL_GROUP' 158) #(891 'COL_HEADING' 159) #(891 'COL_KEY' 160) #(891 'COL_NEGATIVE' 161) #(891 'COL_NORMAL' 162) #(891 'COL_POSITIVE' 163) #(891 'COL_TOTAL' 164) #(891 'COMMENT' 165) #(891 'COMMENTS' 166) #(891 'COMMIT' 167) #(891 'COMMON' 168) #(891 'COMMUNICATION' 169) #(891 'COMPARING' 170) #(891 'COMPONENT' 171) #(891 'COMPONENTS' 172) #(891 'COMPRESSION' 173) #(891 'COMPUTE' 174) #(891 'CONCAT' 879) #(891 'CONCATENATE' 175) #(891 'CONCAT_WITH_SPACE' 880) #(891 'COND' 176) #(891 'CONDENSE' 177) #(891 'CONDITION' 178) #(891 'CONNECTION' 179) #(891 'CONSTANT' 180) #(891 'CONSTANTS' 181) #(891 'CONTEXT' 182) #(891 'CONTEXTS' 183) #(891 'CONTINUE' 184) #(891 'CONTROL' 185) #(891 'CONTROLS' 186) #(891 'CONV' 187) #(891 'CONVERSION' 188) #(891 'CONVERT' 189) #(891 'COPIES' 190) #(891 'COPY' 191) #(891 'CORRESPONDING' 192) #(891 'COUNT' 193) #(891 'COUNTRY' 194) #(891 'COVER' 195) #(891 'CP' 196) #(891 'CPI' 197) #(891 'CREATE' 198) #(891 'CRITICAL' 199) #(891 'CS' 200) #(891 'CURRENCY' 201) #(891 'CURRENT' 202) #(891 'CURSOR' 203) #(891 'DANGEROUS' 205) #(891 'DATA' 206) #(891 'DATABASE' 207) #(891 'DATAINFO' 208) #(891 'DATASET' 209) #(891 'DATE' 210) #(891 'DAYLIGHT' 211) #(891 'DB2' 212) #(891 'DB6' 213) #(891 'DD/MM/YY' 214) #(891 'DD/MM/YYYY' 215) #(891 'DDL' 216) #(891 'DDMMYY' 217) #(891 'DEALLOCATE' 218) #(891 'DEC' 219) #(891 'DECIMALS' 220) #(891 'DECLARATIONS' 221) #(891 'DEEP' 222) #(891 'DEFAULT' 223) #(891 'DEFERRED' 224) #(891 'DEFINE' 225) #(891 'DEFINITION' 226) #(891 'DELETE' 227) #(891 'DELETING' 228) #(891 'DEMAND' 229) #(891 'DEPARTMENT' 230) #(891 'DESCENDING' 231) #(891 'DESCRIBE' 232) #(891 'DESTINATION' 233) #(891 'DETAIL' 234) #(891 'DETERMINATION' 235) #(891 'DETERMINE' 236) #(891 'DIALOG' 237) #(891 'DID' 238) #(891 'DIRECTORY' 239) #(891 'DISCARDING' 240) #(891 'DISPLAY' 241) #(891 'DISTANCE' 243) #(891 'DISTINCT' 244) #(891 'DIV' 245) #(891 'DIVIDE' 246) #(891 'DO' 247) #(891 'DUMMY' 248) #(891 'DUPLICATE' 249) #(891 'DUPLICATES' 250) #(891 'DURATION' 251) #(891 'DURING' 252) #(891 'DYNPRO' 253) #(891 'EARLY' 254) #(891 'EDIT' 255) #(891 'ELSE' 257) #(891 'ELSEIF' 258) #(891 'EMPTY' 259) #(891 'ENABLED' 260) #(891 'ENABLING' 261) #(891 'ENCODING' 262) #(891 'END' 263) #(891 'ENDAT' 270) #(891 'ENDCASE' 271) #(891 'ENDCATCH' 272) #(891 'ENDCHAIN' 273) #(891 'ENDCLASS' 274) #(891 'ENDDO' 275) #(891 'ENDENHANCEMENT' 276) #(891 'ENDEXEC' 277) #(891 'ENDFORM' 278) #(891 'ENDFUNCTION' 279) #(891 'ENDIAN' 280) #(891 'ENDIF' 281) #(891 'ENDING' 282) #(891 'ENDINTERFACE' 283) #(891 'ENDLOOP' 284) #(891 'ENDMETHOD' 285) #(891 'ENDMODULE' 286) #(891 'ENDON' 287) #(891 'ENDPROVIDE' 288) #(891 'ENDSELECT' 289) #(891 'ENDTRY' 290) #(891 'ENDWHILE' 291) #(891 'ENDWITH' 292) #(891 'ENGINEERING' 293) #(891 'ENHANCEMENT' 294) #(891 'ENHANCEMENTS' 297) #(891 'ENTITIES' 298) #(891 'ENTITY' 299) #(891 'ENTRIES' 300) #(891 'ENTRY' 301) #(891 'ENUM' 302) #(891 'ENVIRONMENT' 303) #(891 'EQ' 304) #(891 'EQUIV' 305) #(891 'ERRORS' 306) #(891 'ESCAPE' 307) #(891 'ESCAPING' 308) #(891 'EVENT' 309) #(891 'EVENTS' 310) #(891 'EXACT' 311) #(891 'EXCEPT' 312) #(891 'EXCEPTION' 313) #(891 'EXCEPTIONS' 315) #(891 'EXCLUDE' 316) #(891 'EXCLUDING' 317) #(891 'EXEC' 318) #(891 'EXECUTE' 319) #(891 'EXISTS' 320) #(891 'EXIT' 321) #(891 'EXPANDING' 323) #(891 'EXPIRATION' 324) #(891 'EXPLICIT' 325) #(891 'EXPONENT' 326) #(891 'EXPORT' 327) #(891 'EXPORTING' 328) #(891 'EXTENDED' 329) #(891 'EXTENSION' 330) #(891 'EXTRACT' 331) #(891 'FAIL' 332) #(891 'FAILED' 333) #(891 'FEATURES' 334) #(891 'FETCH' 335) #(891 'FIELD' 336) #(891 'FIELDS' 340) #(891 'FILE' 341) #(891 'FILL' 342) #(891 'FILTER' 343) #(891 'FILTERS' 344) #(891 'FINAL' 345) #(891 'FIND' 346) #(891 'FIRST' 347) #(891 'FLOOR' 881) #(891 'FLTP' 350) #(891 'FLUSH' 351) #(891 'FONT' 352) #(891 'FOR' 353) #(891 'FORM' 354) #(891 'FORMAT' 355) #(891 'FORWARD' 356) #(891 'FOUND' 357) #(891 'FRAME' 358) #(891 'FRAMES' 359) #(891 'FREE' 360) #(891 'FRIENDS' 361) #(891 'FROM' 362) #(891 'FULL' 363) #(891 'FUNCTION' 364) #(891 'FURTHER' 366) #(891 'GE' 367) #(891 'GENERATE' 368) #(891 'GET' 369) #(891 'GIVING' 370) #(891 'GLOBAL' 371) #(891 'GRAPH' 372) #(891 'GROUP' 373) #(891 'GROUPS' 374) #(891 'GT' 375) #(891 'HANDLE' 376) #(891 'HANDLER' 377) #(891 'HARMLESS' 378) #(891 'HASHED' 379) #(891 'HAVING' 380) #(891 'HDB' 381) #(891 'HEADER' 382) #(891 'HEADERS' 383) #(891 'HEADING' 384) #(891 'HIDE' 387) #(891 'HIERARCHY' 388) #(891 'HIGH' 389) #(891 'HINT' 390) #(891 'HOLD' 391) #(891 'HOTSPOT' 392) #(891 'ICON' 393) #(891 'ID' 394) #(891 'IDENTIFICATION' 395) #(891 'IDENTIFIER' 396) #(891 'IDS' 397) #(891 'IF' 398) #(891 'IGNORE' 399) #(891 'IGNORING' 400) #(891 'IMMEDIATELY' 401) #(891 'IMPLEMENTATION' 402) #(891 'IMPLEMENTED' 403) #(891 'IMPLICIT' 404) #(891 'IMPORT' 405) #(891 'IMPORTING' 406) #(891 'IN' 407) #(891 'INACTIVE' 408) #(891 'INCL' 409) #(891 'INCLUDE' 410) #(891 'INCLUDES' 411) #(891 'INCREMENT' 412) #(891 'INDEX' 413) #(891 'INFORMIX' 415) #(891 'INFOTYPES' 416) #(891 'INHERITING' 417) #(891 'INIT' 418) #(891 'INITIAL' 419) #(891 'INITIALIZATION' 420) #(891 'INNER' 421) #(891 'INPUT' 422) #(891 'INSERT' 423) #(891 'INSTANCE' 424) #(891 'INSTANCES' 425) #(891 'INT2' 426) #(891 'INT4' 427) #(891 'INT8' 428) #(891 'INTENSIFIED' 429) #(891 'INTERFACE' 430) #(891 'INTERFACES' 431) #(891 'INTERNAL' 432) #(891 'INTERVALS' 433) #(891 'INTO' 434) #(891 'INVERSE' 435) #(891 'IS' 437) #(891 'ISO' 438) #(891 'JOB' 439) #(891 'JOIN' 440) #(891 'KEEP' 441) #(891 'KEEPING' 442) #(891 'KERNEL' 443) #(891 'KEY' 444) #(891 'KEYS' 445) #(891 'KEYWORDS' 446) #(891 'KIND' 447) #(891 'LANGUAGE' 448) #(891 'LAST' 449) #(891 'LATE' 450) #(891 'LAYOUT' 451) #(891 'LE' 452) #(891 'LEADING' 453) #(891 'LEAVE' 454) #(891 'LEFT' 455) #(891 'LEFTPLUS' 457) #(891 'LEFTSPACE' 458) #(891 'LEGACY' 459) #(891 'LENGTH' 460) #(891 'LET' 461) #(891 'LEVEL' 462) #(891 'LEVELS' 463) #(891 'LIKE' 464) #(891 'LINE' 465) #(891 'LINEFEED' 469) #(891 'LINES' 470) #(891 'LINK' 471) #(891 'LIST' 472) #(891 'LISTBOX' 474) #(891 'LOAD' 475) #(891 'LOCAL' 477) #(891 'LOCALE' 478) #(891 'LOCK' 479) #(891 'LOCKS' 480) #(891 'LOGFILE' 482) #(891 'LOGICAL' 483) #(891 'LONG' 484) #(891 'LOOP' 485) #(891 'LOW' 486) #(891 'LOWER' 487) #(891 'LPI' 488) #(891 'LT' 489) #(891 'LTRIM' 882) #(891 'MAIN' 491) #(891 'MAPPED' 492) #(891 'MAPPING' 493) #(891 'MARGIN' 494) #(891 'MARK' 495) #(891 'MASK' 496) #(891 'MATCH' 497) #(891 'MATCHCODE' 498) #(891 'MAX' 499) #(891 'MAXIMUM' 500) #(891 'MEDIUM' 501) #(891 'MEMBERS' 502) #(891 'MEMORY' 503) #(891 'MESH' 504) #(891 'MESSAGE' 505) #(891 'MESSAGES' 507) #(891 'MESSAGING' 508) #(891 'METHOD' 509) #(891 'METHODS' 510) #(891 'MIN' 511) #(891 'MM/DD/YY' 512) #(891 'MM/DD/YYYY' 513) #(891 'MMDDYY' 514) #(891 'MOD' 515) #(891 'MODE' 516) #(891 'MODIF' 517) #(891 'MODIFIER' 518) #(891 'MODIFY' 519) #(891 'MODULE' 520) #(891 'MOVE' 521) #(891 'MSSQLNT' 523) #(891 'MULTIPLY' 524) #(891 'NA' 526) #(891 'NAME' 527) #(891 'NAMETAB' 528) #(891 'NATIVE' 529) #(891 'NE' 530) #(891 'NESTED' 531) #(891 'NESTING' 532) #(891 'NEW' 533) #(891 'NEXT' 537) #(891 'NO' 538) #(891 'NODES' 550) #(891 'NOT' 553) #(891 'NP' 554) #(891 'NS' 555) #(891 'NULL' 556) #(891 'NUMBER' 557) #(891 'NUMBERING' 558) #(891 'NUMC' 559) #(891 'OBJECT' 561) #(891 'OBJECTS' 562) #(891 'OBJMGR' 563) #(891 'OBLIGATORY' 564) #(891 'OCCURENCE' 565) #(891 'OCCURENCES' 566) #(891 'OCCURRENCE' 567) #(891 'OCCURRENCES' 568) #(891 'OCCURS' 569) #(891 'OF' 570) #(891 'OFF' 571) #(891 'OFFSET' 572) #(891 'ON' 573) #(891 'ONE' 574) #(891 'ONLY' 575) #(891 'OPEN' 576) #(891 'OPTION' 577) #(891 'OPTIONAL' 578) #(891 'OPTIONS' 579) #(891 'OR' 580) #(891 'ORACLE' 581) #(891 'ORDER' 582) #(891 'OTHERS' 583) #(891 'OUT' 584) #(891 'OUTER' 585) #(891 'OUTPUT' 586) #(891 'OVERFLOW' 588) #(891 'OVERLAY' 589) #(891 'PACK' 590) #(891 'PACKAGE' 591) #(891 'PAD' 592) #(891 'PADDING' 593) #(891 'PAGE' 594) #(891 'PAGES' 595) #(891 'PARAMETER' 596) #(891 'PARAMETERS' 598) #(891 'PART' 599) #(891 'PARTIALLY' 600) #(891 'PCRE' 601) #(891 'PERCENTAGE' 602) #(891 'PERFORM' 603) #(891 'PERFORMING' 604) #(891 'PERMISSIONS' 605) #(891 'PLACES' 607) #(891 'POOL' 608) #(891 'POSITION' 609) #(891 'POS_HIGH' 610) #(891 'POS_LOW' 611) #(891 'PRAGMAS' 612) #(891 'PRECHECK' 613) #(891 'PRECOMPILED' 614) #(891 'PREFERRED' 615) #(891 'PRESERVING' 616) #(891 'PRIMARY' 617) #(891 'PRINT' 618) #(891 'PRIVATE' 620) #(891 'PRIVILEGED' 621) #(891 'PROCEDURE' 622) #(891 'PROGRAM' 623) #(891 'PROPERTY' 624) #(891 'PROTECTED' 625) #(891 'PROVIDE' 626) #(891 'PUBLIC' 627) #(891 'PUSH' 628) #(891 'PUSHBUTTON' 629) #(891 'PUT' 630) #(891 'QUEUEONLY' 632) #(891 'QUICKINFO' 633) #(891 'RADIOBUTTON' 634) #(891 'RAISE' 635) #(891 'RAISING' 636) #(891 'RANGE' 637) #(891 'RANGES' 638) #(891 'RAW' 639) #(891 'READ' 640) #(891 'RECEIVE' 642) #(891 'RECEIVED' 643) #(891 'RECEIVER' 644) #(891 'RECEIVING' 645) #(891 'REDEFINITION' 646) #(891 'REDUCE' 647) #(891 'REF' 648) #(891 'REFERENCE' 649) #(891 'REFRESH' 650) #(891 'REGEX' 651) #(891 'REJECT' 652) #(891 'RELATING' 653) #(891 'RENAMING' 654) #(891 'REPLACE' 655) #(891 'REPLACEMENT' 656) #(891 'REPLACING' 657) #(891 'REPORT' 658) #(891 'REPORTED' 659) #(891 'REQUEST' 660) #(891 'REQUESTED' 661) #(891 'REQUIRED' 662) #(891 'RESERVE' 663) #(891 'RESET' 664) #(891 'RESOLUTION' 665) #(891 'RESPECTING' 666) #(891 'RESPONSE' 667) #(891 'RESPONSES' 668) #(891 'RESULT' 669) #(891 'RESULTS' 670) #(891 'RESUMABLE' 671) #(891 'RESUME' 672) #(891 'RETRY' 673) #(891 'RETURN' 674) #(891 'RETURNCODE' 675) #(891 'RETURNING' 676) #(891 'RIGHT' 677) #(891 'RIGHTPLUS' 679) #(891 'RIGHTSPACE' 680) #(891 'RISK' 681) #(891 'ROLLBACK' 682) #(891 'ROUND' 683) #(891 'ROWS' 684) #(891 'RTRIM' 883) #(891 'RUN' 685) #(891 'SAP' 686) #(891 'SAVE' 688) #(891 'SAVING' 689) #(891 'SCALE_PRESERVING' 690) #(891 'SCALE_PRESERVING_SCIENTIFIC' 691) #(891 'SCAN' 692) #(891 'SCIENTIFIC' 693) #(891 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(891 'SCREEN' 695) #(891 'SCROLL' 696) #(891 'SCROLLING' 698) #(891 'SEARCH' 699) #(891 'SECONDARY' 700) #(891 'SECONDS' 701) #(891 'SECTION' 702) #(891 'SELECT' 703) #(891 'SELECTION' 705) #(891 'SELECTIONS' 710) #(891 'SEND' 711) #(891 'SEPARATE' 712) #(891 'SEPARATED' 713) #(891 'SESSION' 714) #(891 'SET' 715) #(891 'SHARED' 716) #(891 'SHIFT' 717) #(891 'SHORT' 718) #(891 'SHORTDUMP' 719) #(891 'SIGN' 721) #(891 'SIGN_AS_POSTFIX' 722) #(891 'SIMPLE' 723) #(891 'SIMULATION' 724) #(891 'SINGLE' 725) #(891 'SIZE' 726) #(891 'SKIP' 727) #(891 'SKIPPING' 728) #(891 'SMART' 729) #(891 'SOME' 730) #(891 'SORT' 731) #(891 'SORTABLE' 732) #(891 'SORTED' 733) #(891 'SOURCE' 734) #(891 'SPACE' 735) #(891 'SPECIFIED' 736) #(891 'SPLIT' 737) #(891 'SPOOL' 738) #(891 'SPOTS' 739) #(891 'SQL' 740) #(891 'SQLSCRIPT' 741) #(891 'STABLE' 742) #(891 'STAMP' 743) #(891 'STANDARD' 744) #(891 'STARTING' 746) #(891 'STATE' 747) #(891 'STATEMENT' 748) #(891 'STATEMENTS' 749) #(891 'STATIC' 750) #(891 'STATICS' 751) #(891 'STATUSINFO' 752) #(891 'STEP' 753) #(891 'STOP' 755) #(891 'STRUCTURE' 756) #(891 'STRUCTURES' 757) #(891 'STYLE' 758) #(891 'SUBKEY' 759) #(891 'SUBMATCHES' 760) #(891 'SUBMIT' 761) #(891 'SUBROUTINE' 762) #(891 'SUBSCREEN' 763) #(891 'SUBSTRING' 764) #(891 'SUBTRACT' 765) #(891 'SUFFIX' 767) #(891 'SUM' 768) #(891 'SUMMARY' 769) #(891 'SUPPLIED' 770) #(891 'SUPPLY' 771) #(891 'SUPPRESS' 772) #(891 'SWITCH' 773) #(891 'SYBASE' 774) #(891 'SYMBOL' 775) #(891 'T000' 779) #(891 'TAB' 780) #(891 'TABBED' 781) #(891 'TABLE' 782) #(891 'TABLES' 783) #(891 'TABLEVIEW' 784) #(891 'TABSTRIP' 785) #(891 'TARGET' 786) #(891 'TASK' 787) #(891 'TASKS' 788) #(891 'TEST' 789) #(891 'TESTING' 792) #(891 'TEXT' 793) #(891 'TEXTPOOL' 794) #(891 'THEN' 795) #(891 'THROW' 796) #(891 'TIME' 797) #(891 'TIMES' 798) #(891 'TIMESTAMP' 799) #(891 'TIMEZONE' 800) #(891 'TITLE' 801) #(891 'TITLEBAR' 802) #(891 'TO' 803) #(891 'TOKENIZATION' 804) #(891 'TOKENS' 805) #(891 'TRAILING' 810) #(891 'TRANSACTION' 811) #(891 'TRANSFER' 812) #(891 'TRANSFORMATION' 813) #(891 'TRANSLATE' 814) #(891 'TRANSPORTING' 815) #(891 'TRMAC' 816) #(891 'TRUNCATION' 817) #(891 'TRY' 818) #(891 'TYPE' 819) #(891 'TYPES' 822) #(891 'ULINE' 823) #(891 'UNASSIGN' 824) #(891 'UNDER' 825) #(891 'UNICODE' 826) #(891 'UNION' 827) #(891 'UNIQUE' 828) #(891 'UNIT' 829) #(891 'UNIX' 830) #(891 'UNPACK' 831) #(891 'UNTIL' 832) #(891 'UNWIND' 833) #(891 'UP' 834) #(891 'UPDATE' 835) #(891 'UPPER' 836) #(891 'USER' 837) #(891 'USING' 839) #(891 'UTCLONG' 840) #(891 'UUID' 884) #(891 'VALID' 842) #(891 'VALIDATE' 843) #(891 'VALUE' 844) #(891 'VALUES' 846) #(891 'VARY' 847) #(891 'VARYING' 848) #(891 'VERSION' 849) #(891 'VIA' 850) #(891 'VISIBLE' 851) #(891 'WAIT' 852) #(891 'WHEN' 853) #(891 'WHERE' 854) #(891 'WHILE' 855) #(891 'WIDTH' 856) #(891 'WINDOW' 857) #(891 'WINDOWS' 858) #(891 'WITH' 859) #(891 'WITHOUT' 862) #(891 'WORD' 863) #(891 'WORK' 864) #(891 'WORKSPACE' 865) #(891 'WRITE' 866) #(891 'WRITER' 867) #(891 'XML' 868) #(891 'XSD' 869) #(891 'XSDBOOL' 870) #(891 'YES' 871) #(891 'YYMMDD' 872) #(891 'ZERO' 874) #(891 'ZONE' 875) #(930 '%_FINAL' 2) #(930 '%_HINTS' 3) #(930 '%_PREDEFINED' 4) #(930 '**' 8) #(930 '?TO' 31) #(930 'ABS' 876) #(930 'ABSTRACT' 33) #(930 'ACCEPT' 34) #(930 'ACCEPTING' 35) #(930 'ACCESS' 36) #(930 'ACCORDING' 37) #(930 'ACTION' 38) #(930 'ACTIVATION' 39) #(930 'ACTUAL' 40) #(930 'ADABAS' 41) #(930 'ADD' 42) #(930 'ADJACENT' 44) #(930 'ALIAS' 45) #(930 'ALIASES' 46) #(930 'ALIGN' 47) #(930 'ALL' 48) #(930 'ALLOCATE' 49) #(930 'ALPHA' 50) #(930 'AMDP' 51) #(930 'ANALYSIS' 52) #(930 'ANALYZER' 53) #(930 'AND' 54) #(930 'ANY' 55) #(930 'APPEND' 56) #(930 'APPENDING' 57) #(930 'APPLICATION' 58) #(930 'ARCHIVE' 59) #(930 'AREA' 60) #(930 'ARITHMETIC' 61) #(930 'AS' 62) #(930 'AS400' 63) #(930 'ASCENDING' 64) #(930 'ASSERT' 65) #(930 'ASSIGN' 66) #(930 'ASSIGNED' 67) #(930 'ASSIGNING' 68) #(930 'ASSOCIATION' 69) #(930 'ASYNCHRONOUS' 70) #(930 'AT' 71) #(930 'ATTRIBUTES' 72) #(930 'AUGMENTING' 73) #(930 'AUTHORITY' 74) #(930 'AUTHORIZATION' 76) #(930 'AUTO' 77) #(930 'AVG' 78) #(930 'BACK' 79) #(930 'BACKGROUND' 80) #(930 'BACKWARD' 81) #(930 'BADI' 82) #(930 'BASE' 83) #(930 'BEFORE' 84) #(930 'BEGIN' 85) #(930 'BEHAVIOR' 86) #(930 'BETWEEN' 87) #(930 'BINARY' 88) #(930 'BIT' 89) #(930 'BLANK' 94) #(930 'BLANKS' 95) #(930 'BLOCK' 96) #(930 'BLOCKS' 97) #(930 'BOOLC' 98) #(930 'BOUND' 99) #(930 'BOUNDARIES' 100) #(930 'BOUNDS' 101) #(930 'BOXED' 102) #(930 'BREAK' 103) #(930 'BUFFER' 105) #(930 'BY' 106) #(930 'BYPASSING' 107) #(930 'BYTE' 108) #(930 'CA' 116) #(930 'CALL' 117) #(930 'CALLING' 118) #(930 'CASE' 119) #(930 'CAST' 120) #(930 'CASTING' 121) #(930 'CATCH' 122) #(930 'CDS' 123) #(930 'CEIL' 877) #(930 'CENTER' 124) #(930 'CENTERED' 125) #(930 'CHAIN' 126) #(930 'CHANGE' 129) #(930 'CHANGING' 130) #(930 'CHANNELS' 131) #(930 'CHAR' 132) #(930 'CHARACTER' 134) #(930 'CHECK' 135) #(930 'CHECKBOX' 136) #(930 'CID' 137) #(930 'CIRCULAR' 138) #(930 'CLASS' 139) #(930 'CLEANUP' 143) #(930 'CLEAR' 144) #(930 'CLIENT' 145) #(930 'CLIENTS' 146) #(930 'CLOCK' 147) #(930 'CLONE' 148) #(930 'CLOSE' 149) #(930 'CN' 150) #(930 'CO' 151) #(930 'COALESCE' 878) #(930 'CODE' 152) #(930 'COLLECT' 153) #(930 'COLOR' 154) #(930 'COLUMN' 155) #(930 'COLUMNS' 156) #(930 'COL_BACKGROUND' 157) #(930 'COL_GROUP' 158) #(930 'COL_HEADING' 159) #(930 'COL_KEY' 160) #(930 'COL_NEGATIVE' 161) #(930 'COL_NORMAL' 162) #(930 'COL_POSITIVE' 163) #(930 'COL_TOTAL' 164) #(930 'COMMENT' 165) #(930 'COMMENTS' 166) #(930 'COMMIT' 167) #(930 'COMMON' 168) #(930 'COMMUNICATION' 169) #(930 'COMPARING' 170) #(930 'COMPONENT' 171) #(930 'COMPONENTS' 172) #(930 'COMPRESSION' 173) #(930 'COMPUTE' 174) #(930 'CONCAT' 879) #(930 'CONCATENATE' 175) #(930 'CONCAT_WITH_SPACE' 880) #(930 'COND' 176) #(930 'CONDENSE' 177) #(930 'CONDITION' 178) #(930 'CONNECTION' 179) #(930 'CONSTANT' 180) #(930 'CONSTANTS' 181) #(930 'CONTEXT' 182) #(930 'CONTEXTS' 183) #(930 'CONTINUE' 184) #(930 'CONTROL' 185) #(930 'CONTROLS' 186) #(930 'CONV' 187) #(930 'CONVERSION' 188) #(930 'CONVERT' 189) #(930 'COPIES' 190) #(930 'COPY' 191) #(930 'CORRESPONDING' 192) #(930 'COUNT' 193) #(930 'COUNTRY' 194) #(930 'COVER' 195) #(930 'CP' 196) #(930 'CPI' 197) #(930 'CREATE' 198) #(930 'CRITICAL' 199) #(930 'CS' 200) #(930 'CURRENCY' 201) #(930 'CURRENT' 202) #(930 'CURSOR' 203) #(930 'DANGEROUS' 205) #(930 'DATA' 206) #(930 'DATABASE' 207) #(930 'DATAINFO' 208) #(930 'DATASET' 209) #(930 'DATE' 210) #(930 'DAYLIGHT' 211) #(930 'DB2' 212) #(930 'DB6' 213) #(930 'DDL' 216) #(930 'DDMMYY' 217) #(930 'DEALLOCATE' 218) #(930 'DEC' 219) #(930 'DECIMALS' 220) #(930 'DECLARATIONS' 221) #(930 'DEEP' 222) #(930 'DEFAULT' 223) #(930 'DEFERRED' 224) #(930 'DEFINE' 225) #(930 'DEFINITION' 226) #(930 'DELETE' 227) #(930 'DELETING' 228) #(930 'DEMAND' 229) #(930 'DEPARTMENT' 230) #(930 'DESCENDING' 231) #(930 'DESCRIBE' 232) #(930 'DESTINATION' 233) #(930 'DETAIL' 234) #(930 'DETERMINATION' 235) #(930 'DETERMINE' 236) #(930 'DIALOG' 237) #(930 'DID' 238) #(930 'DIRECTORY' 239) #(930 'DISCARDING' 240) #(930 'DISPLAY' 241) #(930 'DISTANCE' 243) #(930 'DISTINCT' 244) #(930 'DIV' 245) #(930 'DIVIDE' 246) #(930 'DO' 247) #(930 'DUMMY' 248) #(930 'DUPLICATE' 249) #(930 'DUPLICATES' 250) #(930 'DURATION' 251) #(930 'DURING' 252) #(930 'DYNPRO' 253) #(930 'EARLY' 254) #(930 'EDIT' 255) #(930 'ELSE' 257) #(930 'ELSEIF' 258) #(930 'EMPTY' 259) #(930 'ENABLED' 260) #(930 'ENABLING' 261) #(930 'ENCODING' 262) #(930 'END' 263) #(930 'ENDAT' 270) #(930 'ENDCASE' 271) #(930 'ENDCATCH' 272) #(930 'ENDCHAIN' 273) #(930 'ENDCLASS' 274) #(930 'ENDDO' 275) #(930 'ENDENHANCEMENT' 276) #(930 'ENDEXEC' 277) #(930 'ENDFORM' 278) #(930 'ENDFUNCTION' 279) #(930 'ENDIAN' 280) #(930 'ENDIF' 281) #(930 'ENDING' 282) #(930 'ENDINTERFACE' 283) #(930 'ENDLOOP' 284) #(930 'ENDMETHOD' 285) #(930 'ENDMODULE' 286) #(930 'ENDON' 287) #(930 'ENDPROVIDE' 288) #(930 'ENDSELECT' 289) #(930 'ENDTRY' 290) #(930 'ENDWHILE' 291) #(930 'ENDWITH' 292) #(930 'ENGINEERING' 293) #(930 'ENHANCEMENT' 294) #(930 'ENHANCEMENTS' 297) #(930 'ENTITIES' 298) #(930 'ENTITY' 299) #(930 'ENTRIES' 300) #(930 'ENTRY' 301) #(930 'ENUM' 302) #(930 'ENVIRONMENT' 303) #(930 'EQ' 304) #(930 'EQUIV' 305) #(930 'ERRORS' 306) #(930 'ESCAPE' 307) #(930 'ESCAPING' 308) #(930 'EVENT' 309) #(930 'EVENTS' 310) #(930 'EXACT' 311) #(930 'EXCEPT' 312) #(930 'EXCEPTION' 313) #(930 'EXCEPTIONS' 315) #(930 'EXCLUDE' 316) #(930 'EXCLUDING' 317) #(930 'EXEC' 318) #(930 'EXECUTE' 319) #(930 'EXISTS' 320) #(930 'EXIT' 321) #(930 'EXPANDING' 323) #(930 'EXPIRATION' 324) #(930 'EXPLICIT' 325) #(930 'EXPONENT' 326) #(930 'EXPORT' 327) #(930 'EXPORTING' 328) #(930 'EXTENDED' 329) #(930 'EXTENSION' 330) #(930 'EXTRACT' 331) #(930 'FAIL' 332) #(930 'FAILED' 333) #(930 'FEATURES' 334) #(930 'FETCH' 335) #(930 'FIELD' 336) #(930 'FIELDS' 340) #(930 'FILE' 341) #(930 'FILL' 342) #(930 'FILTER' 343) #(930 'FILTERS' 344) #(930 'FINAL' 345) #(930 'FIND' 346) #(930 'FIRST' 347) #(930 'FLOOR' 881) #(930 'FLTP' 350) #(930 'FLUSH' 351) #(930 'FONT' 352) #(930 'FOR' 353) #(930 'FORM' 354) #(930 'FORMAT' 355) #(930 'FORWARD' 356) #(930 'FOUND' 357) #(930 'FRAME' 358) #(930 'FRAMES' 359) #(930 'FREE' 360) #(930 'FRIENDS' 361) #(930 'FROM' 362) #(930 'FULL' 363) #(930 'FUNCTION' 364) #(930 'FURTHER' 366) #(930 'GE' 367) #(930 'GENERATE' 368) #(930 'GET' 369) #(930 'GIVING' 370) #(930 'GLOBAL' 371) #(930 'GRAPH' 372) #(930 'GROUP' 373) #(930 'GROUPS' 374) #(930 'GT' 375) #(930 'HANDLE' 376) #(930 'HANDLER' 377) #(930 'HARMLESS' 378) #(930 'HASHED' 379) #(930 'HAVING' 380) #(930 'HDB' 381) #(930 'HEADER' 382) #(930 'HEADERS' 383) #(930 'HEADING' 384) #(930 'HIDE' 387) #(930 'HIERARCHY' 388) #(930 'HIGH' 389) #(930 'HINT' 390) #(930 'HOLD' 391) #(930 'HOTSPOT' 392) #(930 'ICON' 393) #(930 'ID' 394) #(930 'IDENTIFICATION' 395) #(930 'IDENTIFIER' 396) #(930 'IDS' 397) #(930 'IF' 398) #(930 'IGNORE' 399) #(930 'IGNORING' 400) #(930 'IMMEDIATELY' 401) #(930 'IMPLEMENTATION' 402) #(930 'IMPLEMENTED' 403) #(930 'IMPLICIT' 404) #(930 'IMPORT' 405) #(930 'IMPORTING' 406) #(930 'IN' 407) #(930 'INACTIVE' 408) #(930 'INCL' 409) #(930 'INCLUDE' 410) #(930 'INCLUDES' 411) #(930 'INCREMENT' 412) #(930 'INDEX' 413) #(930 'INFORMIX' 415) #(930 'INFOTYPES' 416) #(930 'INHERITING' 417) #(930 'INIT' 418) #(930 'INITIAL' 419) #(930 'INITIALIZATION' 420) #(930 'INNER' 421) #(930 'INPUT' 422) #(930 'INSERT' 423) #(930 'INSTANCE' 424) #(930 'INSTANCES' 425) #(930 'INT2' 426) #(930 'INT4' 427) #(930 'INT8' 428) #(930 'INTENSIFIED' 429) #(930 'INTERFACE' 430) #(930 'INTERFACES' 431) #(930 'INTERNAL' 432) #(930 'INTERVALS' 433) #(930 'INTO' 434) #(930 'INVERSE' 435) #(930 'IS' 437) #(930 'ISO' 438) #(930 'JOB' 439) #(930 'JOIN' 440) #(930 'KEEP' 441) #(930 'KEEPING' 442) #(930 'KERNEL' 443) #(930 'KEY' 444) #(930 'KEYS' 445) #(930 'KEYWORDS' 446) #(930 'KIND' 447) #(930 'LANGUAGE' 448) #(930 'LAST' 449) #(930 'LATE' 450) #(930 'LAYOUT' 451) #(930 'LE' 452) #(930 'LEADING' 453) #(930 'LEAVE' 454) #(930 'LEFT' 455) #(930 'LEFTPLUS' 457) #(930 'LEFTSPACE' 458) #(930 'LEGACY' 459) #(930 'LENGTH' 460) #(930 'LET' 461) #(930 'LEVEL' 462) #(930 'LEVELS' 463) #(930 'LIKE' 464) #(930 'LINE' 465) #(930 'LINEFEED' 469) #(930 'LINES' 470) #(930 'LINK' 471) #(930 'LIST' 472) #(930 'LISTBOX' 474) #(930 'LOAD' 475) #(930 'LOCAL' 477) #(930 'LOCALE' 478) #(930 'LOCK' 479) #(930 'LOCKS' 480) #(930 'LOGFILE' 482) #(930 'LOGICAL' 483) #(930 'LONG' 484) #(930 'LOOP' 485) #(930 'LOW' 486) #(930 'LOWER' 487) #(930 'LPI' 488) #(930 'LT' 489) #(930 'LTRIM' 882) #(930 'MAIN' 491) #(930 'MAPPED' 492) #(930 'MAPPING' 493) #(930 'MARGIN' 494) #(930 'MARK' 495) #(930 'MASK' 496) #(930 'MATCH' 497) #(930 'MATCHCODE' 498) #(930 'MAX' 499) #(930 'MAXIMUM' 500) #(930 'MEDIUM' 501) #(930 'MEMBERS' 502) #(930 'MEMORY' 503) #(930 'MESH' 504) #(930 'MESSAGE' 505) #(930 'MESSAGES' 507) #(930 'MESSAGING' 508) #(930 'METHOD' 509) #(930 'METHODS' 510) #(930 'MIN' 511) #(930 'MMDDYY' 514) #(930 'MOD' 515) #(930 'MODE' 516) #(930 'MODIF' 517) #(930 'MODIFIER' 518) #(930 'MODIFY' 519) #(930 'MODULE' 520) #(930 'MOVE' 521) #(930 'MSSQLNT' 523) #(930 'MULTIPLY' 524) #(930 'NA' 526) #(930 'NAME' 527) #(930 'NAMETAB' 528) #(930 'NATIVE' 529) #(930 'NE' 530) #(930 'NESTED' 531) #(930 'NESTING' 532) #(930 'NEW' 533) #(930 'NEXT' 537) #(930 'NO' 538) #(930 'NODES' 550) #(930 'NOT' 553) #(930 'NP' 554) #(930 'NS' 555) #(930 'NULL' 556) #(930 'NUMBER' 557) #(930 'NUMBERING' 558) #(930 'NUMC' 559) #(930 'OBJECT' 561) #(930 'OBJECTS' 562) #(930 'OBJMGR' 563) #(930 'OBLIGATORY' 564) #(930 'OCCURENCE' 565) #(930 'OCCURENCES' 566) #(930 'OCCURRENCE' 567) #(930 'OCCURRENCES' 568) #(930 'OCCURS' 569) #(930 'OF' 570) #(930 'OFF' 571) #(930 'OFFSET' 572) #(930 'ON' 573) #(930 'ONE' 574) #(930 'ONLY' 575) #(930 'OPEN' 576) #(930 'OPTION' 577) #(930 'OPTIONAL' 578) #(930 'OPTIONS' 579) #(930 'OR' 580) #(930 'ORACLE' 581) #(930 'ORDER' 582) #(930 'OTHERS' 583) #(930 'OUT' 584) #(930 'OUTER' 585) #(930 'OUTPUT' 586) #(930 'OVERFLOW' 588) #(930 'OVERLAY' 589) #(930 'PACK' 590) #(930 'PACKAGE' 591) #(930 'PAD' 592) #(930 'PADDING' 593) #(930 'PAGE' 594) #(930 'PAGES' 595) #(930 'PARAMETER' 596) #(930 'PARAMETERS' 598) #(930 'PART' 599) #(930 'PARTIALLY' 600) #(930 'PCRE' 601) #(930 'PERCENTAGE' 602) #(930 'PERFORM' 603) #(930 'PERFORMING' 604) #(930 'PERMISSIONS' 605) #(930 'PLACES' 607) #(930 'POOL' 608) #(930 'POSITION' 609) #(930 'POS_HIGH' 610) #(930 'POS_LOW' 611) #(930 'PRAGMAS' 612) #(930 'PRECHECK' 613) #(930 'PRECOMPILED' 614) #(930 'PREFERRED' 615) #(930 'PRESERVING' 616) #(930 'PRIMARY' 617) #(930 'PRINT' 618) #(930 'PRIVATE' 620) #(930 'PRIVILEGED' 621) #(930 'PROCEDURE' 622) #(930 'PROGRAM' 623) #(930 'PROPERTY' 624) #(930 'PROTECTED' 625) #(930 'PROVIDE' 626) #(930 'PUBLIC' 627) #(930 'PUSH' 628) #(930 'PUSHBUTTON' 629) #(930 'PUT' 630) #(930 'QUEUEONLY' 632) #(930 'QUICKINFO' 633) #(930 'RADIOBUTTON' 634) #(930 'RAISE' 635) #(930 'RAISING' 636) #(930 'RANGE' 637) #(930 'RANGES' 638) #(930 'RAW' 639) #(930 'READ' 640) #(930 'RECEIVE' 642) #(930 'RECEIVED' 643) #(930 'RECEIVER' 644) #(930 'RECEIVING' 645) #(930 'REDEFINITION' 646) #(930 'REDUCE' 647) #(930 'REF' 648) #(930 'REFERENCE' 649) #(930 'REFRESH' 650) #(930 'REGEX' 651) #(930 'REJECT' 652) #(930 'RELATING' 653) #(930 'RENAMING' 654) #(930 'REPLACE' 655) #(930 'REPLACEMENT' 656) #(930 'REPLACING' 657) #(930 'REPORT' 658) #(930 'REPORTED' 659) #(930 'REQUEST' 660) #(930 'REQUESTED' 661) #(930 'REQUIRED' 662) #(930 'RESERVE' 663) #(930 'RESET' 664) #(930 'RESOLUTION' 665) #(930 'RESPECTING' 666) #(930 'RESPONSE' 667) #(930 'RESPONSES' 668) #(930 'RESULT' 669) #(930 'RESULTS' 670) #(930 'RESUMABLE' 671) #(930 'RESUME' 672) #(930 'RETRY' 673) #(930 'RETURN' 674) #(930 'RETURNCODE' 675) #(930 'RETURNING' 676) #(930 'RIGHT' 677) #(930 'RIGHTPLUS' 679) #(930 'RIGHTSPACE' 680) #(930 'RISK' 681) #(930 'ROLLBACK' 682) #(930 'ROUND' 683) #(930 'ROWS' 684) #(930 'RTRIM' 883) #(930 'RUN' 685) #(930 'SAP' 686) #(930 'SAVE' 688) #(930 'SAVING' 689) #(930 'SCALE_PRESERVING' 690) #(930 'SCALE_PRESERVING_SCIENTIFIC' 691) #(930 'SCAN' 692) #(930 'SCIENTIFIC' 693) #(930 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(930 'SCREEN' 695) #(930 'SCROLL' 696) #(930 'SCROLLING' 698) #(930 'SEARCH' 699) #(930 'SECONDARY' 700) #(930 'SECONDS' 701) #(930 'SECTION' 702) #(930 'SELECT' 703) #(930 'SELECTION' 705) #(930 'SELECTIONS' 710) #(930 'SEND' 711) #(930 'SEPARATE' 712) #(930 'SEPARATED' 713) #(930 'SESSION' 714) #(930 'SET' 715) #(930 'SHARED' 716) #(930 'SHIFT' 717) #(930 'SHORT' 718) #(930 'SHORTDUMP' 719) #(930 'SIGN' 721) #(930 'SIGN_AS_POSTFIX' 722) #(930 'SIMPLE' 723) #(930 'SIMULATION' 724) #(930 'SINGLE' 725) #(930 'SIZE' 726) #(930 'SKIP' 727) #(930 'SKIPPING' 728) #(930 'SMART' 729) #(930 'SOME' 730) #(930 'SORT' 731) #(930 'SORTABLE' 732) #(930 'SORTED' 733) #(930 'SOURCE' 734) #(930 'SPACE' 735) #(930 'SPECIFIED' 736) #(930 'SPLIT' 737) #(930 'SPOOL' 738) #(930 'SPOTS' 739) #(930 'SQL' 740) #(930 'SQLSCRIPT' 741) #(930 'STABLE' 742) #(930 'STAMP' 743) #(930 'STANDARD' 744) #(930 'STARTING' 746) #(930 'STATE' 747) #(930 'STATEMENT' 748) #(930 'STATEMENTS' 749) #(930 'STATIC' 750) #(930 'STATICS' 751) #(930 'STATUSINFO' 752) #(930 'STEP' 753) #(930 'STOP' 755) #(930 'STRUCTURE' 756) #(930 'STRUCTURES' 757) #(930 'STYLE' 758) #(930 'SUBKEY' 759) #(930 'SUBMATCHES' 760) #(930 'SUBMIT' 761) #(930 'SUBROUTINE' 762) #(930 'SUBSCREEN' 763) #(930 'SUBSTRING' 764) #(930 'SUBTRACT' 765) #(930 'SUFFIX' 767) #(930 'SUM' 768) #(930 'SUMMARY' 769) #(930 'SUPPLIED' 770) #(930 'SUPPLY' 771) #(930 'SUPPRESS' 772) #(930 'SWITCH' 773) #(930 'SYBASE' 774) #(930 'SYMBOL' 775) #(930 'T000' 779) #(930 'TAB' 780) #(930 'TABBED' 781) #(930 'TABLE' 782) #(930 'TABLES' 783) #(930 'TABLEVIEW' 784) #(930 'TABSTRIP' 785) #(930 'TARGET' 786) #(930 'TASK' 787) #(930 'TASKS' 788) #(930 'TEST' 789) #(930 'TESTING' 792) #(930 'TEXT' 793) #(930 'TEXTPOOL' 794) #(930 'THEN' 795) #(930 'THROW' 796) #(930 'TIME' 797) #(930 'TIMES' 798) #(930 'TIMESTAMP' 799) #(930 'TIMEZONE' 800) #(930 'TITLE' 801) #(930 'TITLEBAR' 802) #(930 'TO' 803) #(930 'TOKENIZATION' 804) #(930 'TOKENS' 805) #(930 'TRAILING' 810) #(930 'TRANSACTION' 811) #(930 'TRANSFER' 812) #(930 'TRANSFORMATION' 813) #(930 'TRANSLATE' 814) #(930 'TRANSPORTING' 815) #(930 'TRMAC' 816) #(930 'TRUNCATION' 817) #(930 'TRY' 818) #(930 'TYPE' 819) #(930 'TYPES' 822) #(930 'ULINE' 823) #(930 'UNASSIGN' 824) #(930 'UNDER' 825) #(930 'UNICODE' 826) #(930 'UNION' 827) #(930 'UNIQUE' 828) #(930 'UNIT' 829) #(930 'UNIX' 830) #(930 'UNPACK' 831) #(930 'UNTIL' 832) #(930 'UNWIND' 833) #(930 'UP' 834) #(930 'UPDATE' 835) #(930 'UPPER' 836) #(930 'USER' 837) #(930 'USING' 839) #(930 'UTCLONG' 840) #(930 'UUID' 884) #(930 'VALID' 842) #(930 'VALIDATE' 843) #(930 'VALUE' 844) #(930 'VALUES' 846) #(930 'VARY' 847) #(930 'VARYING' 848) #(930 'VERSION' 849) #(930 'VIA' 850) #(930 'VISIBLE' 851) #(930 'WAIT' 852) #(930 'WHEN' 853) #(930 'WHERE' 854) #(930 'WHILE' 855) #(930 'WIDTH' 856) #(930 'WINDOW' 857) #(930 'WINDOWS' 858) #(930 'WITH' 859) #(930 'WITHOUT' 862) #(930 'WORD' 863) #(930 'WORK' 864) #(930 'WORKSPACE' 865) #(930 'WRITE' 866) #(930 'WRITER' 867) #(930 'XML' 868) #(930 'XSD' 869) #(930 'XSDBOOL' 870) #(930 'YES' 871) #(930 'YYMMDD' 872) #(930 'ZERO' 874) #(930 'ZONE' 875) #(950 '%_FINAL' 2) #(950 '%_HINTS' 3) #(950 '%_PREDEFINED' 4) #(950 '**' 8) #(950 'ABS' 876) #(950 'ABSTRACT' 33) #(950 'ACCEPT' 34) #(950 'ACCEPTING' 35) #(950 'ACCESS' 36) #(950 'ACCORDING' 37) #(950 'ACTION' 38) #(950 'ACTIVATION' 39) #(950 'ACTUAL' 40) #(950 'ADABAS' 41) #(950 'ADD' 42) #(950 'ADJACENT' 44) #(950 'ALIAS' 45) #(950 'ALIASES' 46) #(950 'ALIGN' 47) #(950 'ALL' 48) #(950 'ALLOCATE' 49) #(950 'ALPHA' 50) #(950 'AMDP' 51) #(950 'ANALYSIS' 52) #(950 'ANALYZER' 53) #(950 'AND' 54) #(950 'ANY' 55) #(950 'APPEND' 56) #(950 'APPENDING' 57) #(950 'APPLICATION' 58) #(950 'ARCHIVE' 59) #(950 'AREA' 60) #(950 'ARITHMETIC' 61) #(950 'AS' 62) #(950 'AS400' 63) #(950 'ASCENDING' 64) #(950 'ASSERT' 65) #(950 'ASSIGN' 66) #(950 'ASSIGNED' 67) #(950 'ASSIGNING' 68) #(950 'ASSOCIATION' 69) #(950 'ASYNCHRONOUS' 70) #(950 'AT' 71) #(950 'ATTRIBUTES' 72) #(950 'AUGMENTING' 73) #(950 'AUTHORITY' 74) #(950 'AUTHORIZATION' 76) #(950 'AUTO' 77) #(950 'AVG' 78) #(950 'BACK' 79) #(950 'BACKGROUND' 80) #(950 'BACKWARD' 81) #(950 'BADI' 82) #(950 'BASE' 83) #(950 'BEFORE' 84) #(950 'BEGIN' 85) #(950 'BEHAVIOR' 86) #(950 'BETWEEN' 87) #(950 'BINARY' 88) #(950 'BIT' 89) #(950 'BLANK' 94) #(950 'BLANKS' 95) #(950 'BLOCK' 96) #(950 'BLOCKS' 97) #(950 'BOOLC' 98) #(950 'BOUND' 99) #(950 'BOUNDARIES' 100) #(950 'BOUNDS' 101) #(950 'BOXED' 102) #(950 'BREAK' 103) #(950 'BUFFER' 105) #(950 'BY' 106) #(950 'BYPASSING' 107) #(950 'BYTE' 108) #(950 'CA' 116) #(950 'CALL' 117) #(950 'CALLING' 118) #(950 'CASE' 119) #(950 'CAST' 120) #(950 'CASTING' 121) #(950 'CATCH' 122) #(950 'CDS' 123) #(950 'CEIL' 877) #(950 'CENTER' 124) #(950 'CENTERED' 125) #(950 'CHAIN' 126) #(950 'CHANGE' 129) #(950 'CHANGING' 130) #(950 'CHANNELS' 131) #(950 'CHAR' 132) #(950 'CHARACTER' 134) #(950 'CHECK' 135) #(950 'CHECKBOX' 136) #(950 'CID' 137) #(950 'CIRCULAR' 138) #(950 'CLASS' 139) #(950 'CLEANUP' 143) #(950 'CLEAR' 144) #(950 'CLIENT' 145) #(950 'CLIENTS' 146) #(950 'CLOCK' 147) #(950 'CLONE' 148) #(950 'CLOSE' 149) #(950 'CN' 150) #(950 'CO' 151) #(950 'COALESCE' 878) #(950 'CODE' 152) #(950 'COLLECT' 153) #(950 'COLOR' 154) #(950 'COLUMN' 155) #(950 'COLUMNS' 156) #(950 'COL_BACKGROUND' 157) #(950 'COL_GROUP' 158) #(950 'COL_HEADING' 159) #(950 'COL_KEY' 160) #(950 'COL_NEGATIVE' 161) #(950 'COL_NORMAL' 162) #(950 'COL_POSITIVE' 163) #(950 'COL_TOTAL' 164) #(950 'COMMENT' 165) #(950 'COMMENTS' 166) #(950 'COMMIT' 167) #(950 'COMMON' 168) #(950 'COMMUNICATION' 169) #(950 'COMPARING' 170) #(950 'COMPONENT' 171) #(950 'COMPONENTS' 172) #(950 'COMPRESSION' 173) #(950 'COMPUTE' 174) #(950 'CONCAT' 879) #(950 'CONCATENATE' 175) #(950 'CONCAT_WITH_SPACE' 880) #(950 'COND' 176) #(950 'CONDENSE' 177) #(950 'CONDITION' 178) #(950 'CONNECTION' 179) #(950 'CONSTANT' 180) #(950 'CONSTANTS' 181) #(950 'CONTEXT' 182) #(950 'CONTEXTS' 183) #(950 'CONTINUE' 184) #(950 'CONTROL' 185) #(950 'CONTROLS' 186) #(950 'CONV' 187) #(950 'CONVERSION' 188) #(950 'CONVERT' 189) #(950 'COPIES' 190) #(950 'COPY' 191) #(950 'CORRESPONDING' 192) #(950 'COUNT' 193) #(950 'COUNTRY' 194) #(950 'COVER' 195) #(950 'CP' 196) #(950 'CPI' 197) #(950 'CREATE' 198) #(950 'CRITICAL' 199) #(950 'CS' 200) #(950 'CURRENCY' 201) #(950 'CURRENT' 202) #(950 'CURSOR' 203) #(950 'DANGEROUS' 205) #(950 'DATA' 206) #(950 'DATABASE' 207) #(950 'DATAINFO' 208) #(950 'DATASET' 209) #(950 'DATE' 210) #(950 'DAYLIGHT' 211) #(950 'DB2' 212) #(950 'DB6' 213) #(950 'DDL' 216) #(950 'DDMMYY' 217) #(950 'DEALLOCATE' 218) #(950 'DEC' 219) #(950 'DECIMALS' 220) #(950 'DECLARATIONS' 221) #(950 'DEEP' 222) #(950 'DEFAULT' 223) #(950 'DEFERRED' 224) #(950 'DEFINE' 225) #(950 'DEFINITION' 226) #(950 'DELETE' 227) #(950 'DELETING' 228) #(950 'DEMAND' 229) #(950 'DEPARTMENT' 230) #(950 'DESCENDING' 231) #(950 'DESCRIBE' 232) #(950 'DESTINATION' 233) #(950 'DETAIL' 234) #(950 'DETERMINATION' 235) #(950 'DETERMINE' 236) #(950 'DIALOG' 237) #(950 'DID' 238) #(950 'DIRECTORY' 239) #(950 'DISCARDING' 240) #(950 'DISPLAY' 241) #(950 'DISTANCE' 243) #(950 'DISTINCT' 244) #(950 'DIV' 245) #(950 'DIVIDE' 246) #(950 'DO' 247) #(950 'DUMMY' 248) #(950 'DUPLICATE' 249) #(950 'DUPLICATES' 250) #(950 'DURATION' 251) #(950 'DURING' 252) #(950 'DYNPRO' 253) #(950 'EARLY' 254) #(950 'EDIT' 255) #(950 'ELSE' 257) #(950 'ELSEIF' 258) #(950 'EMPTY' 259) #(950 'ENABLED' 260) #(950 'ENABLING' 261) #(950 'ENCODING' 262) #(950 'END' 263) #(950 'ENDAT' 270) #(950 'ENDCASE' 271) #(950 'ENDCATCH' 272) #(950 'ENDCHAIN' 273) #(950 'ENDCLASS' 274) #(950 'ENDDO' 275) #(950 'ENDENHANCEMENT' 276) #(950 'ENDEXEC' 277) #(950 'ENDFORM' 278) #(950 'ENDFUNCTION' 279) #(950 'ENDIAN' 280) #(950 'ENDIF' 281) #(950 'ENDING' 282) #(950 'ENDINTERFACE' 283) #(950 'ENDLOOP' 284) #(950 'ENDMETHOD' 285) #(950 'ENDMODULE' 286) #(950 'ENDON' 287) #(950 'ENDPROVIDE' 288) #(950 'ENDSELECT' 289) #(950 'ENDTRY' 290) #(950 'ENDWHILE' 291) #(950 'ENDWITH' 292) #(950 'ENGINEERING' 293) #(950 'ENHANCEMENT' 294) #(950 'ENHANCEMENTS' 297) #(950 'ENTITIES' 298) #(950 'ENTITY' 299) #(950 'ENTRIES' 300) #(950 'ENTRY' 301) #(950 'ENUM' 302) #(950 'ENVIRONMENT' 303) #(950 'EQ' 304) #(950 'EQUIV' 305) #(950 'ERRORS' 306) #(950 'ESCAPE' 307) #(950 'ESCAPING' 308) #(950 'EVENT' 309) #(950 'EVENTS' 310) #(950 'EXACT' 311) #(950 'EXCEPT' 312) #(950 'EXCEPTION' 313) #(950 'EXCEPTIONS' 315) #(950 'EXCLUDE' 316) #(950 'EXCLUDING' 317) #(950 'EXEC' 318) #(950 'EXECUTE' 319) #(950 'EXISTS' 320) #(950 'EXIT' 321) #(950 'EXPANDING' 323) #(950 'EXPIRATION' 324) #(950 'EXPLICIT' 325) #(950 'EXPONENT' 326) #(950 'EXPORT' 327) #(950 'EXPORTING' 328) #(950 'EXTENDED' 329) #(950 'EXTENSION' 330) #(950 'EXTRACT' 331) #(950 'FAIL' 332) #(950 'FAILED' 333) #(950 'FEATURES' 334) #(950 'FETCH' 335) #(950 'FIELD' 336) #(950 'FIELDS' 340) #(950 'FILE' 341) #(950 'FILL' 342) #(950 'FILTER' 343) #(950 'FILTERS' 344) #(950 'FINAL' 345) #(950 'FIND' 346) #(950 'FIRST' 347) #(950 'FLOOR' 881) #(950 'FLTP' 350) #(950 'FLUSH' 351) #(950 'FONT' 352) #(950 'FOR' 353) #(950 'FORM' 354) #(950 'FORMAT' 355) #(950 'FORWARD' 356) #(950 'FOUND' 357) #(950 'FRAME' 358) #(950 'FRAMES' 359) #(950 'FREE' 360) #(950 'FRIENDS' 361) #(950 'FROM' 362) #(950 'FULL' 363) #(950 'FUNCTION' 364) #(950 'FURTHER' 366) #(950 'GE' 367) #(950 'GENERATE' 368) #(950 'GET' 369) #(950 'GIVING' 370) #(950 'GLOBAL' 371) #(950 'GRAPH' 372) #(950 'GROUP' 373) #(950 'GROUPS' 374) #(950 'GT' 375) #(950 'HANDLE' 376) #(950 'HANDLER' 377) #(950 'HARMLESS' 378) #(950 'HASHED' 379) #(950 'HAVING' 380) #(950 'HDB' 381) #(950 'HEADER' 382) #(950 'HEADERS' 383) #(950 'HEADING' 384) #(950 'HIDE' 387) #(950 'HIERARCHY' 388) #(950 'HIGH' 389) #(950 'HINT' 390) #(950 'HOLD' 391) #(950 'HOTSPOT' 392) #(950 'ICON' 393) #(950 'ID' 394) #(950 'IDENTIFICATION' 395) #(950 'IDENTIFIER' 396) #(950 'IDS' 397) #(950 'IF' 398) #(950 'IGNORE' 399) #(950 'IGNORING' 400) #(950 'IMMEDIATELY' 401) #(950 'IMPLEMENTATION' 402) #(950 'IMPLEMENTED' 403) #(950 'IMPLICIT' 404) #(950 'IMPORT' 405) #(950 'IMPORTING' 406) #(950 'IN' 407) #(950 'INACTIVE' 408) #(950 'INCL' 409) #(950 'INCLUDE' 410) #(950 'INCLUDES' 411) #(950 'INCREMENT' 412) #(950 'INDEX' 413) #(950 'INFORMIX' 415) #(950 'INFOTYPES' 416) #(950 'INHERITING' 417) #(950 'INIT' 418) #(950 'INITIAL' 419) #(950 'INITIALIZATION' 420) #(950 'INNER' 421) #(950 'INPUT' 422) #(950 'INSERT' 423) #(950 'INSTANCE' 424) #(950 'INSTANCES' 425) #(950 'INT2' 426) #(950 'INT4' 427) #(950 'INT8' 428) #(950 'INTENSIFIED' 429) #(950 'INTERFACE' 430) #(950 'INTERFACES' 431) #(950 'INTERNAL' 432) #(950 'INTERVALS' 433) #(950 'INTO' 434) #(950 'INVERSE' 435) #(950 'IS' 437) #(950 'ISO' 438) #(950 'JOB' 439) #(950 'JOIN' 440) #(950 'KEEP' 441) #(950 'KEEPING' 442) #(950 'KERNEL' 443) #(950 'KEY' 444) #(950 'KEYS' 445) #(950 'KEYWORDS' 446) #(950 'KIND' 447) #(950 'LANGUAGE' 448) #(950 'LAST' 449) #(950 'LATE' 450) #(950 'LAYOUT' 451) #(950 'LE' 452) #(950 'LEADING' 453) #(950 'LEAVE' 454) #(950 'LEFT' 455) #(950 'LEFTPLUS' 457) #(950 'LEFTSPACE' 458) #(950 'LEGACY' 459) #(950 'LENGTH' 460) #(950 'LET' 461) #(950 'LEVEL' 462) #(950 'LEVELS' 463) #(950 'LIKE' 464) #(950 'LINE' 465) #(950 'LINEFEED' 469) #(950 'LINES' 470) #(950 'LINK' 471) #(950 'LIST' 472) #(950 'LISTBOX' 474) #(950 'LOAD' 475) #(950 'LOCAL' 477) #(950 'LOCALE' 478) #(950 'LOCK' 479) #(950 'LOCKS' 480) #(950 'LOGFILE' 482) #(950 'LOGICAL' 483) #(950 'LONG' 484) #(950 'LOOP' 485) #(950 'LOW' 486) #(950 'LOWER' 487) #(950 'LPI' 488) #(950 'LT' 489) #(950 'LTRIM' 882) #(950 'MAIN' 491) #(950 'MAPPED' 492) #(950 'MAPPING' 493) #(950 'MARGIN' 494) #(950 'MARK' 495) #(950 'MASK' 496) #(950 'MATCH' 497) #(950 'MATCHCODE' 498) #(950 'MAX' 499) #(950 'MAXIMUM' 500) #(950 'MEDIUM' 501) #(950 'MEMBERS' 502) #(950 'MEMORY' 503) #(950 'MESH' 504) #(950 'MESSAGE' 505) #(950 'MESSAGES' 507) #(950 'MESSAGING' 508) #(950 'METHOD' 509) #(950 'METHODS' 510) #(950 'MIN' 511) #(950 'MMDDYY' 514) #(950 'MOD' 515) #(950 'MODE' 516) #(950 'MODIF' 517) #(950 'MODIFIER' 518) #(950 'MODIFY' 519) #(950 'MODULE' 520) #(950 'MOVE' 521) #(950 'MSSQLNT' 523) #(950 'MULTIPLY' 524) #(950 'NA' 526) #(950 'NAME' 527) #(950 'NAMETAB' 528) #(950 'NATIVE' 529) #(950 'NE' 530) #(950 'NESTED' 531) #(950 'NESTING' 532) #(950 'NEW' 533) #(950 'NEXT' 537) #(950 'NO' 538) #(950 'NODES' 550) #(950 'NOT' 553) #(950 'NP' 554) #(950 'NS' 555) #(950 'NULL' 556) #(950 'NUMBER' 557) #(950 'NUMBERING' 558) #(950 'NUMC' 559) #(950 'OBJECT' 561) #(950 'OBJECTS' 562) #(950 'OBJMGR' 563) #(950 'OBLIGATORY' 564) #(950 'OCCURENCE' 565) #(950 'OCCURENCES' 566) #(950 'OCCURRENCE' 567) #(950 'OCCURRENCES' 568) #(950 'OCCURS' 569) #(950 'OF' 570) #(950 'OFF' 571) #(950 'OFFSET' 572) #(950 'ON' 573) #(950 'ONE' 574) #(950 'ONLY' 575) #(950 'OPEN' 576) #(950 'OPTION' 577) #(950 'OPTIONAL' 578) #(950 'OPTIONS' 579) #(950 'OR' 580) #(950 'ORACLE' 581) #(950 'ORDER' 582) #(950 'OTHERS' 583) #(950 'OUT' 584) #(950 'OUTER' 585) #(950 'OUTPUT' 586) #(950 'OVERFLOW' 588) #(950 'OVERLAY' 589) #(950 'PACK' 590) #(950 'PACKAGE' 591) #(950 'PAD' 592) #(950 'PADDING' 593) #(950 'PAGE' 594) #(950 'PAGES' 595) #(950 'PARAMETER' 596) #(950 'PARAMETERS' 598) #(950 'PART' 599) #(950 'PARTIALLY' 600) #(950 'PCRE' 601) #(950 'PERCENTAGE' 602) #(950 'PERFORM' 603) #(950 'PERFORMING' 604) #(950 'PERMISSIONS' 605) #(950 'PLACES' 607) #(950 'POOL' 608) #(950 'POSITION' 609) #(950 'POS_HIGH' 610) #(950 'POS_LOW' 611) #(950 'PRAGMAS' 612) #(950 'PRECHECK' 613) #(950 'PRECOMPILED' 614) #(950 'PREFERRED' 615) #(950 'PRESERVING' 616) #(950 'PRIMARY' 617) #(950 'PRINT' 618) #(950 'PRIVATE' 620) #(950 'PRIVILEGED' 621) #(950 'PROCEDURE' 622) #(950 'PROGRAM' 623) #(950 'PROPERTY' 624) #(950 'PROTECTED' 625) #(950 'PROVIDE' 626) #(950 'PUBLIC' 627) #(950 'PUSH' 628) #(950 'PUSHBUTTON' 629) #(950 'PUT' 630) #(950 'QUEUEONLY' 632) #(950 'QUICKINFO' 633) #(950 'RADIOBUTTON' 634) #(950 'RAISE' 635) #(950 'RAISING' 636) #(950 'RANGE' 637) #(950 'RANGES' 638) #(950 'RAW' 639) #(950 'READ' 640) #(950 'RECEIVE' 642) #(950 'RECEIVED' 643) #(950 'RECEIVER' 644) #(950 'RECEIVING' 645) #(950 'REDEFINITION' 646) #(950 'REDUCE' 647) #(950 'REF' 648) #(950 'REFERENCE' 649) #(950 'REFRESH' 650) #(950 'REGEX' 651) #(950 'REJECT' 652) #(950 'RELATING' 653) #(950 'RENAMING' 654) #(950 'REPLACE' 655) #(950 'REPLACEMENT' 656) #(950 'REPLACING' 657) #(950 'REPORT' 658) #(950 'REPORTED' 659) #(950 'REQUEST' 660) #(950 'REQUESTED' 661) #(950 'REQUIRED' 662) #(950 'RESERVE' 663) #(950 'RESET' 664) #(950 'RESOLUTION' 665) #(950 'RESPECTING' 666) #(950 'RESPONSE' 667) #(950 'RESPONSES' 668) #(950 'RESULT' 669) #(950 'RESULTS' 670) #(950 'RESUMABLE' 671) #(950 'RESUME' 672) #(950 'RETRY' 673) #(950 'RETURN' 674) #(950 'RETURNCODE' 675) #(950 'RETURNING' 676) #(950 'RIGHT' 677) #(950 'RIGHTPLUS' 679) #(950 'RIGHTSPACE' 680) #(950 'RISK' 681) #(950 'ROLLBACK' 682) #(950 'ROUND' 683) #(950 'ROWS' 684) #(950 'RTRIM' 883) #(950 'RUN' 685) #(950 'SAP' 686) #(950 'SAVE' 688) #(950 'SAVING' 689) #(950 'SCALE_PRESERVING' 690) #(950 'SCALE_PRESERVING_SCIENTIFIC' 691) #(950 'SCAN' 692) #(950 'SCIENTIFIC' 693) #(950 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(950 'SCREEN' 695) #(950 'SCROLL' 696) #(950 'SCROLLING' 698) #(950 'SEARCH' 699) #(950 'SECONDARY' 700) #(950 'SECONDS' 701) #(950 'SECTION' 702) #(950 'SELECT' 703) #(950 'SELECTION' 705) #(950 'SELECTIONS' 710) #(950 'SEND' 711) #(950 'SEPARATE' 712) #(950 'SEPARATED' 713) #(950 'SESSION' 714) #(950 'SET' 715) #(950 'SHARED' 716) #(950 'SHIFT' 717) #(950 'SHORT' 718) #(950 'SHORTDUMP' 719) #(950 'SIGN' 721) #(950 'SIGN_AS_POSTFIX' 722) #(950 'SIMPLE' 723) #(950 'SIMULATION' 724) #(950 'SINGLE' 725) #(950 'SIZE' 726) #(950 'SKIP' 727) #(950 'SKIPPING' 728) #(950 'SMART' 729) #(950 'SOME' 730) #(950 'SORT' 731) #(950 'SORTABLE' 732) #(950 'SORTED' 733) #(950 'SOURCE' 734) #(950 'SPACE' 735) #(950 'SPECIFIED' 736) #(950 'SPLIT' 737) #(950 'SPOOL' 738) #(950 'SPOTS' 739) #(950 'SQL' 740) #(950 'SQLSCRIPT' 741) #(950 'STABLE' 742) #(950 'STAMP' 743) #(950 'STANDARD' 744) #(950 'STARTING' 746) #(950 'STATE' 747) #(950 'STATEMENT' 748) #(950 'STATEMENTS' 749) #(950 'STATIC' 750) #(950 'STATICS' 751) #(950 'STATUSINFO' 752) #(950 'STEP' 753) #(950 'STOP' 755) #(950 'STRUCTURE' 756) #(950 'STRUCTURES' 757) #(950 'STYLE' 758) #(950 'SUBKEY' 759) #(950 'SUBMATCHES' 760) #(950 'SUBMIT' 761) #(950 'SUBROUTINE' 762) #(950 'SUBSCREEN' 763) #(950 'SUBSTRING' 764) #(950 'SUBTRACT' 765) #(950 'SUFFIX' 767) #(950 'SUM' 768) #(950 'SUMMARY' 769) #(950 'SUPPLIED' 770) #(950 'SUPPLY' 771) #(950 'SUPPRESS' 772) #(950 'SWITCH' 773) #(950 'SYBASE' 774) #(950 'SYMBOL' 775) #(950 'T000' 779) #(950 'TAB' 780) #(950 'TABBED' 781) #(950 'TABLE' 782) #(950 'TABLES' 783) #(950 'TABLEVIEW' 784) #(950 'TABSTRIP' 785) #(950 'TARGET' 786) #(950 'TASK' 787) #(950 'TASKS' 788) #(950 'TEST' 789) #(950 'TESTING' 792) #(950 'TEXT' 793) #(950 'TEXTPOOL' 794) #(950 'THEN' 795) #(950 'THROW' 796) #(950 'TIME' 797) #(950 'TIMES' 798) #(950 'TIMESTAMP' 799) #(950 'TIMEZONE' 800) #(950 'TITLE' 801) #(950 'TITLEBAR' 802) #(950 'TO' 803) #(950 'TOKENIZATION' 804) #(950 'TOKENS' 805) #(950 'TRAILING' 810) #(950 'TRANSACTION' 811) #(950 'TRANSFER' 812) #(950 'TRANSFORMATION' 813) #(950 'TRANSLATE' 814) #(950 'TRANSPORTING' 815) #(950 'TRMAC' 816) #(950 'TRUNCATION' 817) #(950 'TRY' 818) #(950 'TYPE' 819) #(950 'TYPES' 822) #(950 'ULINE' 823) #(950 'UNASSIGN' 824) #(950 'UNDER' 825) #(950 'UNICODE' 826) #(950 'UNION' 827) #(950 'UNIQUE' 828) #(950 'UNIT' 829) #(950 'UNIX' 830) #(950 'UNPACK' 831) #(950 'UNTIL' 832) #(950 'UNWIND' 833) #(950 'UP' 834) #(950 'UPDATE' 835) #(950 'UPPER' 836) #(950 'USER' 837) #(950 'USING' 839) #(950 'UTCLONG' 840) #(950 'UUID' 884) #(950 'VALID' 842) #(950 'VALIDATE' 843) #(950 'VALUE' 844) #(950 'VALUES' 846) #(950 'VARY' 847) #(950 'VARYING' 848) #(950 'VERSION' 849) #(950 'VIA' 850) #(950 'VISIBLE' 851) #(950 'WAIT' 852) #(950 'WHEN' 853) #(950 'WHERE' 854) #(950 'WHILE' 855) #(950 'WIDTH' 856) #(950 'WINDOW' 857) #(950 'WINDOWS' 858) #(950 'WITH' 859) #(950 'WITHOUT' 862) #(950 'WORD' 863) #(950 'WORK' 864) #(950 'WORKSPACE' 865) #(950 'WRITE' 866) #(950 'WRITER' 867) #(950 'XML' 868) #(950 'XSD' 869) #(950 'XSDBOOL' 870) #(950 'YES' 871) #(950 'YYMMDD' 872) #(950 'ZERO' 874) #(950 'ZONE' 875) #(892 '%_FINAL' 2) #(892 '%_HINTS' 3) #(892 '%_PREDEFINED' 4) #(892 '**' 8) #(892 '?TO' 31) #(892 'ABS' 876) #(892 'ABSTRACT' 33) #(892 'ACCEPT' 34) #(892 'ACCEPTING' 35) #(892 'ACCESS' 36) #(892 'ACCORDING' 37) #(892 'ACTION' 38) #(892 'ACTIVATION' 39) #(892 'ACTUAL' 40) #(892 'ADABAS' 41) #(892 'ADD' 42) #(892 'ADJACENT' 44) #(892 'ALIAS' 45) #(892 'ALIASES' 46) #(892 'ALIGN' 47) #(892 'ALL' 48) #(892 'ALLOCATE' 49) #(892 'ALPHA' 50) #(892 'AMDP' 51) #(892 'ANALYSIS' 52) #(892 'ANALYZER' 53) #(892 'AND' 54) #(892 'ANY' 55) #(892 'APPEND' 56) #(892 'APPENDING' 57) #(892 'APPLICATION' 58) #(892 'ARCHIVE' 59) #(892 'AREA' 60) #(892 'ARITHMETIC' 61) #(892 'AS' 62) #(892 'AS400' 63) #(892 'ASCENDING' 64) #(892 'ASSERT' 65) #(892 'ASSIGN' 66) #(892 'ASSIGNED' 67) #(892 'ASSIGNING' 68) #(892 'ASSOCIATION' 69) #(892 'ASYNCHRONOUS' 70) #(892 'AT' 71) #(892 'ATTRIBUTES' 72) #(892 'AUGMENTING' 73) #(892 'AUTHORITY' 74) #(892 'AUTHORIZATION' 76) #(892 'AUTO' 77) #(892 'AVG' 78) #(892 'BACK' 79) #(892 'BACKGROUND' 80) #(892 'BACKWARD' 81) #(892 'BADI' 82) #(892 'BASE' 83) #(892 'BEFORE' 84) #(892 'BEGIN' 85) #(892 'BEHAVIOR' 86) #(892 'BETWEEN' 87) #(892 'BINARY' 88) #(892 'BIT' 89) #(892 'BLANK' 94) #(892 'BLANKS' 95) #(892 'BLOCK' 96) #(892 'BLOCKS' 97) #(892 'BOOLC' 98) #(892 'BOUND' 99) #(892 'BOUNDARIES' 100) #(892 'BOUNDS' 101) #(892 'BOXED' 102) #(892 'BREAK' 103) #(892 'BUFFER' 105) #(892 'BY' 106) #(892 'BYPASSING' 107) #(892 'BYTE' 108) #(892 'CA' 116) #(892 'CALL' 117) #(892 'CALLING' 118) #(892 'CASE' 119) #(892 'CAST' 120) #(892 'CASTING' 121) #(892 'CATCH' 122) #(892 'CDS' 123) #(892 'CEIL' 877) #(892 'CENTER' 124) #(892 'CENTERED' 125) #(892 'CHAIN' 126) #(892 'CHANGE' 129) #(892 'CHANGING' 130) #(892 'CHANNELS' 131) #(892 'CHAR' 132) #(892 'CHARACTER' 134) #(892 'CHECK' 135) #(892 'CHECKBOX' 136) #(892 'CID' 137) #(892 'CIRCULAR' 138) #(892 'CLASS' 139) #(892 'CLEANUP' 143) #(892 'CLEAR' 144) #(892 'CLIENT' 145) #(892 'CLIENTS' 146) #(892 'CLOCK' 147) #(892 'CLONE' 148) #(892 'CLOSE' 149) #(892 'CN' 150) #(892 'CO' 151) #(892 'COALESCE' 878) #(892 'CODE' 152) #(892 'COLLECT' 153) #(892 'COLOR' 154) #(892 'COLUMN' 155) #(892 'COLUMNS' 156) #(892 'COL_BACKGROUND' 157) #(892 'COL_GROUP' 158) #(892 'COL_HEADING' 159) #(892 'COL_KEY' 160) #(892 'COL_NEGATIVE' 161) #(892 'COL_NORMAL' 162) #(892 'COL_POSITIVE' 163) #(892 'COL_TOTAL' 164) #(892 'COMMENT' 165) #(892 'COMMENTS' 166) #(892 'COMMIT' 167) #(892 'COMMON' 168) #(892 'COMMUNICATION' 169) #(892 'COMPARING' 170) #(892 'COMPONENT' 171) #(892 'COMPONENTS' 172) #(892 'COMPRESSION' 173) #(892 'COMPUTE' 174) #(892 'CONCAT' 879) #(892 'CONCATENATE' 175) #(892 'CONCAT_WITH_SPACE' 880) #(892 'COND' 176) #(892 'CONDENSE' 177) #(892 'CONDITION' 178) #(892 'CONNECTION' 179) #(892 'CONSTANT' 180) #(892 'CONSTANTS' 181) #(892 'CONTEXT' 182) #(892 'CONTEXTS' 183) #(892 'CONTINUE' 184) #(892 'CONTROL' 185) #(892 'CONTROLS' 186) #(892 'CONV' 187) #(892 'CONVERSION' 188) #(892 'CONVERT' 189) #(892 'COPIES' 190) #(892 'COPY' 191) #(892 'CORRESPONDING' 192) #(892 'COUNT' 193) #(892 'COUNTRY' 194) #(892 'COVER' 195) #(892 'CP' 196) #(892 'CPI' 197) #(892 'CREATE' 198) #(892 'CRITICAL' 199) #(892 'CS' 200) #(892 'CURRENCY' 201) #(892 'CURRENT' 202) #(892 'CURSOR' 203) #(892 'DANGEROUS' 205) #(892 'DATA' 206) #(892 'DATABASE' 207) #(892 'DATAINFO' 208) #(892 'DATASET' 209) #(892 'DATE' 210) #(892 'DAYLIGHT' 211) #(892 'DB2' 212) #(892 'DB6' 213) #(892 'DD/MM/YY' 214) #(892 'DD/MM/YYYY' 215) #(892 'DDL' 216) #(892 'DDMMYY' 217) #(892 'DEALLOCATE' 218) #(892 'DEC' 219) #(892 'DECIMALS' 220) #(892 'DECLARATIONS' 221) #(892 'DEEP' 222) #(892 'DEFAULT' 223) #(892 'DEFERRED' 224) #(892 'DEFINE' 225) #(892 'DEFINITION' 226) #(892 'DELETE' 227) #(892 'DELETING' 228) #(892 'DEMAND' 229) #(892 'DEPARTMENT' 230) #(892 'DESCENDING' 231) #(892 'DESCRIBE' 232) #(892 'DESTINATION' 233) #(892 'DETAIL' 234) #(892 'DETERMINATION' 235) #(892 'DETERMINE' 236) #(892 'DIALOG' 237) #(892 'DID' 238) #(892 'DIRECTORY' 239) #(892 'DISCARDING' 240) #(892 'DISPLAY' 241) #(892 'DISTANCE' 243) #(892 'DISTINCT' 244) #(892 'DIV' 245) #(892 'DIVIDE' 246) #(892 'DO' 247) #(892 'DUMMY' 248) #(892 'DUPLICATE' 249) #(892 'DUPLICATES' 250) #(892 'DURATION' 251) #(892 'DURING' 252) #(892 'DYNPRO' 253) #(892 'EARLY' 254) #(892 'EDIT' 255) #(892 'ELSE' 257) #(892 'ELSEIF' 258) #(892 'EMPTY' 259) #(892 'ENABLED' 260) #(892 'ENABLING' 261) #(892 'ENCODING' 262) #(892 'END' 263) #(892 'ENDAT' 270) #(892 'ENDCASE' 271) #(892 'ENDCATCH' 272) #(892 'ENDCHAIN' 273) #(892 'ENDCLASS' 274) #(892 'ENDDO' 275) #(892 'ENDENHANCEMENT' 276) #(892 'ENDEXEC' 277) #(892 'ENDFORM' 278) #(892 'ENDFUNCTION' 279) #(892 'ENDIAN' 280) #(892 'ENDIF' 281) #(892 'ENDING' 282) #(892 'ENDINTERFACE' 283) #(892 'ENDLOOP' 284) #(892 'ENDMETHOD' 285) #(892 'ENDMODULE' 286) #(892 'ENDON' 287) #(892 'ENDPROVIDE' 288) #(892 'ENDSELECT' 289) #(892 'ENDTRY' 290) #(892 'ENDWHILE' 291) #(892 'ENDWITH' 292) #(892 'ENGINEERING' 293) #(892 'ENHANCEMENT' 294) #(892 'ENHANCEMENTS' 297) #(892 'ENTITIES' 298) #(892 'ENTITY' 299) #(892 'ENTRIES' 300) #(892 'ENTRY' 301) #(892 'ENUM' 302) #(892 'ENVIRONMENT' 303) #(892 'EQ' 304) #(892 'EQUIV' 305) #(892 'ERRORS' 306) #(892 'ESCAPE' 307) #(892 'ESCAPING' 308) #(892 'EVENT' 309) #(892 'EVENTS' 310) #(892 'EXACT' 311) #(892 'EXCEPT' 312) #(892 'EXCEPTION' 313) #(892 'EXCEPTIONS' 315) #(892 'EXCLUDE' 316) #(892 'EXCLUDING' 317) #(892 'EXEC' 318) #(892 'EXECUTE' 319) #(892 'EXISTS' 320) #(892 'EXIT' 321) #(892 'EXPANDING' 323) #(892 'EXPIRATION' 324) #(892 'EXPLICIT' 325) #(892 'EXPONENT' 326) #(892 'EXPORT' 327) #(892 'EXPORTING' 328) #(892 'EXTENDED' 329) #(892 'EXTENSION' 330) #(892 'EXTRACT' 331) #(892 'FAIL' 332) #(892 'FAILED' 333) #(892 'FEATURES' 334) #(892 'FETCH' 335) #(892 'FIELD' 336) #(892 'FIELDS' 340) #(892 'FILE' 341) #(892 'FILL' 342) #(892 'FILTER' 343) #(892 'FILTERS' 344) #(892 'FINAL' 345) #(892 'FIND' 346) #(892 'FIRST' 347) #(892 'FLOOR' 881) #(892 'FLTP' 350) #(892 'FLUSH' 351) #(892 'FONT' 352) #(892 'FOR' 353) #(892 'FORM' 354) #(892 'FORMAT' 355) #(892 'FORWARD' 356) #(892 'FOUND' 357) #(892 'FRAME' 358) #(892 'FRAMES' 359) #(892 'FREE' 360) #(892 'FRIENDS' 361) #(892 'FROM' 362) #(892 'FULL' 363) #(892 'FUNCTION' 364) #(892 'FURTHER' 366) #(892 'GE' 367) #(892 'GENERATE' 368) #(892 'GET' 369) #(892 'GIVING' 370) #(892 'GLOBAL' 371) #(892 'GRAPH' 372) #(892 'GROUP' 373) #(892 'GROUPS' 374) #(892 'GT' 375) #(892 'HANDLE' 376) #(892 'HANDLER' 377) #(892 'HARMLESS' 378) #(892 'HASHED' 379) #(892 'HAVING' 380) #(892 'HDB' 381) #(892 'HEADER' 382) #(892 'HEADERS' 383) #(892 'HEADING' 384) #(892 'HIDE' 387) #(892 'HIERARCHY' 388) #(892 'HIGH' 389) #(892 'HINT' 390) #(892 'HOLD' 391) #(892 'HOTSPOT' 392) #(892 'ICON' 393) #(892 'ID' 394) #(892 'IDENTIFICATION' 395) #(892 'IDENTIFIER' 396) #(892 'IDS' 397) #(892 'IF' 398) #(892 'IGNORE' 399) #(892 'IGNORING' 400) #(892 'IMMEDIATELY' 401) #(892 'IMPLEMENTATION' 402) #(892 'IMPLEMENTED' 403) #(892 'IMPLICIT' 404) #(892 'IMPORT' 405) #(892 'IMPORTING' 406) #(892 'IN' 407) #(892 'INACTIVE' 408) #(892 'INCL' 409) #(892 'INCLUDE' 410) #(892 'INCLUDES' 411) #(892 'INCREMENT' 412) #(892 'INDEX' 413) #(892 'INFORMIX' 415) #(892 'INFOTYPES' 416) #(892 'INHERITING' 417) #(892 'INIT' 418) #(892 'INITIAL' 419) #(892 'INITIALIZATION' 420) #(892 'INNER' 421) #(892 'INPUT' 422) #(892 'INSERT' 423) #(892 'INSTANCE' 424) #(892 'INSTANCES' 425) #(892 'INT2' 426) #(892 'INT4' 427) #(892 'INT8' 428) #(892 'INTENSIFIED' 429) #(892 'INTERFACE' 430) #(892 'INTERFACES' 431) #(892 'INTERNAL' 432) #(892 'INTERVALS' 433) #(892 'INTO' 434) #(892 'INVERSE' 435) #(892 'IS' 437) #(892 'ISO' 438) #(892 'JOB' 439) #(892 'JOIN' 440) #(892 'KEEP' 441) #(892 'KEEPING' 442) #(892 'KERNEL' 443) #(892 'KEY' 444) #(892 'KEYS' 445) #(892 'KEYWORDS' 446) #(892 'KIND' 447) #(892 'LANGUAGE' 448) #(892 'LAST' 449) #(892 'LATE' 450) #(892 'LAYOUT' 451) #(892 'LE' 452) #(892 'LEADING' 453) #(892 'LEAVE' 454) #(892 'LEFT' 455) #(892 'LEFTPLUS' 457) #(892 'LEFTSPACE' 458) #(892 'LEGACY' 459) #(892 'LENGTH' 460) #(892 'LET' 461) #(892 'LEVEL' 462) #(892 'LEVELS' 463) #(892 'LIKE' 464) #(892 'LINE' 465) #(892 'LINEFEED' 469) #(892 'LINES' 470) #(892 'LINK' 471) #(892 'LIST' 472) #(892 'LISTBOX' 474) #(892 'LOAD' 475) #(892 'LOCAL' 477) #(892 'LOCALE' 478) #(892 'LOCK' 479) #(892 'LOCKS' 480) #(892 'LOGFILE' 482) #(892 'LOGICAL' 483) #(892 'LONG' 484) #(892 'LOOP' 485) #(892 'LOW' 486) #(892 'LOWER' 487) #(892 'LPI' 488) #(892 'LT' 489) #(892 'LTRIM' 882) #(892 'MAIN' 491) #(892 'MAPPED' 492) #(892 'MAPPING' 493) #(892 'MARGIN' 494) #(892 'MARK' 495) #(892 'MASK' 496) #(892 'MATCH' 497) #(892 'MATCHCODE' 498) #(892 'MAX' 499) #(892 'MAXIMUM' 500) #(892 'MEDIUM' 501) #(892 'MEMBERS' 502) #(892 'MEMORY' 503) #(892 'MESH' 504) #(892 'MESSAGE' 505) #(892 'MESSAGES' 507) #(892 'MESSAGING' 508) #(892 'METHOD' 509) #(892 'METHODS' 510) #(892 'MIN' 511) #(892 'MM/DD/YY' 512) #(892 'MM/DD/YYYY' 513) #(892 'MMDDYY' 514) #(892 'MOD' 515) #(892 'MODE' 516) #(892 'MODIF' 517) #(892 'MODIFIER' 518) #(892 'MODIFY' 519) #(892 'MODULE' 520) #(892 'MOVE' 521) #(892 'MSSQLNT' 523) #(892 'MULTIPLY' 524) #(892 'NA' 526) #(892 'NAME' 527) #(892 'NAMETAB' 528) #(892 'NATIVE' 529) #(892 'NE' 530) #(892 'NESTED' 531) #(892 'NESTING' 532) #(892 'NEW' 533) #(892 'NEXT' 537) #(892 'NO' 538) #(892 'NODES' 550) #(892 'NOT' 553) #(892 'NP' 554) #(892 'NS' 555) #(892 'NULL' 556) #(892 'NUMBER' 557) #(892 'NUMBERING' 558) #(892 'NUMC' 559) #(892 'OBJECT' 561) #(892 'OBJECTS' 562) #(892 'OBJMGR' 563) #(892 'OBLIGATORY' 564) #(892 'OCCURENCE' 565) #(892 'OCCURENCES' 566) #(892 'OCCURRENCE' 567) #(892 'OCCURRENCES' 568) #(892 'OCCURS' 569) #(892 'OF' 570) #(892 'OFF' 571) #(892 'OFFSET' 572) #(892 'ON' 573) #(892 'ONE' 574) #(892 'ONLY' 575) #(892 'OPEN' 576) #(892 'OPTION' 577) #(892 'OPTIONAL' 578) #(892 'OPTIONS' 579) #(892 'OR' 580) #(892 'ORACLE' 581) #(892 'ORDER' 582) #(892 'OTHERS' 583) #(892 'OUT' 584) #(892 'OUTER' 585) #(892 'OUTPUT' 586) #(892 'OVERFLOW' 588) #(892 'OVERLAY' 589) #(892 'PACK' 590) #(892 'PACKAGE' 591) #(892 'PAD' 592) #(892 'PADDING' 593) #(892 'PAGE' 594) #(892 'PAGES' 595) #(892 'PARAMETER' 596) #(892 'PARAMETERS' 598) #(892 'PART' 599) #(892 'PARTIALLY' 600) #(892 'PCRE' 601) #(892 'PERCENTAGE' 602) #(892 'PERFORM' 603) #(892 'PERFORMING' 604) #(892 'PERMISSIONS' 605) #(892 'PLACES' 607) #(892 'POOL' 608) #(892 'POSITION' 609) #(892 'POS_HIGH' 610) #(892 'POS_LOW' 611) #(892 'PRAGMAS' 612) #(892 'PRECHECK' 613) #(892 'PRECOMPILED' 614) #(892 'PREFERRED' 615) #(892 'PRESERVING' 616) #(892 'PRIMARY' 617) #(892 'PRINT' 618) #(892 'PRIVATE' 620) #(892 'PRIVILEGED' 621) #(892 'PROCEDURE' 622) #(892 'PROGRAM' 623) #(892 'PROPERTY' 624) #(892 'PROTECTED' 625) #(892 'PROVIDE' 626) #(892 'PUBLIC' 627) #(892 'PUSH' 628) #(892 'PUSHBUTTON' 629) #(892 'PUT' 630) #(892 'QUEUEONLY' 632) #(892 'QUICKINFO' 633) #(892 'RADIOBUTTON' 634) #(892 'RAISE' 635) #(892 'RAISING' 636) #(892 'RANGE' 637) #(892 'RANGES' 638) #(892 'RAW' 639) #(892 'READ' 640) #(892 'RECEIVE' 642) #(892 'RECEIVED' 643) #(892 'RECEIVER' 644) #(892 'RECEIVING' 645) #(892 'REDEFINITION' 646) #(892 'REDUCE' 647) #(892 'REF' 648) #(892 'REFERENCE' 649) #(892 'REFRESH' 650) #(892 'REGEX' 651) #(892 'REJECT' 652) #(892 'RELATING' 653) #(892 'RENAMING' 654) #(892 'REPLACE' 655) #(892 'REPLACEMENT' 656) #(892 'REPLACING' 657) #(892 'REPORT' 658) #(892 'REPORTED' 659) #(892 'REQUEST' 660) #(892 'REQUESTED' 661) #(892 'REQUIRED' 662) #(892 'RESERVE' 663) #(892 'RESET' 664) #(892 'RESOLUTION' 665) #(892 'RESPECTING' 666) #(892 'RESPONSE' 667) #(892 'RESPONSES' 668) #(892 'RESULT' 669) #(892 'RESULTS' 670) #(892 'RESUMABLE' 671) #(892 'RESUME' 672) #(892 'RETRY' 673) #(892 'RETURN' 674) #(892 'RETURNCODE' 675) #(892 'RETURNING' 676) #(892 'RIGHT' 677) #(892 'RIGHTPLUS' 679) #(892 'RIGHTSPACE' 680) #(892 'RISK' 681) #(892 'ROLLBACK' 682) #(892 'ROUND' 683) #(892 'ROWS' 684) #(892 'RTRIM' 883) #(892 'RUN' 685) #(892 'SAP' 686) #(892 'SAVE' 688) #(892 'SAVING' 689) #(892 'SCALE_PRESERVING' 690) #(892 'SCALE_PRESERVING_SCIENTIFIC' 691) #(892 'SCAN' 692) #(892 'SCIENTIFIC' 693) #(892 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(892 'SCREEN' 695) #(892 'SCROLL' 696) #(892 'SCROLLING' 698) #(892 'SEARCH' 699) #(892 'SECONDARY' 700) #(892 'SECONDS' 701) #(892 'SECTION' 702) #(892 'SELECT' 703) #(892 'SELECTION' 705) #(892 'SELECTIONS' 710) #(892 'SEND' 711) #(892 'SEPARATE' 712) #(892 'SEPARATED' 713) #(892 'SESSION' 714) #(892 'SET' 715) #(892 'SHARED' 716) #(892 'SHIFT' 717) #(892 'SHORT' 718) #(892 'SHORTDUMP' 719) #(892 'SIGN' 721) #(892 'SIGN_AS_POSTFIX' 722) #(892 'SIMPLE' 723) #(892 'SIMULATION' 724) #(892 'SINGLE' 725) #(892 'SIZE' 726) #(892 'SKIP' 727) #(892 'SKIPPING' 728) #(892 'SMART' 729) #(892 'SOME' 730) #(892 'SORT' 731) #(892 'SORTABLE' 732) #(892 'SORTED' 733) #(892 'SOURCE' 734) #(892 'SPACE' 735) #(892 'SPECIFIED' 736) #(892 'SPLIT' 737) #(892 'SPOOL' 738) #(892 'SPOTS' 739) #(892 'SQL' 740) #(892 'SQLSCRIPT' 741) #(892 'STABLE' 742) #(892 'STAMP' 743) #(892 'STANDARD' 744) #(892 'STARTING' 746) #(892 'STATE' 747) #(892 'STATEMENT' 748) #(892 'STATEMENTS' 749) #(892 'STATIC' 750) #(892 'STATICS' 751) #(892 'STATUSINFO' 752) #(892 'STEP' 753) #(892 'STOP' 755) #(892 'STRUCTURE' 756) #(892 'STRUCTURES' 757) #(892 'STYLE' 758) #(892 'SUBKEY' 759) #(892 'SUBMATCHES' 760) #(892 'SUBMIT' 761) #(892 'SUBROUTINE' 762) #(892 'SUBSCREEN' 763) #(892 'SUBSTRING' 764) #(892 'SUBTRACT' 765) #(892 'SUFFIX' 767) #(892 'SUM' 768) #(892 'SUMMARY' 769) #(892 'SUPPLIED' 770) #(892 'SUPPLY' 771) #(892 'SUPPRESS' 772) #(892 'SWITCH' 773) #(892 'SYBASE' 774) #(892 'SYMBOL' 775) #(892 'T000' 779) #(892 'TAB' 780) #(892 'TABBED' 781) #(892 'TABLE' 782) #(892 'TABLES' 783) #(892 'TABLEVIEW' 784) #(892 'TABSTRIP' 785) #(892 'TARGET' 786) #(892 'TASK' 787) #(892 'TASKS' 788) #(892 'TEST' 789) #(892 'TESTING' 792) #(892 'TEXT' 793) #(892 'TEXTPOOL' 794) #(892 'THEN' 795) #(892 'THROW' 796) #(892 'TIME' 797) #(892 'TIMES' 798) #(892 'TIMESTAMP' 799) #(892 'TIMEZONE' 800) #(892 'TITLE' 801) #(892 'TITLEBAR' 802) #(892 'TO' 803) #(892 'TOKENIZATION' 804) #(892 'TOKENS' 805) #(892 'TRAILING' 810) #(892 'TRANSACTION' 811) #(892 'TRANSFER' 812) #(892 'TRANSFORMATION' 813) #(892 'TRANSLATE' 814) #(892 'TRANSPORTING' 815) #(892 'TRMAC' 816) #(892 'TRUNCATION' 817) #(892 'TRY' 818) #(892 'TYPE' 819) #(892 'TYPES' 822) #(892 'ULINE' 823) #(892 'UNASSIGN' 824) #(892 'UNDER' 825) #(892 'UNICODE' 826) #(892 'UNION' 827) #(892 'UNIQUE' 828) #(892 'UNIT' 829) #(892 'UNIX' 830) #(892 'UNPACK' 831) #(892 'UNTIL' 832) #(892 'UNWIND' 833) #(892 'UP' 834) #(892 'UPDATE' 835) #(892 'UPPER' 836) #(892 'USER' 837) #(892 'USING' 839) #(892 'UTCLONG' 840) #(892 'UUID' 884) #(892 'VALID' 842) #(892 'VALIDATE' 843) #(892 'VALUE' 844) #(892 'VALUES' 846) #(892 'VARY' 847) #(892 'VARYING' 848) #(892 'VERSION' 849) #(892 'VIA' 850) #(892 'VISIBLE' 851) #(892 'WAIT' 852) #(892 'WHEN' 853) #(892 'WHERE' 854) #(892 'WHILE' 855) #(892 'WIDTH' 856) #(892 'WINDOW' 857) #(892 'WINDOWS' 858) #(892 'WITH' 859) #(892 'WITHOUT' 862) #(892 'WORD' 863) #(892 'WORK' 864) #(892 'WORKSPACE' 865) #(892 'WRITE' 866) #(892 'WRITER' 867) #(892 'XML' 868) #(892 'XSD' 869) #(892 'XSDBOOL' 870) #(892 'YES' 871) #(892 'YYMMDD' 872) #(892 'ZERO' 874) #(892 'ZONE' 875) #(951 '%_FINAL' 2) #(951 '%_HINTS' 3) #(951 '%_PREDEFINED' 4) #(951 '**' 8) #(951 'ABS' 876) #(951 'ABSTRACT' 33) #(951 'ACCEPT' 34) #(951 'ACCEPTING' 35) #(951 'ACCESS' 36) #(951 'ACCORDING' 37) #(951 'ACTION' 38) #(951 'ACTIVATION' 39) #(951 'ACTUAL' 40) #(951 'ADABAS' 41) #(951 'ADD' 42) #(951 'ADJACENT' 44) #(951 'ALIAS' 45) #(951 'ALIASES' 46) #(951 'ALIGN' 47) #(951 'ALL' 48) #(951 'ALLOCATE' 49) #(951 'ALPHA' 50) #(951 'AMDP' 51) #(951 'ANALYSIS' 52) #(951 'ANALYZER' 53) #(951 'AND' 54) #(951 'ANY' 55) #(951 'APPEND' 56) #(951 'APPENDING' 57) #(951 'APPLICATION' 58) #(951 'ARCHIVE' 59) #(951 'AREA' 60) #(951 'ARITHMETIC' 61) #(951 'AS' 62) #(951 'AS400' 63) #(951 'ASCENDING' 64) #(951 'ASSERT' 65) #(951 'ASSIGN' 66) #(951 'ASSIGNED' 67) #(951 'ASSIGNING' 68) #(951 'ASSOCIATION' 69) #(951 'ASYNCHRONOUS' 70) #(951 'AT' 71) #(951 'ATTRIBUTES' 72) #(951 'AUGMENTING' 73) #(951 'AUTHORITY' 74) #(951 'AUTHORIZATION' 76) #(951 'AUTO' 77) #(951 'AVG' 78) #(951 'BACK' 79) #(951 'BACKGROUND' 80) #(951 'BACKWARD' 81) #(951 'BADI' 82) #(951 'BASE' 83) #(951 'BEFORE' 84) #(951 'BEGIN' 85) #(951 'BEHAVIOR' 86) #(951 'BETWEEN' 87) #(951 'BINARY' 88) #(951 'BIT' 89) #(951 'BLANK' 94) #(951 'BLANKS' 95) #(951 'BLOCK' 96) #(951 'BLOCKS' 97) #(951 'BOOLC' 98) #(951 'BOUND' 99) #(951 'BOUNDARIES' 100) #(951 'BOUNDS' 101) #(951 'BOXED' 102) #(951 'BREAK' 103) #(951 'BUFFER' 105) #(951 'BY' 106) #(951 'BYPASSING' 107) #(951 'BYTE' 108) #(951 'CA' 116) #(951 'CALL' 117) #(951 'CALLING' 118) #(951 'CASE' 119) #(951 'CAST' 120) #(951 'CASTING' 121) #(951 'CATCH' 122) #(951 'CDS' 123) #(951 'CEIL' 877) #(951 'CENTER' 124) #(951 'CENTERED' 125) #(951 'CHAIN' 126) #(951 'CHANGE' 129) #(951 'CHANGING' 130) #(951 'CHANNELS' 131) #(951 'CHAR' 132) #(951 'CHARACTER' 134) #(951 'CHECK' 135) #(951 'CHECKBOX' 136) #(951 'CID' 137) #(951 'CIRCULAR' 138) #(951 'CLASS' 139) #(951 'CLEANUP' 143) #(951 'CLEAR' 144) #(951 'CLIENT' 145) #(951 'CLIENTS' 146) #(951 'CLOCK' 147) #(951 'CLONE' 148) #(951 'CLOSE' 149) #(951 'CN' 150) #(951 'CO' 151) #(951 'COALESCE' 878) #(951 'CODE' 152) #(951 'COLLECT' 153) #(951 'COLOR' 154) #(951 'COLUMN' 155) #(951 'COLUMNS' 156) #(951 'COL_BACKGROUND' 157) #(951 'COL_GROUP' 158) #(951 'COL_HEADING' 159) #(951 'COL_KEY' 160) #(951 'COL_NEGATIVE' 161) #(951 'COL_NORMAL' 162) #(951 'COL_POSITIVE' 163) #(951 'COL_TOTAL' 164) #(951 'COMMENT' 165) #(951 'COMMENTS' 166) #(951 'COMMIT' 167) #(951 'COMMON' 168) #(951 'COMMUNICATION' 169) #(951 'COMPARING' 170) #(951 'COMPONENT' 171) #(951 'COMPONENTS' 172) #(951 'COMPRESSION' 173) #(951 'COMPUTE' 174) #(951 'CONCAT' 879) #(951 'CONCATENATE' 175) #(951 'CONCAT_WITH_SPACE' 880) #(951 'COND' 176) #(951 'CONDENSE' 177) #(951 'CONDITION' 178) #(951 'CONNECTION' 179) #(951 'CONSTANT' 180) #(951 'CONSTANTS' 181) #(951 'CONTEXT' 182) #(951 'CONTEXTS' 183) #(951 'CONTINUE' 184) #(951 'CONTROL' 185) #(951 'CONTROLS' 186) #(951 'CONV' 187) #(951 'CONVERSION' 188) #(951 'CONVERT' 189) #(951 'COPIES' 190) #(951 'COPY' 191) #(951 'CORRESPONDING' 192) #(951 'COUNT' 193) #(951 'COUNTRY' 194) #(951 'COVER' 195) #(951 'CP' 196) #(951 'CPI' 197) #(951 'CREATE' 198) #(951 'CRITICAL' 199) #(951 'CS' 200) #(951 'CURRENCY' 201) #(951 'CURRENT' 202) #(951 'CURSOR' 203) #(951 'DANGEROUS' 205) #(951 'DATA' 206) #(951 'DATABASE' 207) #(951 'DATAINFO' 208) #(951 'DATASET' 209) #(951 'DATE' 210) #(951 'DAYLIGHT' 211) #(951 'DB2' 212) #(951 'DB6' 213) #(951 'DDL' 216) #(951 'DDMMYY' 217) #(951 'DEALLOCATE' 218) #(951 'DEC' 219) #(951 'DECIMALS' 220) #(951 'DECLARATIONS' 221) #(951 'DEEP' 222) #(951 'DEFAULT' 223) #(951 'DEFERRED' 224) #(951 'DEFINE' 225) #(951 'DEFINITION' 226) #(951 'DELETE' 227) #(951 'DELETING' 228) #(951 'DEMAND' 229) #(951 'DEPARTMENT' 230) #(951 'DESCENDING' 231) #(951 'DESCRIBE' 232) #(951 'DESTINATION' 233) #(951 'DETAIL' 234) #(951 'DETERMINATION' 235) #(951 'DETERMINE' 236) #(951 'DIALOG' 237) #(951 'DID' 238) #(951 'DIRECTORY' 239) #(951 'DISCARDING' 240) #(951 'DISPLAY' 241) #(951 'DISTANCE' 243) #(951 'DISTINCT' 244) #(951 'DIV' 245) #(951 'DIVIDE' 246) #(951 'DO' 247) #(951 'DUMMY' 248) #(951 'DUPLICATE' 249) #(951 'DUPLICATES' 250) #(951 'DURATION' 251) #(951 'DURING' 252) #(951 'DYNPRO' 253) #(951 'EARLY' 254) #(951 'EDIT' 255) #(951 'ELSE' 257) #(951 'ELSEIF' 258) #(951 'EMPTY' 259) #(951 'ENABLED' 260) #(951 'ENABLING' 261) #(951 'ENCODING' 262) #(951 'END' 263) #(951 'ENDAT' 270) #(951 'ENDCASE' 271) #(951 'ENDCATCH' 272) #(951 'ENDCHAIN' 273) #(951 'ENDCLASS' 274) #(951 'ENDDO' 275) #(951 'ENDENHANCEMENT' 276) #(951 'ENDEXEC' 277) #(951 'ENDFORM' 278) #(951 'ENDFUNCTION' 279) #(951 'ENDIAN' 280) #(951 'ENDIF' 281) #(951 'ENDING' 282) #(951 'ENDINTERFACE' 283) #(951 'ENDLOOP' 284) #(951 'ENDMETHOD' 285) #(951 'ENDMODULE' 286) #(951 'ENDON' 287) #(951 'ENDPROVIDE' 288) #(951 'ENDSELECT' 289) #(951 'ENDTRY' 290) #(951 'ENDWHILE' 291) #(951 'ENDWITH' 292) #(951 'ENGINEERING' 293) #(951 'ENHANCEMENT' 294) #(951 'ENHANCEMENTS' 297) #(951 'ENTITIES' 298) #(951 'ENTITY' 299) #(951 'ENTRIES' 300) #(951 'ENTRY' 301) #(951 'ENUM' 302) #(951 'ENVIRONMENT' 303) #(951 'EQ' 304) #(951 'EQUIV' 305) #(951 'ERRORS' 306) #(951 'ESCAPE' 307) #(951 'ESCAPING' 308) #(951 'EVENT' 309) #(951 'EVENTS' 310) #(951 'EXACT' 311) #(951 'EXCEPT' 312) #(951 'EXCEPTION' 313) #(951 'EXCEPTIONS' 315) #(951 'EXCLUDE' 316) #(951 'EXCLUDING' 317) #(951 'EXEC' 318) #(951 'EXECUTE' 319) #(951 'EXISTS' 320) #(951 'EXIT' 321) #(951 'EXPANDING' 323) #(951 'EXPIRATION' 324) #(951 'EXPLICIT' 325) #(951 'EXPONENT' 326) #(951 'EXPORT' 327) #(951 'EXPORTING' 328) #(951 'EXTENDED' 329) #(951 'EXTENSION' 330) #(951 'EXTRACT' 331) #(951 'FAIL' 332) #(951 'FAILED' 333) #(951 'FEATURES' 334) #(951 'FETCH' 335) #(951 'FIELD' 336) #(951 'FIELDS' 340) #(951 'FILE' 341) #(951 'FILL' 342) #(951 'FILTER' 343) #(951 'FILTERS' 344) #(951 'FINAL' 345) #(951 'FIND' 346) #(951 'FIRST' 347) #(951 'FLOOR' 881) #(951 'FLTP' 350) #(951 'FLUSH' 351) #(951 'FONT' 352) #(951 'FOR' 353) #(951 'FORM' 354) #(951 'FORMAT' 355) #(951 'FORWARD' 356) #(951 'FOUND' 357) #(951 'FRAME' 358) #(951 'FRAMES' 359) #(951 'FREE' 360) #(951 'FRIENDS' 361) #(951 'FROM' 362) #(951 'FULL' 363) #(951 'FUNCTION' 364) #(951 'FURTHER' 366) #(951 'GE' 367) #(951 'GENERATE' 368) #(951 'GET' 369) #(951 'GIVING' 370) #(951 'GLOBAL' 371) #(951 'GRAPH' 372) #(951 'GROUP' 373) #(951 'GROUPS' 374) #(951 'GT' 375) #(951 'HANDLE' 376) #(951 'HANDLER' 377) #(951 'HARMLESS' 378) #(951 'HASHED' 379) #(951 'HAVING' 380) #(951 'HDB' 381) #(951 'HEADER' 382) #(951 'HEADERS' 383) #(951 'HEADING' 384) #(951 'HIDE' 387) #(951 'HIERARCHY' 388) #(951 'HIGH' 389) #(951 'HINT' 390) #(951 'HOLD' 391) #(951 'HOTSPOT' 392) #(951 'ICON' 393) #(951 'ID' 394) #(951 'IDENTIFICATION' 395) #(951 'IDENTIFIER' 396) #(951 'IDS' 397) #(951 'IF' 398) #(951 'IGNORE' 399) #(951 'IGNORING' 400) #(951 'IMMEDIATELY' 401) #(951 'IMPLEMENTATION' 402) #(951 'IMPLEMENTED' 403) #(951 'IMPLICIT' 404) #(951 'IMPORT' 405) #(951 'IMPORTING' 406) #(951 'IN' 407) #(951 'INACTIVE' 408) #(951 'INCL' 409) #(951 'INCLUDE' 410) #(951 'INCLUDES' 411) #(951 'INCREMENT' 412) #(951 'INDEX' 413) #(951 'INFORMIX' 415) #(951 'INFOTYPES' 416) #(951 'INHERITING' 417) #(951 'INIT' 418) #(951 'INITIAL' 419) #(951 'INITIALIZATION' 420) #(951 'INNER' 421) #(951 'INPUT' 422) #(951 'INSERT' 423) #(951 'INSTANCE' 424) #(951 'INSTANCES' 425) #(951 'INT2' 426) #(951 'INT4' 427) #(951 'INT8' 428) #(951 'INTENSIFIED' 429) #(951 'INTERFACE' 430) #(951 'INTERFACES' 431) #(951 'INTERNAL' 432) #(951 'INTERVALS' 433) #(951 'INTO' 434) #(951 'INVERSE' 435) #(951 'IS' 437) #(951 'ISO' 438) #(951 'JOB' 439) #(951 'JOIN' 440) #(951 'KEEP' 441) #(951 'KEEPING' 442) #(951 'KERNEL' 443) #(951 'KEY' 444) #(951 'KEYS' 445) #(951 'KEYWORDS' 446) #(951 'KIND' 447) #(951 'LANGUAGE' 448) #(951 'LAST' 449) #(951 'LATE' 450) #(951 'LAYOUT' 451) #(951 'LE' 452) #(951 'LEADING' 453) #(951 'LEAVE' 454) #(951 'LEFT' 455) #(951 'LEFTPLUS' 457) #(951 'LEFTSPACE' 458) #(951 'LEGACY' 459) #(951 'LENGTH' 460) #(951 'LET' 461) #(951 'LEVEL' 462) #(951 'LEVELS' 463) #(951 'LIKE' 464) #(951 'LINE' 465) #(951 'LINEFEED' 469) #(951 'LINES' 470) #(951 'LINK' 471) #(951 'LIST' 472) #(951 'LISTBOX' 474) #(951 'LOAD' 475) #(951 'LOCAL' 477) #(951 'LOCALE' 478) #(951 'LOCK' 479) #(951 'LOCKS' 480) #(951 'LOGFILE' 482) #(951 'LOGICAL' 483) #(951 'LONG' 484) #(951 'LOOP' 485) #(951 'LOW' 486) #(951 'LOWER' 487) #(951 'LPI' 488) #(951 'LT' 489) #(951 'LTRIM' 882) #(951 'MAIN' 491) #(951 'MAPPED' 492) #(951 'MAPPING' 493) #(951 'MARGIN' 494) #(951 'MARK' 495) #(951 'MASK' 496) #(951 'MATCH' 497) #(951 'MATCHCODE' 498) #(951 'MAX' 499) #(951 'MAXIMUM' 500) #(951 'MEDIUM' 501) #(951 'MEMBERS' 502) #(951 'MEMORY' 503) #(951 'MESH' 504) #(951 'MESSAGE' 505) #(951 'MESSAGES' 507) #(951 'MESSAGING' 508) #(951 'METHOD' 509) #(951 'METHODS' 510) #(951 'MIN' 511) #(951 'MMDDYY' 514) #(951 'MOD' 515) #(951 'MODE' 516) #(951 'MODIF' 517) #(951 'MODIFIER' 518) #(951 'MODIFY' 519) #(951 'MODULE' 520) #(951 'MOVE' 521) #(951 'MSSQLNT' 523) #(951 'MULTIPLY' 524) #(951 'NA' 526) #(951 'NAME' 527) #(951 'NAMETAB' 528) #(951 'NATIVE' 529) #(951 'NE' 530) #(951 'NESTED' 531) #(951 'NESTING' 532) #(951 'NEW' 533) #(951 'NEXT' 537) #(951 'NO' 538) #(951 'NODES' 550) #(951 'NOT' 553) #(951 'NP' 554) #(951 'NS' 555) #(951 'NULL' 556) #(951 'NUMBER' 557) #(951 'NUMBERING' 558) #(951 'NUMC' 559) #(951 'OBJECT' 561) #(951 'OBJECTS' 562) #(951 'OBJMGR' 563) #(951 'OBLIGATORY' 564) #(951 'OCCURENCE' 565) #(951 'OCCURENCES' 566) #(951 'OCCURRENCE' 567) #(951 'OCCURRENCES' 568) #(951 'OCCURS' 569) #(951 'OF' 570) #(951 'OFF' 571) #(951 'OFFSET' 572) #(951 'ON' 573) #(951 'ONE' 574) #(951 'ONLY' 575) #(951 'OPEN' 576) #(951 'OPTION' 577) #(951 'OPTIONAL' 578) #(951 'OPTIONS' 579) #(951 'OR' 580) #(951 'ORACLE' 581) #(951 'ORDER' 582) #(951 'OTHERS' 583) #(951 'OUT' 584) #(951 'OUTER' 585) #(951 'OUTPUT' 586) #(951 'OVERFLOW' 588) #(951 'OVERLAY' 589) #(951 'PACK' 590) #(951 'PACKAGE' 591) #(951 'PAD' 592) #(951 'PADDING' 593) #(951 'PAGE' 594) #(951 'PAGES' 595) #(951 'PARAMETER' 596) #(951 'PARAMETERS' 598) #(951 'PART' 599) #(951 'PARTIALLY' 600) #(951 'PCRE' 601) #(951 'PERCENTAGE' 602) #(951 'PERFORM' 603) #(951 'PERFORMING' 604) #(951 'PERMISSIONS' 605) #(951 'PLACES' 607) #(951 'POOL' 608) #(951 'POSITION' 609) #(951 'POS_HIGH' 610) #(951 'POS_LOW' 611) #(951 'PRAGMAS' 612) #(951 'PRECHECK' 613) #(951 'PRECOMPILED' 614) #(951 'PREFERRED' 615) #(951 'PRESERVING' 616) #(951 'PRIMARY' 617) #(951 'PRINT' 618) #(951 'PRIVATE' 620) #(951 'PRIVILEGED' 621) #(951 'PROCEDURE' 622) #(951 'PROGRAM' 623) #(951 'PROPERTY' 624) #(951 'PROTECTED' 625) #(951 'PROVIDE' 626) #(951 'PUBLIC' 627) #(951 'PUSH' 628) #(951 'PUSHBUTTON' 629) #(951 'PUT' 630) #(951 'QUEUEONLY' 632) #(951 'QUICKINFO' 633) #(951 'RADIOBUTTON' 634) #(951 'RAISE' 635) #(951 'RAISING' 636) #(951 'RANGE' 637) #(951 'RANGES' 638) #(951 'RAW' 639) #(951 'READ' 640) #(951 'RECEIVE' 642) #(951 'RECEIVED' 643) #(951 'RECEIVER' 644) #(951 'RECEIVING' 645) #(951 'REDEFINITION' 646) #(951 'REDUCE' 647) #(951 'REF' 648) #(951 'REFERENCE' 649) #(951 'REFRESH' 650) #(951 'REGEX' 651) #(951 'REJECT' 652) #(951 'RELATING' 653) #(951 'RENAMING' 654) #(951 'REPLACE' 655) #(951 'REPLACEMENT' 656) #(951 'REPLACING' 657) #(951 'REPORT' 658) #(951 'REPORTED' 659) #(951 'REQUEST' 660) #(951 'REQUESTED' 661) #(951 'REQUIRED' 662) #(951 'RESERVE' 663) #(951 'RESET' 664) #(951 'RESOLUTION' 665) #(951 'RESPECTING' 666) #(951 'RESPONSE' 667) #(951 'RESPONSES' 668) #(951 'RESULT' 669) #(951 'RESULTS' 670) #(951 'RESUMABLE' 671) #(951 'RESUME' 672) #(951 'RETRY' 673) #(951 'RETURN' 674) #(951 'RETURNCODE' 675) #(951 'RETURNING' 676) #(951 'RIGHT' 677) #(951 'RIGHTPLUS' 679) #(951 'RIGHTSPACE' 680) #(951 'RISK' 681) #(951 'ROLLBACK' 682) #(951 'ROUND' 683) #(951 'ROWS' 684) #(951 'RTRIM' 883) #(951 'RUN' 685) #(951 'SAP' 686) #(951 'SAVE' 688) #(951 'SAVING' 689) #(951 'SCALE_PRESERVING' 690) #(951 'SCALE_PRESERVING_SCIENTIFIC' 691) #(951 'SCAN' 692) #(951 'SCIENTIFIC' 693) #(951 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(951 'SCREEN' 695) #(951 'SCROLL' 696) #(951 'SCROLLING' 698) #(951 'SEARCH' 699) #(951 'SECONDARY' 700) #(951 'SECONDS' 701) #(951 'SECTION' 702) #(951 'SELECT' 703) #(951 'SELECTION' 705) #(951 'SELECTIONS' 710) #(951 'SEND' 711) #(951 'SEPARATE' 712) #(951 'SEPARATED' 713) #(951 'SESSION' 714) #(951 'SET' 715) #(951 'SHARED' 716) #(951 'SHIFT' 717) #(951 'SHORT' 718) #(951 'SHORTDUMP' 719) #(951 'SIGN' 721) #(951 'SIGN_AS_POSTFIX' 722) #(951 'SIMPLE' 723) #(951 'SIMULATION' 724) #(951 'SINGLE' 725) #(951 'SIZE' 726) #(951 'SKIP' 727) #(951 'SKIPPING' 728) #(951 'SMART' 729) #(951 'SOME' 730) #(951 'SORT' 731) #(951 'SORTABLE' 732) #(951 'SORTED' 733) #(951 'SOURCE' 734) #(951 'SPACE' 735) #(951 'SPECIFIED' 736) #(951 'SPLIT' 737) #(951 'SPOOL' 738) #(951 'SPOTS' 739) #(951 'SQL' 740) #(951 'SQLSCRIPT' 741) #(951 'STABLE' 742) #(951 'STAMP' 743) #(951 'STANDARD' 744) #(951 'STARTING' 746) #(951 'STATE' 747) #(951 'STATEMENT' 748) #(951 'STATEMENTS' 749) #(951 'STATIC' 750) #(951 'STATICS' 751) #(951 'STATUSINFO' 752) #(951 'STEP' 753) #(951 'STOP' 755) #(951 'STRUCTURE' 756) #(951 'STRUCTURES' 757) #(951 'STYLE' 758) #(951 'SUBKEY' 759) #(951 'SUBMATCHES' 760) #(951 'SUBMIT' 761) #(951 'SUBROUTINE' 762) #(951 'SUBSCREEN' 763) #(951 'SUBSTRING' 764) #(951 'SUBTRACT' 765) #(951 'SUFFIX' 767) #(951 'SUM' 768) #(951 'SUMMARY' 769) #(951 'SUPPLIED' 770) #(951 'SUPPLY' 771) #(951 'SUPPRESS' 772) #(951 'SWITCH' 773) #(951 'SYBASE' 774) #(951 'SYMBOL' 775) #(951 'T000' 779) #(951 'TAB' 780) #(951 'TABBED' 781) #(951 'TABLE' 782) #(951 'TABLES' 783) #(951 'TABLEVIEW' 784) #(951 'TABSTRIP' 785) #(951 'TARGET' 786) #(951 'TASK' 787) #(951 'TASKS' 788) #(951 'TEST' 789) #(951 'TESTING' 792) #(951 'TEXT' 793) #(951 'TEXTPOOL' 794) #(951 'THEN' 795) #(951 'THROW' 796) #(951 'TIME' 797) #(951 'TIMES' 798) #(951 'TIMESTAMP' 799) #(951 'TIMEZONE' 800) #(951 'TITLE' 801) #(951 'TITLEBAR' 802) #(951 'TO' 803) #(951 'TOKENIZATION' 804) #(951 'TOKENS' 805) #(951 'TRAILING' 810) #(951 'TRANSACTION' 811) #(951 'TRANSFER' 812) #(951 'TRANSFORMATION' 813) #(951 'TRANSLATE' 814) #(951 'TRANSPORTING' 815) #(951 'TRMAC' 816) #(951 'TRUNCATION' 817) #(951 'TRY' 818) #(951 'TYPE' 819) #(951 'TYPES' 822) #(951 'ULINE' 823) #(951 'UNASSIGN' 824) #(951 'UNDER' 825) #(951 'UNICODE' 826) #(951 'UNION' 827) #(951 'UNIQUE' 828) #(951 'UNIT' 829) #(951 'UNIX' 830) #(951 'UNPACK' 831) #(951 'UNTIL' 832) #(951 'UNWIND' 833) #(951 'UP' 834) #(951 'UPDATE' 835) #(951 'UPPER' 836) #(951 'USER' 837) #(951 'USING' 839) #(951 'UTCLONG' 840) #(951 'UUID' 884) #(951 'VALID' 842) #(951 'VALIDATE' 843) #(951 'VALUE' 844) #(951 'VALUES' 846) #(951 'VARY' 847) #(951 'VARYING' 848) #(951 'VERSION' 849) #(951 'VIA' 850) #(951 'VISIBLE' 851) #(951 'WAIT' 852) #(951 'WHEN' 853) #(951 'WHERE' 854) #(951 'WHILE' 855) #(951 'WIDTH' 856) #(951 'WINDOW' 857) #(951 'WINDOWS' 858) #(951 'WITH' 859) #(951 'WITHOUT' 862) #(951 'WORD' 863) #(951 'WORK' 864) #(951 'WORKSPACE' 865) #(951 'WRITE' 866) #(951 'WRITER' 867) #(951 'XML' 868) #(951 'XSD' 869) #(951 'XSDBOOL' 870) #(951 'YES' 871) #(951 'YYMMDD' 872) #(951 'ZERO' 874) #(951 'ZONE' 875) #(893 '%_FINAL' 2) #(893 '%_HINTS' 3) #(893 '%_PREDEFINED' 4) #(893 '**' 8) #(893 'ABS' 876) #(893 'ABSTRACT' 33) #(893 'ACCEPT' 34) #(893 'ACCEPTING' 35) #(893 'ACCESS' 36) #(893 'ACCORDING' 37) #(893 'ACTION' 38) #(893 'ACTIVATION' 39) #(893 'ACTUAL' 40) #(893 'ADABAS' 41) #(893 'ADD' 42) #(893 'ADJACENT' 44) #(893 'ALIAS' 45) #(893 'ALIASES' 46) #(893 'ALIGN' 47) #(893 'ALL' 48) #(893 'ALLOCATE' 49) #(893 'ALPHA' 50) #(893 'AMDP' 51) #(893 'ANALYSIS' 52) #(893 'ANALYZER' 53) #(893 'AND' 54) #(893 'ANY' 55) #(893 'APPEND' 56) #(893 'APPENDING' 57) #(893 'APPLICATION' 58) #(893 'ARCHIVE' 59) #(893 'AREA' 60) #(893 'ARITHMETIC' 61) #(893 'AS' 62) #(893 'AS400' 63) #(893 'ASCENDING' 64) #(893 'ASSERT' 65) #(893 'ASSIGN' 66) #(893 'ASSIGNED' 67) #(893 'ASSIGNING' 68) #(893 'ASSOCIATION' 69) #(893 'ASYNCHRONOUS' 70) #(893 'AT' 71) #(893 'ATTRIBUTES' 72) #(893 'AUGMENTING' 73) #(893 'AUTHORITY' 74) #(893 'AUTHORIZATION' 76) #(893 'AUTO' 77) #(893 'AVG' 78) #(893 'BACK' 79) #(893 'BACKGROUND' 80) #(893 'BACKWARD' 81) #(893 'BADI' 82) #(893 'BASE' 83) #(893 'BEFORE' 84) #(893 'BEGIN' 85) #(893 'BEHAVIOR' 86) #(893 'BETWEEN' 87) #(893 'BINARY' 88) #(893 'BIT' 89) #(893 'BLANK' 94) #(893 'BLANKS' 95) #(893 'BLOCK' 96) #(893 'BLOCKS' 97) #(893 'BOOLC' 98) #(893 'BOUND' 99) #(893 'BOUNDARIES' 100) #(893 'BOUNDS' 101) #(893 'BOXED' 102) #(893 'BREAK' 103) #(893 'BUFFER' 105) #(893 'BY' 106) #(893 'BYPASSING' 107) #(893 'BYTE' 108) #(893 'CA' 116) #(893 'CALL' 117) #(893 'CALLING' 118) #(893 'CASE' 119) #(893 'CAST' 120) #(893 'CASTING' 121) #(893 'CATCH' 122) #(893 'CDS' 123) #(893 'CEIL' 877) #(893 'CENTER' 124) #(893 'CENTERED' 125) #(893 'CHAIN' 126) #(893 'CHANGE' 129) #(893 'CHANGING' 130) #(893 'CHANNELS' 131) #(893 'CHAR' 132) #(893 'CHARACTER' 134) #(893 'CHECK' 135) #(893 'CHECKBOX' 136) #(893 'CID' 137) #(893 'CIRCULAR' 138) #(893 'CLASS' 139) #(893 'CLEANUP' 143) #(893 'CLEAR' 144) #(893 'CLIENT' 145) #(893 'CLIENTS' 146) #(893 'CLOCK' 147) #(893 'CLONE' 148) #(893 'CLOSE' 149) #(893 'CN' 150) #(893 'CO' 151) #(893 'COALESCE' 878) #(893 'CODE' 152) #(893 'COLLECT' 153) #(893 'COLOR' 154) #(893 'COLUMN' 155) #(893 'COLUMNS' 156) #(893 'COL_BACKGROUND' 157) #(893 'COL_GROUP' 158) #(893 'COL_HEADING' 159) #(893 'COL_KEY' 160) #(893 'COL_NEGATIVE' 161) #(893 'COL_NORMAL' 162) #(893 'COL_POSITIVE' 163) #(893 'COL_TOTAL' 164) #(893 'COMMENT' 165) #(893 'COMMENTS' 166) #(893 'COMMIT' 167) #(893 'COMMON' 168) #(893 'COMMUNICATION' 169) #(893 'COMPARING' 170) #(893 'COMPONENT' 171) #(893 'COMPONENTS' 172) #(893 'COMPRESSION' 173) #(893 'COMPUTE' 174) #(893 'CONCAT' 879) #(893 'CONCATENATE' 175) #(893 'CONCAT_WITH_SPACE' 880) #(893 'COND' 176) #(893 'CONDENSE' 177) #(893 'CONDITION' 178) #(893 'CONNECTION' 179) #(893 'CONSTANT' 180) #(893 'CONSTANTS' 181) #(893 'CONTEXT' 182) #(893 'CONTEXTS' 183) #(893 'CONTINUE' 184) #(893 'CONTROL' 185) #(893 'CONTROLS' 186) #(893 'CONV' 187) #(893 'CONVERSION' 188) #(893 'CONVERT' 189) #(893 'COPIES' 190) #(893 'COPY' 191) #(893 'CORRESPONDING' 192) #(893 'COUNT' 193) #(893 'COUNTRY' 194) #(893 'COVER' 195) #(893 'CP' 196) #(893 'CPI' 197) #(893 'CREATE' 198) #(893 'CRITICAL' 199) #(893 'CS' 200) #(893 'CURRENCY' 201) #(893 'CURRENT' 202) #(893 'CURSOR' 203) #(893 'DANGEROUS' 205) #(893 'DATA' 206) #(893 'DATABASE' 207) #(893 'DATAINFO' 208) #(893 'DATASET' 209) #(893 'DATE' 210) #(893 'DAYLIGHT' 211) #(893 'DB2' 212) #(893 'DB6' 213) #(893 'DD/MM/YY' 214) #(893 'DD/MM/YYYY' 215) #(893 'DDL' 216) #(893 'DDMMYY' 217) #(893 'DEALLOCATE' 218) #(893 'DEC' 219) #(893 'DECIMALS' 220) #(893 'DECLARATIONS' 221) #(893 'DEEP' 222) #(893 'DEFAULT' 223) #(893 'DEFERRED' 224) #(893 'DEFINE' 225) #(893 'DEFINITION' 226) #(893 'DELETE' 227) #(893 'DELETING' 228) #(893 'DEMAND' 229) #(893 'DEPARTMENT' 230) #(893 'DESCENDING' 231) #(893 'DESCRIBE' 232) #(893 'DESTINATION' 233) #(893 'DETAIL' 234) #(893 'DETERMINATION' 235) #(893 'DETERMINE' 236) #(893 'DIALOG' 237) #(893 'DID' 238) #(893 'DIRECTORY' 239) #(893 'DISCARDING' 240) #(893 'DISPLAY' 241) #(893 'DISTANCE' 243) #(893 'DISTINCT' 244) #(893 'DIV' 245) #(893 'DIVIDE' 246) #(893 'DO' 247) #(893 'DUMMY' 248) #(893 'DUPLICATE' 249) #(893 'DUPLICATES' 250) #(893 'DURATION' 251) #(893 'DURING' 252) #(893 'DYNPRO' 253) #(893 'EARLY' 254) #(893 'EDIT' 255) #(893 'ELSE' 257) #(893 'ELSEIF' 258) #(893 'EMPTY' 259) #(893 'ENABLED' 260) #(893 'ENABLING' 261) #(893 'ENCODING' 262) #(893 'END' 263) #(893 'ENDAT' 270) #(893 'ENDCASE' 271) #(893 'ENDCATCH' 272) #(893 'ENDCHAIN' 273) #(893 'ENDCLASS' 274) #(893 'ENDDO' 275) #(893 'ENDENHANCEMENT' 276) #(893 'ENDEXEC' 277) #(893 'ENDFORM' 278) #(893 'ENDFUNCTION' 279) #(893 'ENDIAN' 280) #(893 'ENDIF' 281) #(893 'ENDING' 282) #(893 'ENDINTERFACE' 283) #(893 'ENDLOOP' 284) #(893 'ENDMETHOD' 285) #(893 'ENDMODULE' 286) #(893 'ENDON' 287) #(893 'ENDPROVIDE' 288) #(893 'ENDSELECT' 289) #(893 'ENDTRY' 290) #(893 'ENDWHILE' 291) #(893 'ENDWITH' 292) #(893 'ENGINEERING' 293) #(893 'ENHANCEMENT' 294) #(893 'ENHANCEMENTS' 297) #(893 'ENTITIES' 298) #(893 'ENTITY' 299) #(893 'ENTRIES' 300) #(893 'ENTRY' 301) #(893 'ENUM' 302) #(893 'ENVIRONMENT' 303) #(893 'EQ' 304) #(893 'EQUIV' 305) #(893 'ERRORS' 306) #(893 'ESCAPE' 307) #(893 'ESCAPING' 308) #(893 'EVENT' 309) #(893 'EVENTS' 310) #(893 'EXACT' 311) #(893 'EXCEPT' 312) #(893 'EXCEPTION' 313) #(893 'EXCEPTIONS' 315) #(893 'EXCLUDE' 316) #(893 'EXCLUDING' 317) #(893 'EXEC' 318) #(893 'EXECUTE' 319) #(893 'EXISTS' 320) #(893 'EXIT' 321) #(893 'EXPANDING' 323) #(893 'EXPIRATION' 324) #(893 'EXPLICIT' 325) #(893 'EXPONENT' 326) #(893 'EXPORT' 327) #(893 'EXPORTING' 328) #(893 'EXTENDED' 329) #(893 'EXTENSION' 330) #(893 'EXTRACT' 331) #(893 'FAIL' 332) #(893 'FAILED' 333) #(893 'FEATURES' 334) #(893 'FETCH' 335) #(893 'FIELD' 336) #(893 'FIELDS' 340) #(893 'FILE' 341) #(893 'FILL' 342) #(893 'FILTER' 343) #(893 'FILTERS' 344) #(893 'FINAL' 345) #(893 'FIND' 346) #(893 'FIRST' 347) #(893 'FLOOR' 881) #(893 'FLTP' 350) #(893 'FLUSH' 351) #(893 'FONT' 352) #(893 'FOR' 353) #(893 'FORM' 354) #(893 'FORMAT' 355) #(893 'FORWARD' 356) #(893 'FOUND' 357) #(893 'FRAME' 358) #(893 'FRAMES' 359) #(893 'FREE' 360) #(893 'FRIENDS' 361) #(893 'FROM' 362) #(893 'FULL' 363) #(893 'FUNCTION' 364) #(893 'FURTHER' 366) #(893 'GE' 367) #(893 'GENERATE' 368) #(893 'GET' 369) #(893 'GIVING' 370) #(893 'GLOBAL' 371) #(893 'GRAPH' 372) #(893 'GROUP' 373) #(893 'GROUPS' 374) #(893 'GT' 375) #(893 'HANDLE' 376) #(893 'HANDLER' 377) #(893 'HARMLESS' 378) #(893 'HASHED' 379) #(893 'HAVING' 380) #(893 'HDB' 381) #(893 'HEADER' 382) #(893 'HEADERS' 383) #(893 'HEADING' 384) #(893 'HIDE' 387) #(893 'HIERARCHY' 388) #(893 'HIGH' 389) #(893 'HINT' 390) #(893 'HOLD' 391) #(893 'HOTSPOT' 392) #(893 'ICON' 393) #(893 'ID' 394) #(893 'IDENTIFICATION' 395) #(893 'IDENTIFIER' 396) #(893 'IDS' 397) #(893 'IF' 398) #(893 'IGNORE' 399) #(893 'IGNORING' 400) #(893 'IMMEDIATELY' 401) #(893 'IMPLEMENTATION' 402) #(893 'IMPLEMENTED' 403) #(893 'IMPLICIT' 404) #(893 'IMPORT' 405) #(893 'IMPORTING' 406) #(893 'IN' 407) #(893 'INACTIVE' 408) #(893 'INCL' 409) #(893 'INCLUDE' 410) #(893 'INCLUDES' 411) #(893 'INCREMENT' 412) #(893 'INDEX' 413) #(893 'INFORMIX' 415) #(893 'INFOTYPES' 416) #(893 'INHERITING' 417) #(893 'INIT' 418) #(893 'INITIAL' 419) #(893 'INITIALIZATION' 420) #(893 'INNER' 421) #(893 'INPUT' 422) #(893 'INSERT' 423) #(893 'INSTANCE' 424) #(893 'INSTANCES' 425) #(893 'INT2' 426) #(893 'INT4' 427) #(893 'INT8' 428) #(893 'INTENSIFIED' 429) #(893 'INTERFACE' 430) #(893 'INTERFACES' 431) #(893 'INTERNAL' 432) #(893 'INTERVALS' 433) #(893 'INTO' 434) #(893 'INVERSE' 435) #(893 'IS' 437) #(893 'ISO' 438) #(893 'JOB' 439) #(893 'JOIN' 440) #(893 'KEEP' 441) #(893 'KEEPING' 442) #(893 'KERNEL' 443) #(893 'KEY' 444) #(893 'KEYS' 445) #(893 'KEYWORDS' 446) #(893 'KIND' 447) #(893 'LANGUAGE' 448) #(893 'LAST' 449) #(893 'LATE' 450) #(893 'LAYOUT' 451) #(893 'LE' 452) #(893 'LEADING' 453) #(893 'LEAVE' 454) #(893 'LEFT' 455) #(893 'LEFTPLUS' 457) #(893 'LEFTSPACE' 458) #(893 'LEGACY' 459) #(893 'LENGTH' 460) #(893 'LET' 461) #(893 'LEVEL' 462) #(893 'LEVELS' 463) #(893 'LIKE' 464) #(893 'LINE' 465) #(893 'LINEFEED' 469) #(893 'LINES' 470) #(893 'LINK' 471) #(893 'LIST' 472) #(893 'LISTBOX' 474) #(893 'LOAD' 475) #(893 'LOCAL' 477) #(893 'LOCALE' 478) #(893 'LOCK' 479) #(893 'LOCKS' 480) #(893 'LOGFILE' 482) #(893 'LOGICAL' 483) #(893 'LONG' 484) #(893 'LOOP' 485) #(893 'LOW' 486) #(893 'LOWER' 487) #(893 'LPI' 488) #(893 'LT' 489) #(893 'LTRIM' 882) #(893 'MAIN' 491) #(893 'MAPPED' 492) #(893 'MAPPING' 493) #(893 'MARGIN' 494) #(893 'MARK' 495) #(893 'MASK' 496) #(893 'MATCH' 497) #(893 'MATCHCODE' 498) #(893 'MAX' 499) #(893 'MAXIMUM' 500) #(893 'MEDIUM' 501) #(893 'MEMBERS' 502) #(893 'MEMORY' 503) #(893 'MESH' 504) #(893 'MESSAGE' 505) #(893 'MESSAGES' 507) #(893 'MESSAGING' 508) #(893 'METHOD' 509) #(893 'METHODS' 510) #(893 'MIN' 511) #(893 'MM/DD/YY' 512) #(893 'MM/DD/YYYY' 513) #(893 'MMDDYY' 514) #(893 'MOD' 515) #(893 'MODE' 516) #(893 'MODIF' 517) #(893 'MODIFIER' 518) #(893 'MODIFY' 519) #(893 'MODULE' 520) #(893 'MOVE' 521) #(893 'MSSQLNT' 523) #(893 'MULTIPLY' 524) #(893 'NA' 526) #(893 'NAME' 527) #(893 'NAMETAB' 528) #(893 'NATIVE' 529) #(893 'NE' 530) #(893 'NESTED' 531) #(893 'NESTING' 532) #(893 'NEW' 533) #(893 'NEXT' 537) #(893 'NO' 538) #(893 'NODES' 550) #(893 'NOT' 553) #(893 'NP' 554) #(893 'NS' 555) #(893 'NULL' 556) #(893 'NUMBER' 557) #(893 'NUMBERING' 558) #(893 'NUMC' 559) #(893 'OBJECT' 561) #(893 'OBJECTS' 562) #(893 'OBJMGR' 563) #(893 'OBLIGATORY' 564) #(893 'OCCURENCE' 565) #(893 'OCCURENCES' 566) #(893 'OCCURRENCE' 567) #(893 'OCCURRENCES' 568) #(893 'OCCURS' 569) #(893 'OF' 570) #(893 'OFF' 571) #(893 'OFFSET' 572) #(893 'ON' 573) #(893 'ONE' 574) #(893 'ONLY' 575) #(893 'OPEN' 576) #(893 'OPTION' 577) #(893 'OPTIONAL' 578) #(893 'OPTIONS' 579) #(893 'OR' 580) #(893 'ORACLE' 581) #(893 'ORDER' 582) #(893 'OTHERS' 583) #(893 'OUT' 584) #(893 'OUTER' 585) #(893 'OUTPUT' 586) #(893 'OVERFLOW' 588) #(893 'OVERLAY' 589) #(893 'PACK' 590) #(893 'PACKAGE' 591) #(893 'PAD' 592) #(893 'PADDING' 593) #(893 'PAGE' 594) #(893 'PAGES' 595) #(893 'PARAMETER' 596) #(893 'PARAMETERS' 598) #(893 'PART' 599) #(893 'PARTIALLY' 600) #(893 'PCRE' 601) #(893 'PERCENTAGE' 602) #(893 'PERFORM' 603) #(893 'PERFORMING' 604) #(893 'PERMISSIONS' 605) #(893 'PLACES' 607) #(893 'POOL' 608) #(893 'POSITION' 609) #(893 'POS_HIGH' 610) #(893 'POS_LOW' 611) #(893 'PRAGMAS' 612) #(893 'PRECHECK' 613) #(893 'PRECOMPILED' 614) #(893 'PREFERRED' 615) #(893 'PRESERVING' 616) #(893 'PRIMARY' 617) #(893 'PRINT' 618) #(893 'PRIVATE' 620) #(893 'PRIVILEGED' 621) #(893 'PROCEDURE' 622) #(893 'PROGRAM' 623) #(893 'PROPERTY' 624) #(893 'PROTECTED' 625) #(893 'PROVIDE' 626) #(893 'PUBLIC' 627) #(893 'PUSH' 628) #(893 'PUSHBUTTON' 629) #(893 'PUT' 630) #(893 'QUEUEONLY' 632) #(893 'QUICKINFO' 633) #(893 'RADIOBUTTON' 634) #(893 'RAISE' 635) #(893 'RAISING' 636) #(893 'RANGE' 637) #(893 'RANGES' 638) #(893 'RAW' 639) #(893 'READ' 640) #(893 'RECEIVE' 642) #(893 'RECEIVED' 643) #(893 'RECEIVER' 644) #(893 'RECEIVING' 645) #(893 'REDEFINITION' 646) #(893 'REDUCE' 647) #(893 'REF' 648) #(893 'REFERENCE' 649) #(893 'REFRESH' 650) #(893 'REGEX' 651) #(893 'REJECT' 652) #(893 'RELATING' 653) #(893 'RENAMING' 654) #(893 'REPLACE' 655) #(893 'REPLACEMENT' 656) #(893 'REPLACING' 657) #(893 'REPORT' 658) #(893 'REPORTED' 659) #(893 'REQUEST' 660) #(893 'REQUESTED' 661) #(893 'REQUIRED' 662) #(893 'RESERVE' 663) #(893 'RESET' 664) #(893 'RESOLUTION' 665) #(893 'RESPECTING' 666) #(893 'RESPONSE' 667) #(893 'RESPONSES' 668) #(893 'RESULT' 669) #(893 'RESULTS' 670) #(893 'RESUMABLE' 671) #(893 'RESUME' 672) #(893 'RETRY' 673) #(893 'RETURN' 674) #(893 'RETURNCODE' 675) #(893 'RETURNING' 676) #(893 'RIGHT' 677) #(893 'RIGHTPLUS' 679) #(893 'RIGHTSPACE' 680) #(893 'RISK' 681) #(893 'ROLLBACK' 682) #(893 'ROUND' 683) #(893 'ROWS' 684) #(893 'RTRIM' 883) #(893 'RUN' 685) #(893 'SAP' 686) #(893 'SAVE' 688) #(893 'SAVING' 689) #(893 'SCALE_PRESERVING' 690) #(893 'SCALE_PRESERVING_SCIENTIFIC' 691) #(893 'SCAN' 692) #(893 'SCIENTIFIC' 693) #(893 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(893 'SCREEN' 695) #(893 'SCROLL' 696) #(893 'SCROLLING' 698) #(893 'SEARCH' 699) #(893 'SECONDARY' 700) #(893 'SECONDS' 701) #(893 'SECTION' 702) #(893 'SELECT' 703) #(893 'SELECTION' 705) #(893 'SELECTIONS' 710) #(893 'SEND' 711) #(893 'SEPARATE' 712) #(893 'SEPARATED' 713) #(893 'SESSION' 714) #(893 'SET' 715) #(893 'SHARED' 716) #(893 'SHIFT' 717) #(893 'SHORT' 718) #(893 'SHORTDUMP' 719) #(893 'SIGN' 721) #(893 'SIGN_AS_POSTFIX' 722) #(893 'SIMPLE' 723) #(893 'SIMULATION' 724) #(893 'SINGLE' 725) #(893 'SIZE' 726) #(893 'SKIP' 727) #(893 'SKIPPING' 728) #(893 'SMART' 729) #(893 'SOME' 730) #(893 'SORT' 731) #(893 'SORTABLE' 732) #(893 'SORTED' 733) #(893 'SOURCE' 734) #(893 'SPACE' 735) #(893 'SPECIFIED' 736) #(893 'SPLIT' 737) #(893 'SPOOL' 738) #(893 'SPOTS' 739) #(893 'SQL' 740) #(893 'SQLSCRIPT' 741) #(893 'STABLE' 742) #(893 'STAMP' 743) #(893 'STANDARD' 744) #(893 'STARTING' 746) #(893 'STATE' 747) #(893 'STATEMENT' 748) #(893 'STATEMENTS' 749) #(893 'STATIC' 750) #(893 'STATICS' 751) #(893 'STATUSINFO' 752) #(893 'STEP' 753) #(893 'STOP' 755) #(893 'STRUCTURE' 756) #(893 'STRUCTURES' 757) #(893 'STYLE' 758) #(893 'SUBKEY' 759) #(893 'SUBMATCHES' 760) #(893 'SUBMIT' 761) #(893 'SUBROUTINE' 762) #(893 'SUBSCREEN' 763) #(893 'SUBSTRING' 764) #(893 'SUBTRACT' 765) #(893 'SUFFIX' 767) #(893 'SUM' 768) #(893 'SUMMARY' 769) #(893 'SUPPLIED' 770) #(893 'SUPPLY' 771) #(893 'SUPPRESS' 772) #(893 'SWITCH' 773) #(893 'SYBASE' 774) #(893 'SYMBOL' 775) #(893 'T000' 779) #(893 'TAB' 780) #(893 'TABBED' 781) #(893 'TABLE' 782) #(893 'TABLES' 783) #(893 'TABLEVIEW' 784) #(893 'TABSTRIP' 785) #(893 'TARGET' 786) #(893 'TASK' 787) #(893 'TASKS' 788) #(893 'TEST' 789) #(893 'TESTING' 792) #(893 'TEXT' 793) #(893 'TEXTPOOL' 794) #(893 'THEN' 795) #(893 'THROW' 796) #(893 'TIME' 797) #(893 'TIMES' 798) #(893 'TIMESTAMP' 799) #(893 'TIMEZONE' 800) #(893 'TITLE' 801) #(893 'TITLEBAR' 802) #(893 'TO' 803) #(893 'TOKENIZATION' 804) #(893 'TOKENS' 805) #(893 'TRAILING' 810) #(893 'TRANSACTION' 811) #(893 'TRANSFER' 812) #(893 'TRANSFORMATION' 813) #(893 'TRANSLATE' 814) #(893 'TRANSPORTING' 815) #(893 'TRMAC' 816) #(893 'TRUNCATION' 817) #(893 'TRY' 818) #(893 'TYPE' 819) #(893 'TYPES' 822) #(893 'ULINE' 823) #(893 'UNASSIGN' 824) #(893 'UNDER' 825) #(893 'UNICODE' 826) #(893 'UNION' 827) #(893 'UNIQUE' 828) #(893 'UNIT' 829) #(893 'UNIX' 830) #(893 'UNPACK' 831) #(893 'UNTIL' 832) #(893 'UNWIND' 833) #(893 'UP' 834) #(893 'UPDATE' 835) #(893 'UPPER' 836) #(893 'USER' 837) #(893 'USING' 839) #(893 'UTCLONG' 840) #(893 'UUID' 884) #(893 'VALID' 842) #(893 'VALIDATE' 843) #(893 'VALUE' 844) #(893 'VALUES' 846) #(893 'VARY' 847) #(893 'VARYING' 848) #(893 'VERSION' 849) #(893 'VIA' 850) #(893 'VISIBLE' 851) #(893 'WAIT' 852) #(893 'WHEN' 853) #(893 'WHERE' 854) #(893 'WHILE' 855) #(893 'WIDTH' 856) #(893 'WINDOW' 857) #(893 'WINDOWS' 858) #(893 'WITH' 859) #(893 'WITHOUT' 862) #(893 'WORD' 863) #(893 'WORK' 864) #(893 'WORKSPACE' 865) #(893 'WRITE' 866) #(893 'WRITER' 867) #(893 'XML' 868) #(893 'XSD' 869) #(893 'XSDBOOL' 870) #(893 'YES' 871) #(893 'YYMMDD' 872) #(893 'ZERO' 874) #(893 'ZONE' 875) #(932 'ABS' 876) #(932 'ADD' 42) #(932 'ALL' 48) #(932 'AND' 54) #(932 'ANY' 55) #(932 'AVG' 78) #(932 'BIT' 89) #(932 'CDS' 123) #(932 'CID' 137) #(932 'CPI' 197) #(932 'DB2' 212) #(932 'DB6' 213) #(932 'DDL' 216) #(932 'DEC' 219) #(932 'DID' 238) #(932 'DIV' 245) #(932 'END' 263) #(932 'FOR' 353) #(932 'GET' 369) #(932 'HDB' 381) #(932 'IDS' 397) #(932 'ISO' 438) #(932 'JOB' 439) #(932 'KEY' 444) #(932 'LET' 461) #(932 'LOW' 486) #(932 'LPI' 488) #(932 'MAX' 499) #(932 'MIN' 511) #(932 'MOD' 515) #(932 'NEW' 533) #(932 'NOT' 553) #(932 'OFF' 571) #(932 'ONE' 574) #(932 'OUT' 584) #(932 'PAD' 592) #(932 'PUT' 630) #(932 'RAW' 639) #(932 'REF' 648) #(932 'RUN' 685) #(932 'SAP' 686) #(932 'SET' 715) #(932 'SQL' 740) #(932 'SUM' 768) #(932 'TAB' 780) #(932 'TRY' 818) #(932 'VIA' 850) #(932 'XML' 868) #(932 'XSD' 869) #(932 'YES' 871) #(913 '%_FINAL' 2) #(913 '%_HINTS' 3) #(913 '%_PREDEFINED' 4) #(913 '**' 8) #(913 'ABS' 876) #(913 'ABSTRACT' 33) #(913 'ACCEPT' 34) #(913 'ACCEPTING' 35) #(913 'ACCESS' 36) #(913 'ACCORDING' 37) #(913 'ACTION' 38) #(913 'ACTIVATION' 39) #(913 'ACTUAL' 40) #(913 'ADABAS' 41) #(913 'ADD' 42) #(913 'ADJACENT' 44) #(913 'ALIAS' 45) #(913 'ALIASES' 46) #(913 'ALIGN' 47) #(913 'ALL' 48) #(913 'ALLOCATE' 49) #(913 'ALPHA' 50) #(913 'AMDP' 51) #(913 'ANALYSIS' 52) #(913 'ANALYZER' 53) #(913 'AND' 54) #(913 'ANY' 55) #(913 'APPEND' 56) #(913 'APPENDING' 57) #(913 'APPLICATION' 58) #(913 'ARCHIVE' 59) #(913 'AREA' 60) #(913 'ARITHMETIC' 61) #(913 'AS' 62) #(913 'AS400' 63) #(913 'ASCENDING' 64) #(913 'ASSERT' 65) #(913 'ASSIGN' 66) #(913 'ASSIGNED' 67) #(913 'ASSIGNING' 68) #(913 'ASSOCIATION' 69) #(913 'ASYNCHRONOUS' 70) #(913 'AT' 71) #(913 'ATTRIBUTES' 72) #(913 'AUGMENTING' 73) #(913 'AUTHORITY' 74) #(913 'AUTHORIZATION' 76) #(913 'AUTO' 77) #(913 'AVG' 78) #(913 'BACK' 79) #(913 'BACKGROUND' 80) #(913 'BACKWARD' 81) #(913 'BADI' 82) #(913 'BASE' 83) #(913 'BEFORE' 84) #(913 'BEGIN' 85) #(913 'BEHAVIOR' 86) #(913 'BETWEEN' 87) #(913 'BINARY' 88) #(913 'BIT' 89) #(913 'BLANK' 94) #(913 'BLANKS' 95) #(913 'BLOCK' 96) #(913 'BLOCKS' 97) #(913 'BOOLC' 98) #(913 'BOUND' 99) #(913 'BOUNDARIES' 100) #(913 'BOUNDS' 101) #(913 'BOXED' 102) #(913 'BREAK' 103) #(913 'BUFFER' 105) #(913 'BY' 106) #(913 'BYPASSING' 107) #(913 'BYTE' 108) #(913 'CA' 116) #(913 'CALL' 117) #(913 'CALLING' 118) #(913 'CASE' 119) #(913 'CAST' 120) #(913 'CASTING' 121) #(913 'CATCH' 122) #(913 'CDS' 123) #(913 'CEIL' 877) #(913 'CENTER' 124) #(913 'CENTERED' 125) #(913 'CHAIN' 126) #(913 'CHANGE' 129) #(913 'CHANGING' 130) #(913 'CHANNELS' 131) #(913 'CHAR' 132) #(913 'CHARACTER' 134) #(913 'CHECK' 135) #(913 'CHECKBOX' 136) #(913 'CID' 137) #(913 'CIRCULAR' 138) #(913 'CLASS' 139) #(913 'CLEANUP' 143) #(913 'CLEAR' 144) #(913 'CLIENT' 145) #(913 'CLIENTS' 146) #(913 'CLOCK' 147) #(913 'CLONE' 148) #(913 'CLOSE' 149) #(913 'CN' 150) #(913 'CO' 151) #(913 'COALESCE' 878) #(913 'CODE' 152) #(913 'COLLECT' 153) #(913 'COLOR' 154) #(913 'COLUMN' 155) #(913 'COLUMNS' 156) #(913 'COL_BACKGROUND' 157) #(913 'COL_GROUP' 158) #(913 'COL_HEADING' 159) #(913 'COL_KEY' 160) #(913 'COL_NEGATIVE' 161) #(913 'COL_NORMAL' 162) #(913 'COL_POSITIVE' 163) #(913 'COL_TOTAL' 164) #(913 'COMMENT' 165) #(913 'COMMENTS' 166) #(913 'COMMIT' 167) #(913 'COMMON' 168) #(913 'COMMUNICATION' 169) #(913 'COMPARING' 170) #(913 'COMPONENT' 171) #(913 'COMPONENTS' 172) #(913 'COMPRESSION' 173) #(913 'COMPUTE' 174) #(913 'CONCAT' 879) #(913 'CONCATENATE' 175) #(913 'CONCAT_WITH_SPACE' 880) #(913 'COND' 176) #(913 'CONDENSE' 177) #(913 'CONDITION' 178) #(913 'CONNECTION' 179) #(913 'CONSTANT' 180) #(913 'CONSTANTS' 181) #(913 'CONTEXT' 182) #(913 'CONTEXTS' 183) #(913 'CONTINUE' 184) #(913 'CONTROL' 185) #(913 'CONTROLS' 186) #(913 'CONV' 187) #(913 'CONVERSION' 188) #(913 'CONVERT' 189) #(913 'COPIES' 190) #(913 'COPY' 191) #(913 'CORRESPONDING' 192) #(913 'COUNT' 193) #(913 'COUNTRY' 194) #(913 'COVER' 195) #(913 'CP' 196) #(913 'CPI' 197) #(913 'CREATE' 198) #(913 'CRITICAL' 199) #(913 'CS' 200) #(913 'CURRENCY' 201) #(913 'CURRENT' 202) #(913 'CURSOR' 203) #(913 'DANGEROUS' 205) #(913 'DATA' 206) #(913 'DATABASE' 207) #(913 'DATAINFO' 208) #(913 'DATASET' 209) #(913 'DATE' 210) #(913 'DAYLIGHT' 211) #(913 'DB2' 212) #(913 'DB6' 213) #(913 'DD/MM/YY' 214) #(913 'DD/MM/YYYY' 215) #(913 'DDL' 216) #(913 'DDMMYY' 217) #(913 'DEALLOCATE' 218) #(913 'DEC' 219) #(913 'DECIMALS' 220) #(913 'DECLARATIONS' 221) #(913 'DEEP' 222) #(913 'DEFAULT' 223) #(913 'DEFERRED' 224) #(913 'DEFINE' 225) #(913 'DEFINITION' 226) #(913 'DELETE' 227) #(913 'DELETING' 228) #(913 'DEMAND' 229) #(913 'DEPARTMENT' 230) #(913 'DESCENDING' 231) #(913 'DESCRIBE' 232) #(913 'DESTINATION' 233) #(913 'DETAIL' 234) #(913 'DETERMINATION' 235) #(913 'DETERMINE' 236) #(913 'DIALOG' 237) #(913 'DID' 238) #(913 'DIRECTORY' 239) #(913 'DISCARDING' 240) #(913 'DISPLAY' 241) #(913 'DISTANCE' 243) #(913 'DISTINCT' 244) #(913 'DIV' 245) #(913 'DIVIDE' 246) #(913 'DO' 247) #(913 'DUMMY' 248) #(913 'DUPLICATE' 249) #(913 'DUPLICATES' 250) #(913 'DURATION' 251) #(913 'DURING' 252) #(913 'DYNPRO' 253) #(913 'EARLY' 254) #(913 'EDIT' 255) #(913 'ELSE' 257) #(913 'ELSEIF' 258) #(913 'EMPTY' 259) #(913 'ENABLED' 260) #(913 'ENABLING' 261) #(913 'ENCODING' 262) #(913 'END' 263) #(913 'ENDAT' 270) #(913 'ENDCASE' 271) #(913 'ENDCATCH' 272) #(913 'ENDCHAIN' 273) #(913 'ENDCLASS' 274) #(913 'ENDDO' 275) #(913 'ENDENHANCEMENT' 276) #(913 'ENDEXEC' 277) #(913 'ENDFORM' 278) #(913 'ENDFUNCTION' 279) #(913 'ENDIAN' 280) #(913 'ENDIF' 281) #(913 'ENDING' 282) #(913 'ENDINTERFACE' 283) #(913 'ENDLOOP' 284) #(913 'ENDMETHOD' 285) #(913 'ENDMODULE' 286) #(913 'ENDON' 287) #(913 'ENDPROVIDE' 288) #(913 'ENDSELECT' 289) #(913 'ENDTRY' 290) #(913 'ENDWHILE' 291) #(913 'ENDWITH' 292) #(913 'ENGINEERING' 293) #(913 'ENHANCEMENT' 294) #(913 'ENHANCEMENTS' 297) #(913 'ENTITIES' 298) #(913 'ENTITY' 299) #(913 'ENTRIES' 300) #(913 'ENTRY' 301) #(913 'ENUM' 302) #(913 'ENVIRONMENT' 303) #(913 'EQ' 304) #(913 'EQUIV' 305) #(913 'ERRORS' 306) #(913 'ESCAPE' 307) #(913 'ESCAPING' 308) #(913 'EVENT' 309) #(913 'EVENTS' 310) #(913 'EXACT' 311) #(913 'EXCEPT' 312) #(913 'EXCEPTION' 313) #(913 'EXCEPTIONS' 315) #(913 'EXCLUDE' 316) #(913 'EXCLUDING' 317) #(913 'EXEC' 318) #(913 'EXECUTE' 319) #(913 'EXISTS' 320) #(913 'EXIT' 321) #(913 'EXPANDING' 323) #(913 'EXPIRATION' 324) #(913 'EXPLICIT' 325) #(913 'EXPONENT' 326) #(913 'EXPORT' 327) #(913 'EXPORTING' 328) #(913 'EXTENDED' 329) #(913 'EXTENSION' 330) #(913 'EXTRACT' 331) #(913 'FAIL' 332) #(913 'FAILED' 333) #(913 'FEATURES' 334) #(913 'FETCH' 335) #(913 'FIELD' 336) #(913 'FIELDS' 340) #(913 'FILE' 341) #(913 'FILL' 342) #(913 'FILTER' 343) #(913 'FILTERS' 344) #(913 'FINAL' 345) #(913 'FIND' 346) #(913 'FIRST' 347) #(913 'FLOOR' 881) #(913 'FLTP' 350) #(913 'FLUSH' 351) #(913 'FONT' 352) #(913 'FOR' 353) #(913 'FORM' 354) #(913 'FORMAT' 355) #(913 'FORWARD' 356) #(913 'FOUND' 357) #(913 'FRAME' 358) #(913 'FRAMES' 359) #(913 'FREE' 360) #(913 'FRIENDS' 361) #(913 'FROM' 362) #(913 'FULL' 363) #(913 'FUNCTION' 364) #(913 'FURTHER' 366) #(913 'GE' 367) #(913 'GENERATE' 368) #(913 'GET' 369) #(913 'GIVING' 370) #(913 'GLOBAL' 371) #(913 'GRAPH' 372) #(913 'GROUP' 373) #(913 'GROUPS' 374) #(913 'GT' 375) #(913 'HANDLE' 376) #(913 'HANDLER' 377) #(913 'HARMLESS' 378) #(913 'HASHED' 379) #(913 'HAVING' 380) #(913 'HDB' 381) #(913 'HEADER' 382) #(913 'HEADERS' 383) #(913 'HEADING' 384) #(913 'HIDE' 387) #(913 'HIERARCHY' 388) #(913 'HIGH' 389) #(913 'HINT' 390) #(913 'HOLD' 391) #(913 'HOTSPOT' 392) #(913 'ICON' 393) #(913 'ID' 394) #(913 'IDENTIFICATION' 395) #(913 'IDENTIFIER' 396) #(913 'IDS' 397) #(913 'IF' 398) #(913 'IGNORE' 399) #(913 'IGNORING' 400) #(913 'IMMEDIATELY' 401) #(913 'IMPLEMENTATION' 402) #(913 'IMPLEMENTED' 403) #(913 'IMPLICIT' 404) #(913 'IMPORT' 405) #(913 'IMPORTING' 406) #(913 'IN' 407) #(913 'INACTIVE' 408) #(913 'INCL' 409) #(913 'INCLUDE' 410) #(913 'INCLUDES' 411) #(913 'INCREMENT' 412) #(913 'INDEX' 413) #(913 'INFORMIX' 415) #(913 'INFOTYPES' 416) #(913 'INHERITING' 417) #(913 'INIT' 418) #(913 'INITIAL' 419) #(913 'INITIALIZATION' 420) #(913 'INNER' 421) #(913 'INPUT' 422) #(913 'INSERT' 423) #(913 'INSTANCE' 424) #(913 'INSTANCES' 425) #(913 'INT2' 426) #(913 'INT4' 427) #(913 'INT8' 428) #(913 'INTENSIFIED' 429) #(913 'INTERFACE' 430) #(913 'INTERFACES' 431) #(913 'INTERNAL' 432) #(913 'INTERVALS' 433) #(913 'INTO' 434) #(913 'INVERSE' 435) #(913 'IS' 437) #(913 'ISO' 438) #(913 'JOB' 439) #(913 'JOIN' 440) #(913 'KEEP' 441) #(913 'KEEPING' 442) #(913 'KERNEL' 443) #(913 'KEY' 444) #(913 'KEYS' 445) #(913 'KEYWORDS' 446) #(913 'KIND' 447) #(913 'LANGUAGE' 448) #(913 'LAST' 449) #(913 'LATE' 450) #(913 'LAYOUT' 451) #(913 'LE' 452) #(913 'LEADING' 453) #(913 'LEAVE' 454) #(913 'LEFT' 455) #(913 'LEFTPLUS' 457) #(913 'LEFTSPACE' 458) #(913 'LEGACY' 459) #(913 'LENGTH' 460) #(913 'LET' 461) #(913 'LEVEL' 462) #(913 'LEVELS' 463) #(913 'LIKE' 464) #(913 'LINE' 465) #(913 'LINEFEED' 469) #(913 'LINES' 470) #(913 'LINK' 471) #(913 'LIST' 472) #(913 'LISTBOX' 474) #(913 'LOAD' 475) #(913 'LOCAL' 477) #(913 'LOCALE' 478) #(913 'LOCK' 479) #(913 'LOCKS' 480) #(913 'LOGFILE' 482) #(913 'LOGICAL' 483) #(913 'LONG' 484) #(913 'LOOP' 485) #(913 'LOW' 486) #(913 'LOWER' 487) #(913 'LPI' 488) #(913 'LT' 489) #(913 'LTRIM' 882) #(913 'MAIN' 491) #(913 'MAPPED' 492) #(913 'MAPPING' 493) #(913 'MARGIN' 494) #(913 'MARK' 495) #(913 'MASK' 496) #(913 'MATCH' 497) #(913 'MATCHCODE' 498) #(913 'MAX' 499) #(913 'MAXIMUM' 500) #(913 'MEDIUM' 501) #(913 'MEMBERS' 502) #(913 'MEMORY' 503) #(913 'MESH' 504) #(913 'MESSAGE' 505) #(913 'MESSAGES' 507) #(913 'MESSAGING' 508) #(913 'METHOD' 509) #(913 'METHODS' 510) #(913 'MIN' 511) #(913 'MM/DD/YY' 512) #(913 'MM/DD/YYYY' 513) #(913 'MMDDYY' 514) #(913 'MOD' 515) #(913 'MODE' 516) #(913 'MODIF' 517) #(913 'MODIFIER' 518) #(913 'MODIFY' 519) #(913 'MODULE' 520) #(913 'MOVE' 521) #(913 'MSSQLNT' 523) #(913 'MULTIPLY' 524) #(913 'NA' 526) #(913 'NAME' 527) #(913 'NAMETAB' 528) #(913 'NATIVE' 529) #(913 'NE' 530) #(913 'NESTED' 531) #(913 'NESTING' 532) #(913 'NEW' 533) #(913 'NEXT' 537) #(913 'NO' 538) #(913 'NODES' 550) #(913 'NOT' 553) #(913 'NP' 554) #(913 'NS' 555) #(913 'NULL' 556) #(913 'NUMBER' 557) #(913 'NUMBERING' 558) #(913 'NUMC' 559) #(913 'OBJECT' 561) #(913 'OBJECTS' 562) #(913 'OBJMGR' 563) #(913 'OBLIGATORY' 564) #(913 'OCCURENCE' 565) #(913 'OCCURENCES' 566) #(913 'OCCURRENCE' 567) #(913 'OCCURRENCES' 568) #(913 'OCCURS' 569) #(913 'OF' 570) #(913 'OFF' 571) #(913 'OFFSET' 572) #(913 'ON' 573) #(913 'ONE' 574) #(913 'ONLY' 575) #(913 'OPEN' 576) #(913 'OPTION' 577) #(913 'OPTIONAL' 578) #(913 'OPTIONS' 579) #(913 'OR' 580) #(913 'ORACLE' 581) #(913 'ORDER' 582) #(913 'OTHERS' 583) #(913 'OUT' 584) #(913 'OUTER' 585) #(913 'OUTPUT' 586) #(913 'OVERFLOW' 588) #(913 'OVERLAY' 589) #(913 'PACK' 590) #(913 'PACKAGE' 591) #(913 'PAD' 592) #(913 'PADDING' 593) #(913 'PAGE' 594) #(913 'PAGES' 595) #(913 'PARAMETER' 596) #(913 'PARAMETERS' 598) #(913 'PART' 599) #(913 'PARTIALLY' 600) #(913 'PCRE' 601) #(913 'PERCENTAGE' 602) #(913 'PERFORM' 603) #(913 'PERFORMING' 604) #(913 'PERMISSIONS' 605) #(913 'PLACES' 607) #(913 'POOL' 608) #(913 'POSITION' 609) #(913 'POS_HIGH' 610) #(913 'POS_LOW' 611) #(913 'PRAGMAS' 612) #(913 'PRECHECK' 613) #(913 'PRECOMPILED' 614) #(913 'PREFERRED' 615) #(913 'PRESERVING' 616) #(913 'PRIMARY' 617) #(913 'PRINT' 618) #(913 'PRIVATE' 620) #(913 'PRIVILEGED' 621) #(913 'PROCEDURE' 622) #(913 'PROGRAM' 623) #(913 'PROPERTY' 624) #(913 'PROTECTED' 625) #(913 'PROVIDE' 626) #(913 'PUBLIC' 627) #(913 'PUSH' 628) #(913 'PUSHBUTTON' 629) #(913 'PUT' 630) #(913 'QUEUEONLY' 632) #(913 'QUICKINFO' 633) #(913 'RADIOBUTTON' 634) #(913 'RAISE' 635) #(913 'RAISING' 636) #(913 'RANGE' 637) #(913 'RANGES' 638) #(913 'RAW' 639) #(913 'READ' 640) #(913 'RECEIVE' 642) #(913 'RECEIVED' 643) #(913 'RECEIVER' 644) #(913 'RECEIVING' 645) #(913 'REDEFINITION' 646) #(913 'REDUCE' 647) #(913 'REF' 648) #(913 'REFERENCE' 649) #(913 'REFRESH' 650) #(913 'REGEX' 651) #(913 'REJECT' 652) #(913 'RELATING' 653) #(913 'RENAMING' 654) #(913 'REPLACE' 655) #(913 'REPLACEMENT' 656) #(913 'REPLACING' 657) #(913 'REPORT' 658) #(913 'REPORTED' 659) #(913 'REQUEST' 660) #(913 'REQUESTED' 661) #(913 'REQUIRED' 662) #(913 'RESERVE' 663) #(913 'RESET' 664) #(913 'RESOLUTION' 665) #(913 'RESPECTING' 666) #(913 'RESPONSE' 667) #(913 'RESPONSES' 668) #(913 'RESULT' 669) #(913 'RESULTS' 670) #(913 'RESUMABLE' 671) #(913 'RESUME' 672) #(913 'RETRY' 673) #(913 'RETURN' 674) #(913 'RETURNCODE' 675) #(913 'RETURNING' 676) #(913 'RIGHT' 677) #(913 'RIGHTPLUS' 679) #(913 'RIGHTSPACE' 680) #(913 'RISK' 681) #(913 'ROLLBACK' 682) #(913 'ROUND' 683) #(913 'ROWS' 684) #(913 'RTRIM' 883) #(913 'RUN' 685) #(913 'SAP' 686) #(913 'SAVE' 688) #(913 'SAVING' 689) #(913 'SCALE_PRESERVING' 690) #(913 'SCALE_PRESERVING_SCIENTIFIC' 691) #(913 'SCAN' 692) #(913 'SCIENTIFIC' 693) #(913 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(913 'SCREEN' 695) #(913 'SCROLL' 696) #(913 'SCROLLING' 698) #(913 'SEARCH' 699) #(913 'SECONDARY' 700) #(913 'SECONDS' 701) #(913 'SECTION' 702) #(913 'SELECT' 703) #(913 'SELECTION' 705) #(913 'SELECTIONS' 710) #(913 'SEND' 711) #(913 'SEPARATE' 712) #(913 'SEPARATED' 713) #(913 'SESSION' 714) #(913 'SET' 715) #(913 'SHARED' 716) #(913 'SHIFT' 717) #(913 'SHORT' 718) #(913 'SHORTDUMP' 719) #(913 'SIGN' 721) #(913 'SIGN_AS_POSTFIX' 722) #(913 'SIMPLE' 723) #(913 'SIMULATION' 724) #(913 'SINGLE' 725) #(913 'SIZE' 726) #(913 'SKIP' 727) #(913 'SKIPPING' 728) #(913 'SMART' 729) #(913 'SOME' 730) #(913 'SORT' 731) #(913 'SORTABLE' 732) #(913 'SORTED' 733) #(913 'SOURCE' 734) #(913 'SPACE' 735) #(913 'SPECIFIED' 736) #(913 'SPLIT' 737) #(913 'SPOOL' 738) #(913 'SPOTS' 739) #(913 'SQL' 740) #(913 'SQLSCRIPT' 741) #(913 'STABLE' 742) #(913 'STAMP' 743) #(913 'STANDARD' 744) #(913 'STARTING' 746) #(913 'STATE' 747) #(913 'STATEMENT' 748) #(913 'STATEMENTS' 749) #(913 'STATIC' 750) #(913 'STATICS' 751) #(913 'STATUSINFO' 752) #(913 'STEP' 753) #(913 'STOP' 755) #(913 'STRUCTURE' 756) #(913 'STRUCTURES' 757) #(913 'STYLE' 758) #(913 'SUBKEY' 759) #(913 'SUBMATCHES' 760) #(913 'SUBMIT' 761) #(913 'SUBROUTINE' 762) #(913 'SUBSCREEN' 763) #(913 'SUBSTRING' 764) #(913 'SUBTRACT' 765) #(913 'SUFFIX' 767) #(913 'SUM' 768) #(913 'SUMMARY' 769) #(913 'SUPPLIED' 770) #(913 'SUPPLY' 771) #(913 'SUPPRESS' 772) #(913 'SWITCH' 773) #(913 'SYBASE' 774) #(913 'SYMBOL' 775) #(913 'T000' 779) #(913 'TAB' 780) #(913 'TABBED' 781) #(913 'TABLE' 782) #(913 'TABLES' 783) #(913 'TABLEVIEW' 784) #(913 'TABSTRIP' 785) #(913 'TARGET' 786) #(913 'TASK' 787) #(913 'TASKS' 788) #(913 'TEST' 789) #(913 'TESTING' 792) #(913 'TEXT' 793) #(913 'TEXTPOOL' 794) #(913 'THEN' 795) #(913 'THROW' 796) #(913 'TIME' 797) #(913 'TIMES' 798) #(913 'TIMESTAMP' 799) #(913 'TIMEZONE' 800) #(913 'TITLE' 801) #(913 'TITLEBAR' 802) #(913 'TO' 803) #(913 'TOKENIZATION' 804) #(913 'TOKENS' 805) #(913 'TRAILING' 810) #(913 'TRANSACTION' 811) #(913 'TRANSFER' 812) #(913 'TRANSFORMATION' 813) #(913 'TRANSLATE' 814) #(913 'TRANSPORTING' 815) #(913 'TRMAC' 816) #(913 'TRUNCATION' 817) #(913 'TRY' 818) #(913 'TYPE' 819) #(913 'TYPES' 822) #(913 'ULINE' 823) #(913 'UNASSIGN' 824) #(913 'UNDER' 825) #(913 'UNICODE' 826) #(913 'UNION' 827) #(913 'UNIQUE' 828) #(913 'UNIT' 829) #(913 'UNIX' 830) #(913 'UNPACK' 831) #(913 'UNTIL' 832) #(913 'UNWIND' 833) #(913 'UP' 834) #(913 'UPDATE' 835) #(913 'UPPER' 836) #(913 'USER' 837) #(913 'USING' 839) #(913 'UTCLONG' 840) #(913 'UUID' 884) #(913 'VALID' 842) #(913 'VALIDATE' 843) #(913 'VALUE' 844) #(913 'VALUES' 846) #(913 'VARY' 847) #(913 'VARYING' 848) #(913 'VERSION' 849) #(913 'VIA' 850) #(913 'VISIBLE' 851) #(913 'WAIT' 852) #(913 'WHEN' 853) #(913 'WHERE' 854) #(913 'WHILE' 855) #(913 'WIDTH' 856) #(913 'WINDOW' 857) #(913 'WINDOWS' 858) #(913 'WITH' 859) #(913 'WITHOUT' 862) #(913 'WORD' 863) #(913 'WORK' 864) #(913 'WORKSPACE' 865) #(913 'WRITE' 866) #(913 'WRITER' 867) #(913 'XML' 868) #(913 'XSD' 869) #(913 'XSDBOOL' 870) #(913 'YES' 871) #(913 'YYMMDD' 872) #(913 'ZERO' 874) #(913 'ZONE' 875) #(952 '**' 8) #(952 'ABS' 876) #(952 'ABSTRACT' 33) #(952 'ACCEPT' 34) #(952 'ACCEPTING' 35) #(952 'ACCESS' 36) #(952 'ACCORDING' 37) #(952 'ACTION' 38) #(952 'ACTIVATION' 39) #(952 'ACTUAL' 40) #(952 'ADABAS' 41) #(952 'ADD' 42) #(952 'ADJACENT' 44) #(952 'ALIAS' 45) #(952 'ALIASES' 46) #(952 'ALIGN' 47) #(952 'ALL' 48) #(952 'ALLOCATE' 49) #(952 'ALPHA' 50) #(952 'AMDP' 51) #(952 'ANALYSIS' 52) #(952 'ANALYZER' 53) #(952 'AND' 54) #(952 'ANY' 55) #(952 'APPEND' 56) #(952 'APPENDING' 57) #(952 'APPLICATION' 58) #(952 'ARCHIVE' 59) #(952 'AREA' 60) #(952 'ARITHMETIC' 61) #(952 'AS' 62) #(952 'AS400' 63) #(952 'ASCENDING' 64) #(952 'ASSERT' 65) #(952 'ASSIGN' 66) #(952 'ASSIGNED' 67) #(952 'ASSIGNING' 68) #(952 'ASSOCIATION' 69) #(952 'ASYNCHRONOUS' 70) #(952 'AT' 71) #(952 'ATTRIBUTES' 72) #(952 'AUGMENTING' 73) #(952 'AUTHORITY' 74) #(952 'AUTHORIZATION' 76) #(952 'AUTO' 77) #(952 'AVG' 78) #(952 'BACK' 79) #(952 'BACKGROUND' 80) #(952 'BACKWARD' 81) #(952 'BADI' 82) #(952 'BASE' 83) #(952 'BEFORE' 84) #(952 'BEGIN' 85) #(952 'BEHAVIOR' 86) #(952 'BETWEEN' 87) #(952 'BINARY' 88) #(952 'BIT' 89) #(952 'BLANK' 94) #(952 'BLANKS' 95) #(952 'BLOCK' 96) #(952 'BLOCKS' 97) #(952 'BOOLC' 98) #(952 'BOUND' 99) #(952 'BOUNDARIES' 100) #(952 'BOUNDS' 101) #(952 'BOXED' 102) #(952 'BREAK' 103) #(952 'BUFFER' 105) #(952 'BY' 106) #(952 'BYPASSING' 107) #(952 'BYTE' 108) #(952 'CA' 116) #(952 'CALL' 117) #(952 'CALLING' 118) #(952 'CASE' 119) #(952 'CAST' 120) #(952 'CASTING' 121) #(952 'CATCH' 122) #(952 'CDS' 123) #(952 'CEIL' 877) #(952 'CENTER' 124) #(952 'CENTERED' 125) #(952 'CHAIN' 126) #(952 'CHANGE' 129) #(952 'CHANGING' 130) #(952 'CHANNELS' 131) #(952 'CHAR' 132) #(952 'CHARACTER' 134) #(952 'CHECK' 135) #(952 'CHECKBOX' 136) #(952 'CID' 137) #(952 'CIRCULAR' 138) #(952 'CLASS' 139) #(952 'CLEANUP' 143) #(952 'CLEAR' 144) #(952 'CLIENT' 145) #(952 'CLIENTS' 146) #(952 'CLOCK' 147) #(952 'CLONE' 148) #(952 'CLOSE' 149) #(952 'CN' 150) #(952 'CO' 151) #(952 'COALESCE' 878) #(952 'CODE' 152) #(952 'COLLECT' 153) #(952 'COLOR' 154) #(952 'COLUMN' 155) #(952 'COLUMNS' 156) #(952 'COL_BACKGROUND' 157) #(952 'COL_GROUP' 158) #(952 'COL_HEADING' 159) #(952 'COL_KEY' 160) #(952 'COL_NEGATIVE' 161) #(952 'COL_NORMAL' 162) #(952 'COL_POSITIVE' 163) #(952 'COL_TOTAL' 164) #(952 'COMMENT' 165) #(952 'COMMENTS' 166) #(952 'COMMIT' 167) #(952 'COMMON' 168) #(952 'COMMUNICATION' 169) #(952 'COMPARING' 170) #(952 'COMPONENT' 171) #(952 'COMPONENTS' 172) #(952 'COMPRESSION' 173) #(952 'COMPUTE' 174) #(952 'CONCAT' 879) #(952 'CONCATENATE' 175) #(952 'CONCAT_WITH_SPACE' 880) #(952 'COND' 176) #(952 'CONDENSE' 177) #(952 'CONDITION' 178) #(952 'CONNECTION' 179) #(952 'CONSTANT' 180) #(952 'CONSTANTS' 181) #(952 'CONTEXT' 182) #(952 'CONTEXTS' 183) #(952 'CONTINUE' 184) #(952 'CONTROL' 185) #(952 'CONTROLS' 186) #(952 'CONV' 187) #(952 'CONVERSION' 188) #(952 'CONVERT' 189) #(952 'COPIES' 190) #(952 'COPY' 191) #(952 'CORRESPONDING' 192) #(952 'COUNT' 193) #(952 'COUNTRY' 194) #(952 'COVER' 195) #(952 'CP' 196) #(952 'CPI' 197) #(952 'CREATE' 198) #(952 'CRITICAL' 199) #(952 'CS' 200) #(952 'CURRENCY' 201) #(952 'CURRENT' 202) #(952 'CURSOR' 203) #(952 'DANGEROUS' 205) #(952 'DATA' 206) #(952 'DATABASE' 207) #(952 'DATAINFO' 208) #(952 'DATASET' 209) #(952 'DATE' 210) #(952 'DAYLIGHT' 211) #(952 'DB2' 212) #(952 'DB6' 213) #(952 'DDL' 216) #(952 'DDMMYY' 217) #(952 'DEALLOCATE' 218) #(952 'DEC' 219) #(952 'DECIMALS' 220) #(952 'DECLARATIONS' 221) #(952 'DEEP' 222) #(952 'DEFAULT' 223) #(952 'DEFERRED' 224) #(952 'DEFINE' 225) #(952 'DEFINITION' 226) #(952 'DELETE' 227) #(952 'DELETING' 228) #(952 'DEMAND' 229) #(952 'DEPARTMENT' 230) #(952 'DESCENDING' 231) #(952 'DESCRIBE' 232) #(952 'DESTINATION' 233) #(952 'DETAIL' 234) #(952 'DETERMINATION' 235) #(952 'DETERMINE' 236) #(952 'DIALOG' 237) #(952 'DID' 238) #(952 'DIRECTORY' 239) #(952 'DISCARDING' 240) #(952 'DISPLAY' 241) #(952 'DISTANCE' 243) #(952 'DISTINCT' 244) #(952 'DIV' 245) #(952 'DIVIDE' 246) #(952 'DO' 247) #(952 'DUMMY' 248) #(952 'DUPLICATE' 249) #(952 'DUPLICATES' 250) #(952 'DURATION' 251) #(952 'DURING' 252) #(952 'DYNPRO' 253) #(952 'EARLY' 254) #(952 'EDIT' 255) #(952 'ELSE' 257) #(952 'ELSEIF' 258) #(952 'EMPTY' 259) #(952 'ENABLED' 260) #(952 'ENABLING' 261) #(952 'ENCODING' 262) #(952 'END' 263) #(952 'ENDAT' 270) #(952 'ENDCASE' 271) #(952 'ENDCATCH' 272) #(952 'ENDCHAIN' 273) #(952 'ENDCLASS' 274) #(952 'ENDDO' 275) #(952 'ENDENHANCEMENT' 276) #(952 'ENDEXEC' 277) #(952 'ENDFORM' 278) #(952 'ENDFUNCTION' 279) #(952 'ENDIAN' 280) #(952 'ENDIF' 281) #(952 'ENDING' 282) #(952 'ENDINTERFACE' 283) #(952 'ENDLOOP' 284) #(952 'ENDMETHOD' 285) #(952 'ENDMODULE' 286) #(952 'ENDON' 287) #(952 'ENDPROVIDE' 288) #(952 'ENDSELECT' 289) #(952 'ENDTRY' 290) #(952 'ENDWHILE' 291) #(952 'ENDWITH' 292) #(952 'ENGINEERING' 293) #(952 'ENHANCEMENT' 294) #(952 'ENHANCEMENTS' 297) #(952 'ENTITIES' 298) #(952 'ENTITY' 299) #(952 'ENTRIES' 300) #(952 'ENTRY' 301) #(952 'ENUM' 302) #(952 'ENVIRONMENT' 303) #(952 'EQ' 304) #(952 'EQUIV' 305) #(952 'ERRORS' 306) #(952 'ESCAPE' 307) #(952 'ESCAPING' 308) #(952 'EVENT' 309) #(952 'EVENTS' 310) #(952 'EXACT' 311) #(952 'EXCEPT' 312) #(952 'EXCEPTION' 313) #(952 'EXCEPTIONS' 315) #(952 'EXCLUDE' 316) #(952 'EXCLUDING' 317) #(952 'EXEC' 318) #(952 'EXECUTE' 319) #(952 'EXISTS' 320) #(952 'EXIT' 321) #(952 'EXPANDING' 323) #(952 'EXPIRATION' 324) #(952 'EXPLICIT' 325) #(952 'EXPONENT' 326) #(952 'EXPORT' 327) #(952 'EXPORTING' 328) #(952 'EXTENDED' 329) #(952 'EXTENSION' 330) #(952 'EXTRACT' 331) #(952 'FAIL' 332) #(952 'FAILED' 333) #(952 'FEATURES' 334) #(952 'FETCH' 335) #(952 'FIELD' 336) #(952 'FIELDS' 340) #(952 'FILE' 341) #(952 'FILL' 342) #(952 'FILTER' 343) #(952 'FILTERS' 344) #(952 'FINAL' 345) #(952 'FIND' 346) #(952 'FIRST' 347) #(952 'FLOOR' 881) #(952 'FLTP' 350) #(952 'FLUSH' 351) #(952 'FONT' 352) #(952 'FOR' 353) #(952 'FORM' 354) #(952 'FORMAT' 355) #(952 'FORWARD' 356) #(952 'FOUND' 357) #(952 'FRAME' 358) #(952 'FRAMES' 359) #(952 'FREE' 360) #(952 'FRIENDS' 361) #(952 'FROM' 362) #(952 'FULL' 363) #(952 'FUNCTION' 364) #(952 'FURTHER' 366) #(952 'GE' 367) #(952 'GENERATE' 368) #(952 'GET' 369) #(952 'GIVING' 370) #(952 'GLOBAL' 371) #(952 'GRAPH' 372) #(952 'GROUP' 373) #(952 'GROUPS' 374) #(952 'GT' 375) #(952 'HANDLE' 376) #(952 'HANDLER' 377) #(952 'HARMLESS' 378) #(952 'HASHED' 379) #(952 'HAVING' 380) #(952 'HDB' 381) #(952 'HEADER' 382) #(952 'HEADERS' 383) #(952 'HEADING' 384) #(952 'HIDE' 387) #(952 'HIERARCHY' 388) #(952 'HIGH' 389) #(952 'HINT' 390) #(952 'HOLD' 391) #(952 'HOTSPOT' 392) #(952 'ICON' 393) #(952 'ID' 394) #(952 'IDENTIFICATION' 395) #(952 'IDENTIFIER' 396) #(952 'IDS' 397) #(952 'IF' 398) #(952 'IGNORE' 399) #(952 'IGNORING' 400) #(952 'IMMEDIATELY' 401) #(952 'IMPLEMENTATION' 402) #(952 'IMPLEMENTED' 403) #(952 'IMPLICIT' 404) #(952 'IMPORT' 405) #(952 'IMPORTING' 406) #(952 'IN' 407) #(952 'INACTIVE' 408) #(952 'INCL' 409) #(952 'INCLUDE' 410) #(952 'INCLUDES' 411) #(952 'INCREMENT' 412) #(952 'INDEX' 413) #(952 'INFORMIX' 415) #(952 'INFOTYPES' 416) #(952 'INHERITING' 417) #(952 'INIT' 418) #(952 'INITIAL' 419) #(952 'INITIALIZATION' 420) #(952 'INNER' 421) #(952 'INPUT' 422) #(952 'INSERT' 423) #(952 'INSTANCE' 424) #(952 'INSTANCES' 425) #(952 'INT2' 426) #(952 'INT4' 427) #(952 'INT8' 428) #(952 'INTENSIFIED' 429) #(952 'INTERFACE' 430) #(952 'INTERFACES' 431) #(952 'INTERNAL' 432) #(952 'INTERVALS' 433) #(952 'INTO' 434) #(952 'INVERSE' 435) #(952 'IS' 437) #(952 'ISO' 438) #(952 'JOB' 439) #(952 'JOIN' 440) #(952 'KEEP' 441) #(952 'KEEPING' 442) #(952 'KERNEL' 443) #(952 'KEY' 444) #(952 'KEYS' 445) #(952 'KEYWORDS' 446) #(952 'KIND' 447) #(952 'LANGUAGE' 448) #(952 'LAST' 449) #(952 'LATE' 450) #(952 'LAYOUT' 451) #(952 'LE' 452) #(952 'LEADING' 453) #(952 'LEAVE' 454) #(952 'LEFT' 455) #(952 'LEFTPLUS' 457) #(952 'LEFTSPACE' 458) #(952 'LEGACY' 459) #(952 'LENGTH' 460) #(952 'LET' 461) #(952 'LEVEL' 462) #(952 'LEVELS' 463) #(952 'LIKE' 464) #(952 'LINE' 465) #(952 'LINEFEED' 469) #(952 'LINES' 470) #(952 'LINK' 471) #(952 'LIST' 472) #(952 'LISTBOX' 474) #(952 'LOAD' 475) #(952 'LOCAL' 477) #(952 'LOCALE' 478) #(952 'LOCK' 479) #(952 'LOCKS' 480) #(952 'LOGFILE' 482) #(952 'LOGICAL' 483) #(952 'LONG' 484) #(952 'LOOP' 485) #(952 'LOW' 486) #(952 'LOWER' 487) #(952 'LPI' 488) #(952 'LT' 489) #(952 'LTRIM' 882) #(952 'MAIN' 491) #(952 'MAPPED' 492) #(952 'MAPPING' 493) #(952 'MARGIN' 494) #(952 'MARK' 495) #(952 'MASK' 496) #(952 'MATCH' 497) #(952 'MATCHCODE' 498) #(952 'MAX' 499) #(952 'MAXIMUM' 500) #(952 'MEDIUM' 501) #(952 'MEMBERS' 502) #(952 'MEMORY' 503) #(952 'MESH' 504) #(952 'MESSAGE' 505) #(952 'MESSAGES' 507) #(952 'MESSAGING' 508) #(952 'METHOD' 509) #(952 'METHODS' 510) #(952 'MIN' 511) #(952 'MMDDYY' 514) #(952 'MOD' 515) #(952 'MODE' 516) #(952 'MODIF' 517) #(952 'MODIFIER' 518) #(952 'MODIFY' 519) #(952 'MODULE' 520) #(952 'MOVE' 521) #(952 'MSSQLNT' 523) #(952 'MULTIPLY' 524) #(952 'NA' 526) #(952 'NAME' 527) #(952 'NAMETAB' 528) #(952 'NATIVE' 529) #(952 'NE' 530) #(952 'NESTED' 531) #(952 'NESTING' 532) #(952 'NEW' 533) #(952 'NEXT' 537) #(952 'NO' 538) #(952 'NODES' 550) #(952 'NOT' 553) #(952 'NP' 554) #(952 'NS' 555) #(952 'NULL' 556) #(952 'NUMBER' 557) #(952 'NUMBERING' 558) #(952 'NUMC' 559) #(952 'OBJECT' 561) #(952 'OBJECTS' 562) #(952 'OBJMGR' 563) #(952 'OBLIGATORY' 564) #(952 'OCCURENCE' 565) #(952 'OCCURENCES' 566) #(952 'OCCURRENCE' 567) #(952 'OCCURRENCES' 568) #(952 'OCCURS' 569) #(952 'OF' 570) #(952 'OFF' 571) #(952 'OFFSET' 572) #(952 'ON' 573) #(952 'ONE' 574) #(952 'ONLY' 575) #(952 'OPEN' 576) #(952 'OPTION' 577) #(952 'OPTIONAL' 578) #(952 'OPTIONS' 579) #(952 'OR' 580) #(952 'ORACLE' 581) #(952 'ORDER' 582) #(952 'OTHERS' 583) #(952 'OUT' 584) #(952 'OUTER' 585) #(952 'OUTPUT' 586) #(952 'OVERFLOW' 588) #(952 'OVERLAY' 589) #(952 'PACK' 590) #(952 'PACKAGE' 591) #(952 'PAD' 592) #(952 'PADDING' 593) #(952 'PAGE' 594) #(952 'PAGES' 595) #(952 'PARAMETER' 596) #(952 'PARAMETERS' 598) #(952 'PART' 599) #(952 'PARTIALLY' 600) #(952 'PCRE' 601) #(952 'PERCENTAGE' 602) #(952 'PERFORM' 603) #(952 'PERFORMING' 604) #(952 'PERMISSIONS' 605) #(952 'PLACES' 607) #(952 'POOL' 608) #(952 'POSITION' 609) #(952 'POS_HIGH' 610) #(952 'POS_LOW' 611) #(952 'PRAGMAS' 612) #(952 'PRECHECK' 613) #(952 'PRECOMPILED' 614) #(952 'PREFERRED' 615) #(952 'PRESERVING' 616) #(952 'PRIMARY' 617) #(952 'PRINT' 618) #(952 'PRIVATE' 620) #(952 'PRIVILEGED' 621) #(952 'PROCEDURE' 622) #(952 'PROGRAM' 623) #(952 'PROPERTY' 624) #(952 'PROTECTED' 625) #(952 'PROVIDE' 626) #(952 'PUBLIC' 627) #(952 'PUSH' 628) #(952 'PUSHBUTTON' 629) #(952 'PUT' 630) #(952 'QUEUEONLY' 632) #(952 'QUICKINFO' 633) #(952 'RADIOBUTTON' 634) #(952 'RAISE' 635) #(952 'RAISING' 636) #(952 'RANGE' 637) #(952 'RANGES' 638) #(952 'RAW' 639) #(952 'READ' 640) #(952 'RECEIVE' 642) #(952 'RECEIVED' 643) #(952 'RECEIVER' 644) #(952 'RECEIVING' 645) #(952 'REDEFINITION' 646) #(952 'REDUCE' 647) #(952 'REF' 648) #(952 'REFERENCE' 649) #(952 'REFRESH' 650) #(952 'REGEX' 651) #(952 'REJECT' 652) #(952 'RELATING' 653) #(952 'RENAMING' 654) #(952 'REPLACE' 655) #(952 'REPLACEMENT' 656) #(952 'REPLACING' 657) #(952 'REPORT' 658) #(952 'REPORTED' 659) #(952 'REQUEST' 660) #(952 'REQUESTED' 661) #(952 'REQUIRED' 662) #(952 'RESERVE' 663) #(952 'RESET' 664) #(952 'RESOLUTION' 665) #(952 'RESPECTING' 666) #(952 'RESPONSE' 667) #(952 'RESPONSES' 668) #(952 'RESULT' 669) #(952 'RESULTS' 670) #(952 'RESUMABLE' 671) #(952 'RESUME' 672) #(952 'RETRY' 673) #(952 'RETURN' 674) #(952 'RETURNCODE' 675) #(952 'RETURNING' 676) #(952 'RIGHT' 677) #(952 'RIGHTPLUS' 679) #(952 'RIGHTSPACE' 680) #(952 'RISK' 681) #(952 'ROLLBACK' 682) #(952 'ROUND' 683) #(952 'ROWS' 684) #(952 'RTRIM' 883) #(952 'RUN' 685) #(952 'SAP' 686) #(952 'SAVE' 688) #(952 'SAVING' 689) #(952 'SCALE_PRESERVING' 690) #(952 'SCALE_PRESERVING_SCIENTIFIC' 691) #(952 'SCAN' 692) #(952 'SCIENTIFIC' 693) #(952 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(952 'SCREEN' 695) #(952 'SCROLL' 696) #(952 'SCROLLING' 698) #(952 'SEARCH' 699) #(952 'SECONDARY' 700) #(952 'SECONDS' 701) #(952 'SECTION' 702) #(952 'SELECT' 703) #(952 'SELECTION' 705) #(952 'SELECTIONS' 710) #(952 'SEND' 711) #(952 'SEPARATE' 712) #(952 'SEPARATED' 713) #(952 'SESSION' 714) #(952 'SET' 715) #(952 'SHARED' 716) #(952 'SHIFT' 717) #(952 'SHORT' 718) #(952 'SHORTDUMP' 719) #(952 'SIGN' 721) #(952 'SIGN_AS_POSTFIX' 722) #(952 'SIMPLE' 723) #(952 'SIMULATION' 724) #(952 'SINGLE' 725) #(952 'SIZE' 726) #(952 'SKIP' 727) #(952 'SKIPPING' 728) #(952 'SMART' 729) #(952 'SOME' 730) #(952 'SORT' 731) #(952 'SORTABLE' 732) #(952 'SORTED' 733) #(952 'SOURCE' 734) #(952 'SPACE' 735) #(952 'SPECIFIED' 736) #(952 'SPLIT' 737) #(952 'SPOOL' 738) #(952 'SPOTS' 739) #(952 'SQL' 740) #(952 'SQLSCRIPT' 741) #(952 'STABLE' 742) #(952 'STAMP' 743) #(952 'STANDARD' 744) #(952 'STARTING' 746) #(952 'STATE' 747) #(952 'STATEMENT' 748) #(952 'STATEMENTS' 749) #(952 'STATIC' 750) #(952 'STATICS' 751) #(952 'STATUSINFO' 752) #(952 'STEP' 753) #(952 'STOP' 755) #(952 'STRUCTURE' 756) #(952 'STRUCTURES' 757) #(952 'STYLE' 758) #(952 'SUBKEY' 759) #(952 'SUBMATCHES' 760) #(952 'SUBMIT' 761) #(952 'SUBROUTINE' 762) #(952 'SUBSCREEN' 763) #(952 'SUBSTRING' 764) #(952 'SUBTRACT' 765) #(952 'SUFFIX' 767) #(952 'SUM' 768) #(952 'SUMMARY' 769) #(952 'SUPPLIED' 770) #(952 'SUPPLY' 771) #(952 'SUPPRESS' 772) #(952 'SWITCH' 773) #(952 'SYBASE' 774) #(952 'SYMBOL' 775) #(952 'T000' 779) #(952 'TAB' 780) #(952 'TABBED' 781) #(952 'TABLE' 782) #(952 'TABLES' 783) #(952 'TABLEVIEW' 784) #(952 'TABSTRIP' 785) #(952 'TARGET' 786) #(952 'TASK' 787) #(952 'TASKS' 788) #(952 'TEST' 789) #(952 'TESTING' 792) #(952 'TEXT' 793) #(952 'TEXTPOOL' 794) #(952 'THEN' 795) #(952 'THROW' 796) #(952 'TIME' 797) #(952 'TIMES' 798) #(952 'TIMESTAMP' 799) #(952 'TIMEZONE' 800) #(952 'TITLE' 801) #(952 'TITLEBAR' 802) #(952 'TO' 803) #(952 'TOKENIZATION' 804) #(952 'TOKENS' 805) #(952 'TRAILING' 810) #(952 'TRANSACTION' 811) #(952 'TRANSFER' 812) #(952 'TRANSFORMATION' 813) #(952 'TRANSLATE' 814) #(952 'TRANSPORTING' 815) #(952 'TRMAC' 816) #(952 'TRUNCATION' 817) #(952 'TRY' 818) #(952 'TYPE' 819) #(952 'TYPES' 822) #(952 'ULINE' 823) #(952 'UNASSIGN' 824) #(952 'UNDER' 825) #(952 'UNICODE' 826) #(952 'UNION' 827) #(952 'UNIQUE' 828) #(952 'UNIT' 829) #(952 'UNIX' 830) #(952 'UNPACK' 831) #(952 'UNTIL' 832) #(952 'UNWIND' 833) #(952 'UP' 834) #(952 'UPDATE' 835) #(952 'UPPER' 836) #(952 'USER' 837) #(952 'USING' 839) #(952 'UTCLONG' 840) #(952 'UUID' 884) #(952 'VALID' 842) #(952 'VALIDATE' 843) #(952 'VALUE' 844) #(952 'VALUES' 846) #(952 'VARY' 847) #(952 'VARYING' 848) #(952 'VERSION' 849) #(952 'VIA' 850) #(952 'VISIBLE' 851) #(952 'WAIT' 852) #(952 'WHEN' 853) #(952 'WHERE' 854) #(952 'WHILE' 855) #(952 'WIDTH' 856) #(952 'WINDOW' 857) #(952 'WINDOWS' 858) #(952 'WITH' 859) #(952 'WITHOUT' 862) #(952 'WORD' 863) #(952 'WORK' 864) #(952 'WORKSPACE' 865) #(952 'WRITE' 866) #(952 'WRITER' 867) #(952 'XML' 868) #(952 'XSD' 869) #(952 'XSDBOOL' 870) #(952 'YES' 871) #(952 'YYMMDD' 872) #(952 'ZERO' 874) #(952 'ZONE' 875) #(894 '%_FINAL' 2) #(894 '%_HINTS' 3) #(894 '%_PREDEFINED' 4) #(894 'ABS' 876) #(894 'ABSTRACT' 33) #(894 'ACCEPT' 34) #(894 'ACCEPTING' 35) #(894 'ACCESS' 36) #(894 'ACCORDING' 37) #(894 'ACTION' 38) #(894 'ACTIVATION' 39) #(894 'ACTUAL' 40) #(894 'ADABAS' 41) #(894 'ADD' 42) #(894 'ADJACENT' 44) #(894 'ALIAS' 45) #(894 'ALIASES' 46) #(894 'ALIGN' 47) #(894 'ALL' 48) #(894 'ALLOCATE' 49) #(894 'ALPHA' 50) #(894 'AMDP' 51) #(894 'ANALYSIS' 52) #(894 'ANALYZER' 53) #(894 'AND' 54) #(894 'ANY' 55) #(894 'APPEND' 56) #(894 'APPENDING' 57) #(894 'APPLICATION' 58) #(894 'ARCHIVE' 59) #(894 'AREA' 60) #(894 'ARITHMETIC' 61) #(894 'AS' 62) #(894 'AS400' 63) #(894 'ASCENDING' 64) #(894 'ASSERT' 65) #(894 'ASSIGN' 66) #(894 'ASSIGNED' 67) #(894 'ASSIGNING' 68) #(894 'ASSOCIATION' 69) #(894 'ASYNCHRONOUS' 70) #(894 'AT' 71) #(894 'ATTRIBUTES' 72) #(894 'AUGMENTING' 73) #(894 'AUTHORITY' 74) #(894 'AUTHORIZATION' 76) #(894 'AUTO' 77) #(894 'AVG' 78) #(894 'BACK' 79) #(894 'BACKGROUND' 80) #(894 'BACKWARD' 81) #(894 'BADI' 82) #(894 'BASE' 83) #(894 'BEFORE' 84) #(894 'BEGIN' 85) #(894 'BEHAVIOR' 86) #(894 'BETWEEN' 87) #(894 'BINARY' 88) #(894 'BIT' 89) #(894 'BLANK' 94) #(894 'BLANKS' 95) #(894 'BLOCK' 96) #(894 'BLOCKS' 97) #(894 'BOOLC' 98) #(894 'BOUND' 99) #(894 'BOUNDARIES' 100) #(894 'BOUNDS' 101) #(894 'BOXED' 102) #(894 'BREAK' 103) #(894 'BUFFER' 105) #(894 'BY' 106) #(894 'BYPASSING' 107) #(894 'BYTE' 108) #(894 'CA' 116) #(894 'CALL' 117) #(894 'CALLING' 118) #(894 'CASE' 119) #(894 'CAST' 120) #(894 'CASTING' 121) #(894 'CATCH' 122) #(894 'CDS' 123) #(894 'CEIL' 877) #(894 'CENTER' 124) #(894 'CENTERED' 125) #(894 'CHAIN' 126) #(894 'CHANGE' 129) #(894 'CHANGING' 130) #(894 'CHANNELS' 131) #(894 'CHAR' 132) #(894 'CHARACTER' 134) #(894 'CHECK' 135) #(894 'CHECKBOX' 136) #(894 'CID' 137) #(894 'CIRCULAR' 138) #(894 'CLASS' 139) #(894 'CLEANUP' 143) #(894 'CLEAR' 144) #(894 'CLIENT' 145) #(894 'CLIENTS' 146) #(894 'CLOCK' 147) #(894 'CLONE' 148) #(894 'CLOSE' 149) #(894 'CN' 150) #(894 'CO' 151) #(894 'COALESCE' 878) #(894 'CODE' 152) #(894 'COLLECT' 153) #(894 'COLOR' 154) #(894 'COLUMN' 155) #(894 'COLUMNS' 156) #(894 'COL_BACKGROUND' 157) #(894 'COL_GROUP' 158) #(894 'COL_HEADING' 159) #(894 'COL_KEY' 160) #(894 'COL_NEGATIVE' 161) #(894 'COL_NORMAL' 162) #(894 'COL_POSITIVE' 163) #(894 'COL_TOTAL' 164) #(894 'COMMENT' 165) #(894 'COMMENTS' 166) #(894 'COMMIT' 167) #(894 'COMMON' 168) #(894 'COMMUNICATION' 169) #(894 'COMPARING' 170) #(894 'COMPONENT' 171) #(894 'COMPONENTS' 172) #(894 'COMPRESSION' 173) #(894 'COMPUTE' 174) #(894 'CONCAT' 879) #(894 'CONCATENATE' 175) #(894 'CONCAT_WITH_SPACE' 880) #(894 'COND' 176) #(894 'CONDENSE' 177) #(894 'CONDITION' 178) #(894 'CONNECTION' 179) #(894 'CONSTANT' 180) #(894 'CONSTANTS' 181) #(894 'CONTEXT' 182) #(894 'CONTEXTS' 183) #(894 'CONTINUE' 184) #(894 'CONTROL' 185) #(894 'CONTROLS' 186) #(894 'CONV' 187) #(894 'CONVERSION' 188) #(894 'CONVERT' 189) #(894 'COPIES' 190) #(894 'COPY' 191) #(894 'CORRESPONDING' 192) #(894 'COUNT' 193) #(894 'COUNTRY' 194) #(894 'COVER' 195) #(894 'CP' 196) #(894 'CPI' 197) #(894 'CREATE' 198) #(894 'CRITICAL' 199) #(894 'CS' 200) #(894 'CURRENCY' 201) #(894 'CURRENT' 202) #(894 'CURSOR' 203) #(894 'DANGEROUS' 205) #(894 'DATA' 206) #(894 'DATABASE' 207) #(894 'DATAINFO' 208) #(894 'DATASET' 209) #(894 'DATE' 210) #(894 'DAYLIGHT' 211) #(894 'DB2' 212) #(894 'DB6' 213) #(894 'DDL' 216) #(894 'DDMMYY' 217) #(894 'DEALLOCATE' 218) #(894 'DEC' 219) #(894 'DECIMALS' 220) #(894 'DECLARATIONS' 221) #(894 'DEEP' 222) #(894 'DEFAULT' 223) #(894 'DEFERRED' 224) #(894 'DEFINE' 225) #(894 'DEFINITION' 226) #(894 'DELETE' 227) #(894 'DELETING' 228) #(894 'DEMAND' 229) #(894 'DEPARTMENT' 230) #(894 'DESCENDING' 231) #(894 'DESCRIBE' 232) #(894 'DESTINATION' 233) #(894 'DETAIL' 234) #(894 'DETERMINATION' 235) #(894 'DETERMINE' 236) #(894 'DIALOG' 237) #(894 'DID' 238) #(894 'DIRECTORY' 239) #(894 'DISCARDING' 240) #(894 'DISPLAY' 241) #(894 'DISTANCE' 243) #(894 'DISTINCT' 244) #(894 'DIV' 245) #(894 'DIVIDE' 246) #(894 'DO' 247) #(894 'DUMMY' 248) #(894 'DUPLICATE' 249) #(894 'DUPLICATES' 250) #(894 'DURATION' 251) #(894 'DURING' 252) #(894 'DYNPRO' 253) #(894 'EARLY' 254) #(894 'EDIT' 255) #(894 'ELSE' 257) #(894 'ELSEIF' 258) #(894 'EMPTY' 259) #(894 'ENABLED' 260) #(894 'ENABLING' 261) #(894 'ENCODING' 262) #(894 'END' 263) #(894 'ENDAT' 270) #(894 'ENDCASE' 271) #(894 'ENDCATCH' 272) #(894 'ENDCHAIN' 273) #(894 'ENDCLASS' 274) #(894 'ENDDO' 275) #(894 'ENDENHANCEMENT' 276) #(894 'ENDEXEC' 277) #(894 'ENDFORM' 278) #(894 'ENDFUNCTION' 279) #(894 'ENDIAN' 280) #(894 'ENDIF' 281) #(894 'ENDING' 282) #(894 'ENDINTERFACE' 283) #(894 'ENDLOOP' 284) #(894 'ENDMETHOD' 285) #(894 'ENDMODULE' 286) #(894 'ENDON' 287) #(894 'ENDPROVIDE' 288) #(894 'ENDSELECT' 289) #(894 'ENDTRY' 290) #(894 'ENDWHILE' 291) #(894 'ENDWITH' 292) #(894 'ENGINEERING' 293) #(894 'ENHANCEMENT' 294) #(894 'ENHANCEMENTS' 297) #(894 'ENTITIES' 298) #(894 'ENTITY' 299) #(894 'ENTRIES' 300) #(894 'ENTRY' 301) #(894 'ENUM' 302) #(894 'ENVIRONMENT' 303) #(894 'EQ' 304) #(894 'EQUIV' 305) #(894 'ERRORS' 306) #(894 'ESCAPE' 307) #(894 'ESCAPING' 308) #(894 'EVENT' 309) #(894 'EVENTS' 310) #(894 'EXACT' 311) #(894 'EXCEPT' 312) #(894 'EXCEPTION' 313) #(894 'EXCEPTIONS' 315) #(894 'EXCLUDE' 316) #(894 'EXCLUDING' 317) #(894 'EXEC' 318) #(894 'EXECUTE' 319) #(894 'EXISTS' 320) #(894 'EXIT' 321) #(894 'EXPANDING' 323) #(894 'EXPIRATION' 324) #(894 'EXPLICIT' 325) #(894 'EXPONENT' 326) #(894 'EXPORT' 327) #(894 'EXPORTING' 328) #(894 'EXTENDED' 329) #(894 'EXTENSION' 330) #(894 'EXTRACT' 331) #(894 'FAIL' 332) #(894 'FAILED' 333) #(894 'FEATURES' 334) #(894 'FETCH' 335) #(894 'FIELD' 336) #(894 'FIELDS' 340) #(894 'FILE' 341) #(894 'FILL' 342) #(894 'FILTER' 343) #(894 'FILTERS' 344) #(894 'FINAL' 345) #(894 'FIND' 346) #(894 'FIRST' 347) #(894 'FLOOR' 881) #(894 'FLTP' 350) #(894 'FLUSH' 351) #(894 'FONT' 352) #(894 'FOR' 353) #(894 'FORM' 354) #(894 'FORMAT' 355) #(894 'FORWARD' 356) #(894 'FOUND' 357) #(894 'FRAME' 358) #(894 'FRAMES' 359) #(894 'FREE' 360) #(894 'FRIENDS' 361) #(894 'FROM' 362) #(894 'FULL' 363) #(894 'FUNCTION' 364) #(894 'FURTHER' 366) #(894 'GE' 367) #(894 'GENERATE' 368) #(894 'GET' 369) #(894 'GIVING' 370) #(894 'GLOBAL' 371) #(894 'GRAPH' 372) #(894 'GROUP' 373) #(894 'GROUPS' 374) #(894 'GT' 375) #(894 'HANDLE' 376) #(894 'HANDLER' 377) #(894 'HARMLESS' 378) #(894 'HASHED' 379) #(894 'HAVING' 380) #(894 'HDB' 381) #(894 'HEADER' 382) #(894 'HEADERS' 383) #(894 'HEADING' 384) #(894 'HIDE' 387) #(894 'HIERARCHY' 388) #(894 'HIGH' 389) #(894 'HINT' 390) #(894 'HOLD' 391) #(894 'HOTSPOT' 392) #(894 'ICON' 393) #(894 'ID' 394) #(894 'IDENTIFICATION' 395) #(894 'IDENTIFIER' 396) #(894 'IDS' 397) #(894 'IF' 398) #(894 'IGNORE' 399) #(894 'IGNORING' 400) #(894 'IMMEDIATELY' 401) #(894 'IMPLEMENTATION' 402) #(894 'IMPLEMENTED' 403) #(894 'IMPLICIT' 404) #(894 'IMPORT' 405) #(894 'IMPORTING' 406) #(894 'IN' 407) #(894 'INACTIVE' 408) #(894 'INCL' 409) #(894 'INCLUDE' 410) #(894 'INCLUDES' 411) #(894 'INCREMENT' 412) #(894 'INDEX' 413) #(894 'INFORMIX' 415) #(894 'INFOTYPES' 416) #(894 'INHERITING' 417) #(894 'INIT' 418) #(894 'INITIAL' 419) #(894 'INITIALIZATION' 420) #(894 'INNER' 421) #(894 'INPUT' 422) #(894 'INSERT' 423) #(894 'INSTANCE' 424) #(894 'INSTANCES' 425) #(894 'INT2' 426) #(894 'INT4' 427) #(894 'INT8' 428) #(894 'INTENSIFIED' 429) #(894 'INTERFACE' 430) #(894 'INTERFACES' 431) #(894 'INTERNAL' 432) #(894 'INTERVALS' 433) #(894 'INTO' 434) #(894 'INVERSE' 435) #(894 'IS' 437) #(894 'ISO' 438) #(894 'JOB' 439) #(894 'JOIN' 440) #(894 'KEEP' 441) #(894 'KEEPING' 442) #(894 'KERNEL' 443) #(894 'KEY' 444) #(894 'KEYS' 445) #(894 'KEYWORDS' 446) #(894 'KIND' 447) #(894 'LANGUAGE' 448) #(894 'LAST' 449) #(894 'LATE' 450) #(894 'LAYOUT' 451) #(894 'LE' 452) #(894 'LEADING' 453) #(894 'LEAVE' 454) #(894 'LEFT' 455) #(894 'LEFTPLUS' 457) #(894 'LEFTSPACE' 458) #(894 'LEGACY' 459) #(894 'LENGTH' 460) #(894 'LET' 461) #(894 'LEVEL' 462) #(894 'LEVELS' 463) #(894 'LIKE' 464) #(894 'LINE' 465) #(894 'LINEFEED' 469) #(894 'LINES' 470) #(894 'LINK' 471) #(894 'LIST' 472) #(894 'LISTBOX' 474) #(894 'LOAD' 475) #(894 'LOCAL' 477) #(894 'LOCALE' 478) #(894 'LOCK' 479) #(894 'LOCKS' 480) #(894 'LOGFILE' 482) #(894 'LOGICAL' 483) #(894 'LONG' 484) #(894 'LOOP' 485) #(894 'LOW' 486) #(894 'LOWER' 487) #(894 'LPI' 488) #(894 'LT' 489) #(894 'LTRIM' 882) #(894 'MAIN' 491) #(894 'MAPPED' 492) #(894 'MAPPING' 493) #(894 'MARGIN' 494) #(894 'MARK' 495) #(894 'MASK' 496) #(894 'MATCH' 497) #(894 'MATCHCODE' 498) #(894 'MAX' 499) #(894 'MAXIMUM' 500) #(894 'MEDIUM' 501) #(894 'MEMBERS' 502) #(894 'MEMORY' 503) #(894 'MESH' 504) #(894 'MESSAGE' 505) #(894 'MESSAGES' 507) #(894 'MESSAGING' 508) #(894 'METHOD' 509) #(894 'METHODS' 510) #(894 'MIN' 511) #(894 'MMDDYY' 514) #(894 'MOD' 515) #(894 'MODE' 516) #(894 'MODIF' 517) #(894 'MODIFIER' 518) #(894 'MODIFY' 519) #(894 'MODULE' 520) #(894 'MOVE' 521) #(894 'MSSQLNT' 523) #(894 'MULTIPLY' 524) #(894 'NA' 526) #(894 'NAME' 527) #(894 'NAMETAB' 528) #(894 'NATIVE' 529) #(894 'NE' 530) #(894 'NESTED' 531) #(894 'NESTING' 532) #(894 'NEW' 533) #(894 'NEXT' 537) #(894 'NO' 538) #(894 'NODES' 550) #(894 'NOT' 553) #(894 'NP' 554) #(894 'NS' 555) #(894 'NULL' 556) #(894 'NUMBER' 557) #(894 'NUMBERING' 558) #(894 'NUMC' 559) #(894 'OBJECT' 561) #(894 'OBJECTS' 562) #(894 'OBJMGR' 563) #(894 'OBLIGATORY' 564) #(894 'OCCURENCE' 565) #(894 'OCCURENCES' 566) #(894 'OCCURRENCE' 567) #(894 'OCCURRENCES' 568) #(894 'OCCURS' 569) #(894 'OF' 570) #(894 'OFF' 571) #(894 'OFFSET' 572) #(894 'ON' 573) #(894 'ONE' 574) #(894 'ONLY' 575) #(894 'OPEN' 576) #(894 'OPTION' 577) #(894 'OPTIONAL' 578) #(894 'OPTIONS' 579) #(894 'OR' 580) #(894 'ORACLE' 581) #(894 'ORDER' 582) #(894 'OTHERS' 583) #(894 'OUT' 584) #(894 'OUTER' 585) #(894 'OUTPUT' 586) #(894 'OVERFLOW' 588) #(894 'OVERLAY' 589) #(894 'PACK' 590) #(894 'PACKAGE' 591) #(894 'PAD' 592) #(894 'PADDING' 593) #(894 'PAGE' 594) #(894 'PAGES' 595) #(894 'PARAMETER' 596) #(894 'PARAMETERS' 598) #(894 'PART' 599) #(894 'PARTIALLY' 600) #(894 'PCRE' 601) #(894 'PERCENTAGE' 602) #(894 'PERFORM' 603) #(894 'PERFORMING' 604) #(894 'PERMISSIONS' 605) #(894 'PLACES' 607) #(894 'POOL' 608) #(894 'POSITION' 609) #(894 'POS_HIGH' 610) #(894 'POS_LOW' 611) #(894 'PRAGMAS' 612) #(894 'PRECHECK' 613) #(894 'PRECOMPILED' 614) #(894 'PREFERRED' 615) #(894 'PRESERVING' 616) #(894 'PRIMARY' 617) #(894 'PRINT' 618) #(894 'PRIVATE' 620) #(894 'PRIVILEGED' 621) #(894 'PROCEDURE' 622) #(894 'PROGRAM' 623) #(894 'PROPERTY' 624) #(894 'PROTECTED' 625) #(894 'PROVIDE' 626) #(894 'PUBLIC' 627) #(894 'PUSH' 628) #(894 'PUSHBUTTON' 629) #(894 'PUT' 630) #(894 'QUEUEONLY' 632) #(894 'QUICKINFO' 633) #(894 'RADIOBUTTON' 634) #(894 'RAISE' 635) #(894 'RAISING' 636) #(894 'RANGE' 637) #(894 'RANGES' 638) #(894 'RAW' 639) #(894 'READ' 640) #(894 'RECEIVE' 642) #(894 'RECEIVED' 643) #(894 'RECEIVER' 644) #(894 'RECEIVING' 645) #(894 'REDEFINITION' 646) #(894 'REDUCE' 647) #(894 'REF' 648) #(894 'REFERENCE' 649) #(894 'REFRESH' 650) #(894 'REGEX' 651) #(894 'REJECT' 652) #(894 'RELATING' 653) #(894 'RENAMING' 654) #(894 'REPLACE' 655) #(894 'REPLACEMENT' 656) #(894 'REPLACING' 657) #(894 'REPORT' 658) #(894 'REPORTED' 659) #(894 'REQUEST' 660) #(894 'REQUESTED' 661) #(894 'REQUIRED' 662) #(894 'RESERVE' 663) #(894 'RESET' 664) #(894 'RESOLUTION' 665) #(894 'RESPECTING' 666) #(894 'RESPONSE' 667) #(894 'RESPONSES' 668) #(894 'RESULT' 669) #(894 'RESULTS' 670) #(894 'RESUMABLE' 671) #(894 'RESUME' 672) #(894 'RETRY' 673) #(894 'RETURN' 674) #(894 'RETURNCODE' 675) #(894 'RETURNING' 676) #(894 'RIGHT' 677) #(894 'RIGHTPLUS' 679) #(894 'RIGHTSPACE' 680) #(894 'RISK' 681) #(894 'ROLLBACK' 682) #(894 'ROUND' 683) #(894 'ROWS' 684) #(894 'RTRIM' 883) #(894 'RUN' 685) #(894 'SAP' 686) #(894 'SAVE' 688) #(894 'SAVING' 689) #(894 'SCALE_PRESERVING' 690) #(894 'SCALE_PRESERVING_SCIENTIFIC' 691) #(894 'SCAN' 692) #(894 'SCIENTIFIC' 693) #(894 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(894 'SCREEN' 695) #(894 'SCROLL' 696) #(894 'SCROLLING' 698) #(894 'SEARCH' 699) #(894 'SECONDARY' 700) #(894 'SECONDS' 701) #(894 'SECTION' 702) #(894 'SELECT' 703) #(894 'SELECTION' 705) #(894 'SELECTIONS' 710) #(894 'SEND' 711) #(894 'SEPARATE' 712) #(894 'SEPARATED' 713) #(894 'SESSION' 714) #(894 'SET' 715) #(894 'SHARED' 716) #(894 'SHIFT' 717) #(894 'SHORT' 718) #(894 'SHORTDUMP' 719) #(894 'SIGN' 721) #(894 'SIGN_AS_POSTFIX' 722) #(894 'SIMPLE' 723) #(894 'SIMULATION' 724) #(894 'SINGLE' 725) #(894 'SIZE' 726) #(894 'SKIP' 727) #(894 'SKIPPING' 728) #(894 'SMART' 729) #(894 'SOME' 730) #(894 'SORT' 731) #(894 'SORTABLE' 732) #(894 'SORTED' 733) #(894 'SOURCE' 734) #(894 'SPACE' 735) #(894 'SPECIFIED' 736) #(894 'SPLIT' 737) #(894 'SPOOL' 738) #(894 'SPOTS' 739) #(894 'SQL' 740) #(894 'SQLSCRIPT' 741) #(894 'STABLE' 742) #(894 'STAMP' 743) #(894 'STANDARD' 744) #(894 'STARTING' 746) #(894 'STATE' 747) #(894 'STATEMENT' 748) #(894 'STATEMENTS' 749) #(894 'STATIC' 750) #(894 'STATICS' 751) #(894 'STATUSINFO' 752) #(894 'STEP' 753) #(894 'STOP' 755) #(894 'STRUCTURE' 756) #(894 'STRUCTURES' 757) #(894 'STYLE' 758) #(894 'SUBKEY' 759) #(894 'SUBMATCHES' 760) #(894 'SUBMIT' 761) #(894 'SUBROUTINE' 762) #(894 'SUBSCREEN' 763) #(894 'SUBSTRING' 764) #(894 'SUBTRACT' 765) #(894 'SUFFIX' 767) #(894 'SUM' 768) #(894 'SUMMARY' 769) #(894 'SUPPLIED' 770) #(894 'SUPPLY' 771) #(894 'SUPPRESS' 772) #(894 'SWITCH' 773) #(894 'SYBASE' 774) #(894 'SYMBOL' 775) #(894 'T000' 779) #(894 'TAB' 780) #(894 'TABBED' 781) #(894 'TABLE' 782) #(894 'TABLES' 783) #(894 'TABLEVIEW' 784) #(894 'TABSTRIP' 785) #(894 'TARGET' 786) #(894 'TASK' 787) #(894 'TASKS' 788) #(894 'TEST' 789) #(894 'TESTING' 792) #(894 'TEXT' 793) #(894 'TEXTPOOL' 794) #(894 'THEN' 795) #(894 'THROW' 796) #(894 'TIME' 797) #(894 'TIMES' 798) #(894 'TIMESTAMP' 799) #(894 'TIMEZONE' 800) #(894 'TITLE' 801) #(894 'TITLEBAR' 802) #(894 'TO' 803) #(894 'TOKENIZATION' 804) #(894 'TOKENS' 805) #(894 'TRAILING' 810) #(894 'TRANSACTION' 811) #(894 'TRANSFER' 812) #(894 'TRANSFORMATION' 813) #(894 'TRANSLATE' 814) #(894 'TRANSPORTING' 815) #(894 'TRMAC' 816) #(894 'TRUNCATION' 817) #(894 'TRY' 818) #(894 'TYPE' 819) #(894 'TYPES' 822) #(894 'ULINE' 823) #(894 'UNASSIGN' 824) #(894 'UNDER' 825) #(894 'UNICODE' 826) #(894 'UNION' 827) #(894 'UNIQUE' 828) #(894 'UNIT' 829) #(894 'UNIX' 830) #(894 'UNPACK' 831) #(894 'UNTIL' 832) #(894 'UNWIND' 833) #(894 'UP' 834) #(894 'UPDATE' 835) #(894 'UPPER' 836) #(894 'USER' 837) #(894 'USING' 839) #(894 'UTCLONG' 840) #(894 'UUID' 884) #(894 'VALID' 842) #(894 'VALIDATE' 843) #(894 'VALUE' 844) #(894 'VALUES' 846) #(894 'VARY' 847) #(894 'VARYING' 848) #(894 'VERSION' 849) #(894 'VIA' 850) #(894 'VISIBLE' 851) #(894 'WAIT' 852) #(894 'WHEN' 853) #(894 'WHERE' 854) #(894 'WHILE' 855) #(894 'WIDTH' 856) #(894 'WINDOW' 857) #(894 'WINDOWS' 858) #(894 'WITH' 859) #(894 'WITHOUT' 862) #(894 'WORD' 863) #(894 'WORK' 864) #(894 'WORKSPACE' 865) #(894 'WRITE' 866) #(894 'WRITER' 867) #(894 'XML' 868) #(894 'XSD' 869) #(894 'XSDBOOL' 870) #(894 'YES' 871) #(894 'YYMMDD' 872) #(894 'ZERO' 874) #(894 'ZONE' 875) #(933 'ABS' 876) #(933 'ABSTRACT' 33) #(933 'ACCEPT' 34) #(933 'ACCEPTING' 35) #(933 'ACCESS' 36) #(933 'ACCORDING' 37) #(933 'ACTION' 38) #(933 'ACTIVATION' 39) #(933 'ACTUAL' 40) #(933 'ADABAS' 41) #(933 'ADD' 42) #(933 'ADJACENT' 44) #(933 'ALIAS' 45) #(933 'ALIASES' 46) #(933 'ALIGN' 47) #(933 'ALL' 48) #(933 'ALLOCATE' 49) #(933 'ALPHA' 50) #(933 'AMDP' 51) #(933 'ANALYSIS' 52) #(933 'ANALYZER' 53) #(933 'AND' 54) #(933 'ANY' 55) #(933 'APPEND' 56) #(933 'APPENDING' 57) #(933 'APPLICATION' 58) #(933 'ARCHIVE' 59) #(933 'AREA' 60) #(933 'ARITHMETIC' 61) #(933 'AS' 62) #(933 'AS400' 63) #(933 'ASCENDING' 64) #(933 'ASSERT' 65) #(933 'ASSIGN' 66) #(933 'ASSIGNED' 67) #(933 'ASSIGNING' 68) #(933 'ASSOCIATION' 69) #(933 'ASYNCHRONOUS' 70) #(933 'AT' 71) #(933 'ATTRIBUTES' 72) #(933 'AUGMENTING' 73) #(933 'AUTHORITY' 74) #(933 'AUTHORIZATION' 76) #(933 'AUTO' 77) #(933 'AVG' 78) #(933 'BACK' 79) #(933 'BACKGROUND' 80) #(933 'BACKWARD' 81) #(933 'BADI' 82) #(933 'BASE' 83) #(933 'BEFORE' 84) #(933 'BEGIN' 85) #(933 'BEHAVIOR' 86) #(933 'BETWEEN' 87) #(933 'BINARY' 88) #(933 'BIT' 89) #(933 'BLANK' 94) #(933 'BLANKS' 95) #(933 'BLOCK' 96) #(933 'BLOCKS' 97) #(933 'BOOLC' 98) #(933 'BOUND' 99) #(933 'BOUNDARIES' 100) #(933 'BOUNDS' 101) #(933 'BOXED' 102) #(933 'BREAK' 103) #(933 'BUFFER' 105) #(933 'BY' 106) #(933 'BYPASSING' 107) #(933 'BYTE' 108) #(933 'CA' 116) #(933 'CALL' 117) #(933 'CALLING' 118) #(933 'CASE' 119) #(933 'CAST' 120) #(933 'CASTING' 121) #(933 'CATCH' 122) #(933 'CDS' 123) #(933 'CEIL' 877) #(933 'CENTER' 124) #(933 'CENTERED' 125) #(933 'CHAIN' 126) #(933 'CHANGE' 129) #(933 'CHANGING' 130) #(933 'CHANNELS' 131) #(933 'CHAR' 132) #(933 'CHARACTER' 134) #(933 'CHECK' 135) #(933 'CHECKBOX' 136) #(933 'CID' 137) #(933 'CIRCULAR' 138) #(933 'CLASS' 139) #(933 'CLEANUP' 143) #(933 'CLEAR' 144) #(933 'CLIENT' 145) #(933 'CLIENTS' 146) #(933 'CLOCK' 147) #(933 'CLONE' 148) #(933 'CLOSE' 149) #(933 'CN' 150) #(933 'CO' 151) #(933 'COALESCE' 878) #(933 'CODE' 152) #(933 'COLLECT' 153) #(933 'COLOR' 154) #(933 'COLUMN' 155) #(933 'COLUMNS' 156) #(933 'COL_BACKGROUND' 157) #(933 'COL_GROUP' 158) #(933 'COL_HEADING' 159) #(933 'COL_KEY' 160) #(933 'COL_NEGATIVE' 161) #(933 'COL_NORMAL' 162) #(933 'COL_POSITIVE' 163) #(933 'COL_TOTAL' 164) #(933 'COMMENT' 165) #(933 'COMMENTS' 166) #(933 'COMMIT' 167) #(933 'COMMON' 168) #(933 'COMMUNICATION' 169) #(933 'COMPARING' 170) #(933 'COMPONENT' 171) #(933 'COMPONENTS' 172) #(933 'COMPRESSION' 173) #(933 'COMPUTE' 174) #(933 'CONCAT' 879) #(933 'CONCATENATE' 175) #(933 'CONCAT_WITH_SPACE' 880) #(933 'COND' 176) #(933 'CONDENSE' 177) #(933 'CONDITION' 178) #(933 'CONNECTION' 179) #(933 'CONSTANT' 180) #(933 'CONSTANTS' 181) #(933 'CONTEXT' 182) #(933 'CONTEXTS' 183) #(933 'CONTINUE' 184) #(933 'CONTROL' 185) #(933 'CONTROLS' 186) #(933 'CONV' 187) #(933 'CONVERSION' 188) #(933 'CONVERT' 189) #(933 'COPIES' 190) #(933 'COPY' 191) #(933 'CORRESPONDING' 192) #(933 'COUNT' 193) #(933 'COUNTRY' 194) #(933 'COVER' 195) #(933 'CP' 196) #(933 'CPI' 197) #(933 'CREATE' 198) #(933 'CRITICAL' 199) #(933 'CS' 200) #(933 'CURRENCY' 201) #(933 'CURRENT' 202) #(933 'CURSOR' 203) #(933 'DANGEROUS' 205) #(933 'DATA' 206) #(933 'DATABASE' 207) #(933 'DATAINFO' 208) #(933 'DATASET' 209) #(933 'DATE' 210) #(933 'DAYLIGHT' 211) #(933 'DB2' 212) #(933 'DB6' 213) #(933 'DDL' 216) #(933 'DDMMYY' 217) #(933 'DEALLOCATE' 218) #(933 'DEC' 219) #(933 'DECIMALS' 220) #(933 'DECLARATIONS' 221) #(933 'DEEP' 222) #(933 'DEFAULT' 223) #(933 'DEFERRED' 224) #(933 'DEFINE' 225) #(933 'DEFINITION' 226) #(933 'DELETE' 227) #(933 'DELETING' 228) #(933 'DEMAND' 229) #(933 'DEPARTMENT' 230) #(933 'DESCENDING' 231) #(933 'DESCRIBE' 232) #(933 'DESTINATION' 233) #(933 'DETAIL' 234) #(933 'DETERMINATION' 235) #(933 'DETERMINE' 236) #(933 'DIALOG' 237) #(933 'DID' 238) #(933 'DIRECTORY' 239) #(933 'DISCARDING' 240) #(933 'DISPLAY' 241) #(933 'DISTANCE' 243) #(933 'DISTINCT' 244) #(933 'DIV' 245) #(933 'DIVIDE' 246) #(933 'DO' 247) #(933 'DUMMY' 248) #(933 'DUPLICATE' 249) #(933 'DUPLICATES' 250) #(933 'DURATION' 251) #(933 'DURING' 252) #(933 'DYNPRO' 253) #(933 'EARLY' 254) #(933 'EDIT' 255) #(933 'ELSE' 257) #(933 'ELSEIF' 258) #(933 'EMPTY' 259) #(933 'ENABLED' 260) #(933 'ENABLING' 261) #(933 'ENCODING' 262) #(933 'END' 263) #(933 'ENDAT' 270) #(933 'ENDCASE' 271) #(933 'ENDCATCH' 272) #(933 'ENDCHAIN' 273) #(933 'ENDCLASS' 274) #(933 'ENDDO' 275) #(933 'ENDENHANCEMENT' 276) #(933 'ENDEXEC' 277) #(933 'ENDFORM' 278) #(933 'ENDFUNCTION' 279) #(933 'ENDIAN' 280) #(933 'ENDIF' 281) #(933 'ENDING' 282) #(933 'ENDINTERFACE' 283) #(933 'ENDLOOP' 284) #(933 'ENDMETHOD' 285) #(933 'ENDMODULE' 286) #(933 'ENDON' 287) #(933 'ENDPROVIDE' 288) #(933 'ENDSELECT' 289) #(933 'ENDTRY' 290) #(933 'ENDWHILE' 291) #(933 'ENDWITH' 292) #(933 'ENGINEERING' 293) #(933 'ENHANCEMENT' 294) #(933 'ENHANCEMENTS' 297) #(933 'ENTITIES' 298) #(933 'ENTITY' 299) #(933 'ENTRIES' 300) #(933 'ENTRY' 301) #(933 'ENUM' 302) #(933 'ENVIRONMENT' 303) #(933 'EQ' 304) #(933 'EQUIV' 305) #(933 'ERRORS' 306) #(933 'ESCAPE' 307) #(933 'ESCAPING' 308) #(933 'EVENT' 309) #(933 'EVENTS' 310) #(933 'EXACT' 311) #(933 'EXCEPT' 312) #(933 'EXCEPTION' 313) #(933 'EXCEPTIONS' 315) #(933 'EXCLUDE' 316) #(933 'EXCLUDING' 317) #(933 'EXEC' 318) #(933 'EXECUTE' 319) #(933 'EXISTS' 320) #(933 'EXIT' 321) #(933 'EXPANDING' 323) #(933 'EXPIRATION' 324) #(933 'EXPLICIT' 325) #(933 'EXPONENT' 326) #(933 'EXPORT' 327) #(933 'EXPORTING' 328) #(933 'EXTENDED' 329) #(933 'EXTENSION' 330) #(933 'EXTRACT' 331) #(933 'FAIL' 332) #(933 'FAILED' 333) #(933 'FEATURES' 334) #(933 'FETCH' 335) #(933 'FIELD' 336) #(933 'FIELDS' 340) #(933 'FILE' 341) #(933 'FILL' 342) #(933 'FILTER' 343) #(933 'FILTERS' 344) #(933 'FINAL' 345) #(933 'FIND' 346) #(933 'FIRST' 347) #(933 'FLOOR' 881) #(933 'FLTP' 350) #(933 'FLUSH' 351) #(933 'FONT' 352) #(933 'FOR' 353) #(933 'FORM' 354) #(933 'FORMAT' 355) #(933 'FORWARD' 356) #(933 'FOUND' 357) #(933 'FRAME' 358) #(933 'FRAMES' 359) #(933 'FREE' 360) #(933 'FRIENDS' 361) #(933 'FROM' 362) #(933 'FULL' 363) #(933 'FUNCTION' 364) #(933 'FURTHER' 366) #(933 'GE' 367) #(933 'GENERATE' 368) #(933 'GET' 369) #(933 'GIVING' 370) #(933 'GLOBAL' 371) #(933 'GRAPH' 372) #(933 'GROUP' 373) #(933 'GROUPS' 374) #(933 'GT' 375) #(933 'HANDLE' 376) #(933 'HANDLER' 377) #(933 'HARMLESS' 378) #(933 'HASHED' 379) #(933 'HAVING' 380) #(933 'HDB' 381) #(933 'HEADER' 382) #(933 'HEADERS' 383) #(933 'HEADING' 384) #(933 'HIDE' 387) #(933 'HIERARCHY' 388) #(933 'HIGH' 389) #(933 'HINT' 390) #(933 'HOLD' 391) #(933 'HOTSPOT' 392) #(933 'ICON' 393) #(933 'ID' 394) #(933 'IDENTIFICATION' 395) #(933 'IDENTIFIER' 396) #(933 'IDS' 397) #(933 'IF' 398) #(933 'IGNORE' 399) #(933 'IGNORING' 400) #(933 'IMMEDIATELY' 401) #(933 'IMPLEMENTATION' 402) #(933 'IMPLEMENTED' 403) #(933 'IMPLICIT' 404) #(933 'IMPORT' 405) #(933 'IMPORTING' 406) #(933 'IN' 407) #(933 'INACTIVE' 408) #(933 'INCL' 409) #(933 'INCLUDE' 410) #(933 'INCLUDES' 411) #(933 'INCREMENT' 412) #(933 'INDEX' 413) #(933 'INFORMIX' 415) #(933 'INFOTYPES' 416) #(933 'INHERITING' 417) #(933 'INIT' 418) #(933 'INITIAL' 419) #(933 'INITIALIZATION' 420) #(933 'INNER' 421) #(933 'INPUT' 422) #(933 'INSERT' 423) #(933 'INSTANCE' 424) #(933 'INSTANCES' 425) #(933 'INT2' 426) #(933 'INT4' 427) #(933 'INT8' 428) #(933 'INTENSIFIED' 429) #(933 'INTERFACE' 430) #(933 'INTERFACES' 431) #(933 'INTERNAL' 432) #(933 'INTERVALS' 433) #(933 'INTO' 434) #(933 'INVERSE' 435) #(933 'IS' 437) #(933 'ISO' 438) #(933 'JOB' 439) #(933 'JOIN' 440) #(933 'KEEP' 441) #(933 'KEEPING' 442) #(933 'KERNEL' 443) #(933 'KEY' 444) #(933 'KEYS' 445) #(933 'KEYWORDS' 446) #(933 'KIND' 447) #(933 'LANGUAGE' 448) #(933 'LAST' 449) #(933 'LATE' 450) #(933 'LAYOUT' 451) #(933 'LE' 452) #(933 'LEADING' 453) #(933 'LEAVE' 454) #(933 'LEFT' 455) #(933 'LEFTPLUS' 457) #(933 'LEFTSPACE' 458) #(933 'LEGACY' 459) #(933 'LENGTH' 460) #(933 'LET' 461) #(933 'LEVEL' 462) #(933 'LEVELS' 463) #(933 'LIKE' 464) #(933 'LINE' 465) #(933 'LINEFEED' 469) #(933 'LINES' 470) #(933 'LINK' 471) #(933 'LIST' 472) #(933 'LISTBOX' 474) #(933 'LOAD' 475) #(933 'LOCAL' 477) #(933 'LOCALE' 478) #(933 'LOCK' 479) #(933 'LOCKS' 480) #(933 'LOGFILE' 482) #(933 'LOGICAL' 483) #(933 'LONG' 484) #(933 'LOOP' 485) #(933 'LOW' 486) #(933 'LOWER' 487) #(933 'LPI' 488) #(933 'LT' 489) #(933 'LTRIM' 882) #(933 'MAIN' 491) #(933 'MAPPED' 492) #(933 'MAPPING' 493) #(933 'MARGIN' 494) #(933 'MARK' 495) #(933 'MASK' 496) #(933 'MATCH' 497) #(933 'MATCHCODE' 498) #(933 'MAX' 499) #(933 'MAXIMUM' 500) #(933 'MEDIUM' 501) #(933 'MEMBERS' 502) #(933 'MEMORY' 503) #(933 'MESH' 504) #(933 'MESSAGE' 505) #(933 'MESSAGES' 507) #(933 'MESSAGING' 508) #(933 'METHOD' 509) #(933 'METHODS' 510) #(933 'MIN' 511) #(933 'MMDDYY' 514) #(933 'MOD' 515) #(933 'MODE' 516) #(933 'MODIF' 517) #(933 'MODIFIER' 518) #(933 'MODIFY' 519) #(933 'MODULE' 520) #(933 'MOVE' 521) #(933 'MSSQLNT' 523) #(933 'MULTIPLY' 524) #(933 'NA' 526) #(933 'NAME' 527) #(933 'NAMETAB' 528) #(933 'NATIVE' 529) #(933 'NE' 530) #(933 'NESTED' 531) #(933 'NESTING' 532) #(933 'NEW' 533) #(933 'NEXT' 537) #(933 'NO' 538) #(933 'NODES' 550) #(933 'NOT' 553) #(933 'NP' 554) #(933 'NS' 555) #(933 'NULL' 556) #(933 'NUMBER' 557) #(933 'NUMBERING' 558) #(933 'NUMC' 559) #(933 'OBJECT' 561) #(933 'OBJECTS' 562) #(933 'OBJMGR' 563) #(933 'OBLIGATORY' 564) #(933 'OCCURENCE' 565) #(933 'OCCURENCES' 566) #(933 'OCCURRENCE' 567) #(933 'OCCURRENCES' 568) #(933 'OCCURS' 569) #(933 'OF' 570) #(933 'OFF' 571) #(933 'OFFSET' 572) #(933 'ON' 573) #(933 'ONE' 574) #(933 'ONLY' 575) #(933 'OPEN' 576) #(933 'OPTION' 577) #(933 'OPTIONAL' 578) #(933 'OPTIONS' 579) #(933 'OR' 580) #(933 'ORACLE' 581) #(933 'ORDER' 582) #(933 'OTHERS' 583) #(933 'OUT' 584) #(933 'OUTER' 585) #(933 'OUTPUT' 586) #(933 'OVERFLOW' 588) #(933 'OVERLAY' 589) #(933 'PACK' 590) #(933 'PACKAGE' 591) #(933 'PAD' 592) #(933 'PADDING' 593) #(933 'PAGE' 594) #(933 'PAGES' 595) #(933 'PARAMETER' 596) #(933 'PARAMETERS' 598) #(933 'PART' 599) #(933 'PARTIALLY' 600) #(933 'PCRE' 601) #(933 'PERCENTAGE' 602) #(933 'PERFORM' 603) #(933 'PERFORMING' 604) #(933 'PERMISSIONS' 605) #(933 'PLACES' 607) #(933 'POOL' 608) #(933 'POSITION' 609) #(933 'POS_HIGH' 610) #(933 'POS_LOW' 611) #(933 'PRAGMAS' 612) #(933 'PRECHECK' 613) #(933 'PRECOMPILED' 614) #(933 'PREFERRED' 615) #(933 'PRESERVING' 616) #(933 'PRIMARY' 617) #(933 'PRINT' 618) #(933 'PRIVATE' 620) #(933 'PRIVILEGED' 621) #(933 'PROCEDURE' 622) #(933 'PROGRAM' 623) #(933 'PROPERTY' 624) #(933 'PROTECTED' 625) #(933 'PROVIDE' 626) #(933 'PUBLIC' 627) #(933 'PUSH' 628) #(933 'PUSHBUTTON' 629) #(933 'PUT' 630) #(933 'QUEUEONLY' 632) #(933 'QUICKINFO' 633) #(933 'RADIOBUTTON' 634) #(933 'RAISE' 635) #(933 'RAISING' 636) #(933 'RANGE' 637) #(933 'RANGES' 638) #(933 'RAW' 639) #(933 'READ' 640) #(933 'RECEIVE' 642) #(933 'RECEIVED' 643) #(933 'RECEIVER' 644) #(933 'RECEIVING' 645) #(933 'REDEFINITION' 646) #(933 'REDUCE' 647) #(933 'REF' 648) #(933 'REFERENCE' 649) #(933 'REFRESH' 650) #(933 'REGEX' 651) #(933 'REJECT' 652) #(933 'RELATING' 653) #(933 'RENAMING' 654) #(933 'REPLACE' 655) #(933 'REPLACEMENT' 656) #(933 'REPLACING' 657) #(933 'REPORT' 658) #(933 'REPORTED' 659) #(933 'REQUEST' 660) #(933 'REQUESTED' 661) #(933 'REQUIRED' 662) #(933 'RESERVE' 663) #(933 'RESET' 664) #(933 'RESOLUTION' 665) #(933 'RESPECTING' 666) #(933 'RESPONSE' 667) #(933 'RESPONSES' 668) #(933 'RESULT' 669) #(933 'RESULTS' 670) #(933 'RESUMABLE' 671) #(933 'RESUME' 672) #(933 'RETRY' 673) #(933 'RETURN' 674) #(933 'RETURNCODE' 675) #(933 'RETURNING' 676) #(933 'RIGHT' 677) #(933 'RIGHTPLUS' 679) #(933 'RIGHTSPACE' 680) #(933 'RISK' 681) #(933 'ROLLBACK' 682) #(933 'ROUND' 683) #(933 'ROWS' 684) #(933 'RTRIM' 883) #(933 'RUN' 685) #(933 'SAP' 686) #(933 'SAVE' 688) #(933 'SAVING' 689) #(933 'SCALE_PRESERVING' 690) #(933 'SCALE_PRESERVING_SCIENTIFIC' 691) #(933 'SCAN' 692) #(933 'SCIENTIFIC' 693) #(933 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(933 'SCREEN' 695) #(933 'SCROLL' 696) #(933 'SCROLLING' 698) #(933 'SEARCH' 699) #(933 'SECONDARY' 700) #(933 'SECONDS' 701) #(933 'SECTION' 702) #(933 'SELECT' 703) #(933 'SELECTION' 705) #(933 'SELECTIONS' 710) #(933 'SEND' 711) #(933 'SEPARATE' 712) #(933 'SEPARATED' 713) #(933 'SESSION' 714) #(933 'SET' 715) #(933 'SHARED' 716) #(933 'SHIFT' 717) #(933 'SHORT' 718) #(933 'SHORTDUMP' 719) #(933 'SIGN' 721) #(933 'SIGN_AS_POSTFIX' 722) #(933 'SIMPLE' 723) #(933 'SIMULATION' 724) #(933 'SINGLE' 725) #(933 'SIZE' 726) #(933 'SKIP' 727) #(933 'SKIPPING' 728) #(933 'SMART' 729) #(933 'SOME' 730) #(933 'SORT' 731) #(933 'SORTABLE' 732) #(933 'SORTED' 733) #(933 'SOURCE' 734) #(933 'SPACE' 735) #(933 'SPECIFIED' 736) #(933 'SPLIT' 737) #(933 'SPOOL' 738) #(933 'SPOTS' 739) #(933 'SQL' 740) #(933 'SQLSCRIPT' 741) #(933 'STABLE' 742) #(933 'STAMP' 743) #(933 'STANDARD' 744) #(933 'STARTING' 746) #(933 'STATE' 747) #(933 'STATEMENT' 748) #(933 'STATEMENTS' 749) #(933 'STATIC' 750) #(933 'STATICS' 751) #(933 'STATUSINFO' 752) #(933 'STEP' 753) #(933 'STOP' 755) #(933 'STRUCTURE' 756) #(933 'STRUCTURES' 757) #(933 'STYLE' 758) #(933 'SUBKEY' 759) #(933 'SUBMATCHES' 760) #(933 'SUBMIT' 761) #(933 'SUBROUTINE' 762) #(933 'SUBSCREEN' 763) #(933 'SUBSTRING' 764) #(933 'SUBTRACT' 765) #(933 'SUFFIX' 767) #(933 'SUM' 768) #(933 'SUMMARY' 769) #(933 'SUPPLIED' 770) #(933 'SUPPLY' 771) #(933 'SUPPRESS' 772) #(933 'SWITCH' 773) #(933 'SYBASE' 774) #(933 'SYMBOL' 775) #(933 'T000' 779) #(933 'TAB' 780) #(933 'TABBED' 781) #(933 'TABLE' 782) #(933 'TABLES' 783) #(933 'TABLEVIEW' 784) #(933 'TABSTRIP' 785) #(933 'TARGET' 786) #(933 'TASK' 787) #(933 'TASKS' 788) #(933 'TEST' 789) #(933 'TESTING' 792) #(933 'TEXT' 793) #(933 'TEXTPOOL' 794) #(933 'THEN' 795) #(933 'THROW' 796) #(933 'TIME' 797) #(933 'TIMES' 798) #(933 'TIMESTAMP' 799) #(933 'TIMEZONE' 800) #(933 'TITLE' 801) #(933 'TITLEBAR' 802) #(933 'TO' 803) #(933 'TOKENIZATION' 804) #(933 'TOKENS' 805) #(933 'TRAILING' 810) #(933 'TRANSACTION' 811) #(933 'TRANSFER' 812) #(933 'TRANSFORMATION' 813) #(933 'TRANSLATE' 814) #(933 'TRANSPORTING' 815) #(933 'TRMAC' 816) #(933 'TRUNCATION' 817) #(933 'TRY' 818) #(933 'TYPE' 819) #(933 'TYPES' 822) #(933 'ULINE' 823) #(933 'UNASSIGN' 824) #(933 'UNDER' 825) #(933 'UNICODE' 826) #(933 'UNION' 827) #(933 'UNIQUE' 828) #(933 'UNIT' 829) #(933 'UNIX' 830) #(933 'UNPACK' 831) #(933 'UNTIL' 832) #(933 'UNWIND' 833) #(933 'UP' 834) #(933 'UPDATE' 835) #(933 'UPPER' 836) #(933 'USER' 837) #(933 'USING' 839) #(933 'UTCLONG' 840) #(933 'UUID' 884) #(933 'VALID' 842) #(933 'VALIDATE' 843) #(933 'VALUE' 844) #(933 'VALUES' 846) #(933 'VARY' 847) #(933 'VARYING' 848) #(933 'VERSION' 849) #(933 'VIA' 850) #(933 'VISIBLE' 851) #(933 'WAIT' 852) #(933 'WHEN' 853) #(933 'WHERE' 854) #(933 'WHILE' 855) #(933 'WIDTH' 856) #(933 'WINDOW' 857) #(933 'WINDOWS' 858) #(933 'WITH' 859) #(933 'WITHOUT' 862) #(933 'WORD' 863) #(933 'WORK' 864) #(933 'WORKSPACE' 865) #(933 'WRITE' 866) #(933 'WRITER' 867) #(933 'XML' 868) #(933 'XSD' 869) #(933 'XSDBOOL' 870) #(933 'YES' 871) #(933 'YYMMDD' 872) #(933 'ZERO' 874) #(933 'ZONE' 875) #(953 '%_FINAL' 2) #(953 '%_HINTS' 3) #(953 '%_PREDEFINED' 4) #(953 '**' 8) #(953 'ABS' 876) #(953 'ABSTRACT' 33) #(953 'ACCEPT' 34) #(953 'ACCEPTING' 35) #(953 'ACCESS' 36) #(953 'ACCORDING' 37) #(953 'ACTION' 38) #(953 'ACTIVATION' 39) #(953 'ACTUAL' 40) #(953 'ADABAS' 41) #(953 'ADD' 42) #(953 'ADJACENT' 44) #(953 'ALIAS' 45) #(953 'ALIASES' 46) #(953 'ALIGN' 47) #(953 'ALL' 48) #(953 'ALLOCATE' 49) #(953 'ALPHA' 50) #(953 'AMDP' 51) #(953 'ANALYSIS' 52) #(953 'ANALYZER' 53) #(953 'AND' 54) #(953 'ANY' 55) #(953 'APPEND' 56) #(953 'APPENDING' 57) #(953 'APPLICATION' 58) #(953 'ARCHIVE' 59) #(953 'AREA' 60) #(953 'ARITHMETIC' 61) #(953 'AS' 62) #(953 'AS400' 63) #(953 'ASCENDING' 64) #(953 'ASSERT' 65) #(953 'ASSIGN' 66) #(953 'ASSIGNED' 67) #(953 'ASSIGNING' 68) #(953 'ASSOCIATION' 69) #(953 'ASYNCHRONOUS' 70) #(953 'AT' 71) #(953 'ATTRIBUTES' 72) #(953 'AUGMENTING' 73) #(953 'AUTHORITY' 74) #(953 'AUTHORIZATION' 76) #(953 'AUTO' 77) #(953 'AVG' 78) #(953 'BACK' 79) #(953 'BACKGROUND' 80) #(953 'BACKWARD' 81) #(953 'BADI' 82) #(953 'BASE' 83) #(953 'BEFORE' 84) #(953 'BEGIN' 85) #(953 'BEHAVIOR' 86) #(953 'BETWEEN' 87) #(953 'BINARY' 88) #(953 'BIT' 89) #(953 'BLANK' 94) #(953 'BLANKS' 95) #(953 'BLOCK' 96) #(953 'BLOCKS' 97) #(953 'BOOLC' 98) #(953 'BOUND' 99) #(953 'BOUNDARIES' 100) #(953 'BOUNDS' 101) #(953 'BOXED' 102) #(953 'BREAK' 103) #(953 'BUFFER' 105) #(953 'BY' 106) #(953 'BYPASSING' 107) #(953 'BYTE' 108) #(953 'CA' 116) #(953 'CALL' 117) #(953 'CALLING' 118) #(953 'CASE' 119) #(953 'CAST' 120) #(953 'CASTING' 121) #(953 'CATCH' 122) #(953 'CDS' 123) #(953 'CEIL' 877) #(953 'CENTER' 124) #(953 'CENTERED' 125) #(953 'CHAIN' 126) #(953 'CHANGE' 129) #(953 'CHANGING' 130) #(953 'CHANNELS' 131) #(953 'CHAR' 132) #(953 'CHARACTER' 134) #(953 'CHECK' 135) #(953 'CHECKBOX' 136) #(953 'CID' 137) #(953 'CIRCULAR' 138) #(953 'CLASS' 139) #(953 'CLEANUP' 143) #(953 'CLEAR' 144) #(953 'CLIENT' 145) #(953 'CLIENTS' 146) #(953 'CLOCK' 147) #(953 'CLONE' 148) #(953 'CLOSE' 149) #(953 'CN' 150) #(953 'CO' 151) #(953 'COALESCE' 878) #(953 'CODE' 152) #(953 'COLLECT' 153) #(953 'COLOR' 154) #(953 'COLUMN' 155) #(953 'COLUMNS' 156) #(953 'COL_BACKGROUND' 157) #(953 'COL_GROUP' 158) #(953 'COL_HEADING' 159) #(953 'COL_KEY' 160) #(953 'COL_NEGATIVE' 161) #(953 'COL_NORMAL' 162) #(953 'COL_POSITIVE' 163) #(953 'COL_TOTAL' 164) #(953 'COMMENT' 165) #(953 'COMMENTS' 166) #(953 'COMMIT' 167) #(953 'COMMON' 168) #(953 'COMMUNICATION' 169) #(953 'COMPARING' 170) #(953 'COMPONENT' 171) #(953 'COMPONENTS' 172) #(953 'COMPRESSION' 173) #(953 'COMPUTE' 174) #(953 'CONCAT' 879) #(953 'CONCATENATE' 175) #(953 'CONCAT_WITH_SPACE' 880) #(953 'COND' 176) #(953 'CONDENSE' 177) #(953 'CONDITION' 178) #(953 'CONNECTION' 179) #(953 'CONSTANT' 180) #(953 'CONSTANTS' 181) #(953 'CONTEXT' 182) #(953 'CONTEXTS' 183) #(953 'CONTINUE' 184) #(953 'CONTROL' 185) #(953 'CONTROLS' 186) #(953 'CONV' 187) #(953 'CONVERSION' 188) #(953 'CONVERT' 189) #(953 'COPIES' 190) #(953 'COPY' 191) #(953 'CORRESPONDING' 192) #(953 'COUNT' 193) #(953 'COUNTRY' 194) #(953 'COVER' 195) #(953 'CP' 196) #(953 'CPI' 197) #(953 'CREATE' 198) #(953 'CRITICAL' 199) #(953 'CS' 200) #(953 'CURRENCY' 201) #(953 'CURRENT' 202) #(953 'CURSOR' 203) #(953 'DANGEROUS' 205) #(953 'DATA' 206) #(953 'DATABASE' 207) #(953 'DATAINFO' 208) #(953 'DATASET' 209) #(953 'DATE' 210) #(953 'DAYLIGHT' 211) #(953 'DB2' 212) #(953 'DB6' 213) #(953 'DD/MM/YY' 214) #(953 'DD/MM/YYYY' 215) #(953 'DDL' 216) #(953 'DDMMYY' 217) #(953 'DEALLOCATE' 218) #(953 'DEC' 219) #(953 'DECIMALS' 220) #(953 'DECLARATIONS' 221) #(953 'DEEP' 222) #(953 'DEFAULT' 223) #(953 'DEFERRED' 224) #(953 'DEFINE' 225) #(953 'DEFINITION' 226) #(953 'DELETE' 227) #(953 'DELETING' 228) #(953 'DEMAND' 229) #(953 'DEPARTMENT' 230) #(953 'DESCENDING' 231) #(953 'DESCRIBE' 232) #(953 'DESTINATION' 233) #(953 'DETAIL' 234) #(953 'DETERMINATION' 235) #(953 'DETERMINE' 236) #(953 'DIALOG' 237) #(953 'DID' 238) #(953 'DIRECTORY' 239) #(953 'DISCARDING' 240) #(953 'DISPLAY' 241) #(953 'DISTANCE' 243) #(953 'DISTINCT' 244) #(953 'DIV' 245) #(953 'DIVIDE' 246) #(953 'DO' 247) #(953 'DUMMY' 248) #(953 'DUPLICATE' 249) #(953 'DUPLICATES' 250) #(953 'DURATION' 251) #(953 'DURING' 252) #(953 'DYNPRO' 253) #(953 'EARLY' 254) #(953 'EDIT' 255) #(953 'ELSE' 257) #(953 'ELSEIF' 258) #(953 'EMPTY' 259) #(953 'ENABLED' 260) #(953 'ENABLING' 261) #(953 'ENCODING' 262) #(953 'END' 263) #(953 'ENDAT' 270) #(953 'ENDCASE' 271) #(953 'ENDCATCH' 272) #(953 'ENDCHAIN' 273) #(953 'ENDCLASS' 274) #(953 'ENDDO' 275) #(953 'ENDENHANCEMENT' 276) #(953 'ENDEXEC' 277) #(953 'ENDFORM' 278) #(953 'ENDFUNCTION' 279) #(953 'ENDIAN' 280) #(953 'ENDIF' 281) #(953 'ENDING' 282) #(953 'ENDINTERFACE' 283) #(953 'ENDLOOP' 284) #(953 'ENDMETHOD' 285) #(953 'ENDMODULE' 286) #(953 'ENDON' 287) #(953 'ENDPROVIDE' 288) #(953 'ENDSELECT' 289) #(953 'ENDTRY' 290) #(953 'ENDWHILE' 291) #(953 'ENDWITH' 292) #(953 'ENGINEERING' 293) #(953 'ENHANCEMENT' 294) #(953 'ENHANCEMENTS' 297) #(953 'ENTITIES' 298) #(953 'ENTITY' 299) #(953 'ENTRIES' 300) #(953 'ENTRY' 301) #(953 'ENUM' 302) #(953 'ENVIRONMENT' 303) #(953 'EQ' 304) #(953 'EQUIV' 305) #(953 'ERRORS' 306) #(953 'ESCAPE' 307) #(953 'ESCAPING' 308) #(953 'EVENT' 309) #(953 'EVENTS' 310) #(953 'EXACT' 311) #(953 'EXCEPT' 312) #(953 'EXCEPTION' 313) #(953 'EXCEPTIONS' 315) #(953 'EXCLUDE' 316) #(953 'EXCLUDING' 317) #(953 'EXEC' 318) #(953 'EXECUTE' 319) #(953 'EXISTS' 320) #(953 'EXIT' 321) #(953 'EXPANDING' 323) #(953 'EXPIRATION' 324) #(953 'EXPLICIT' 325) #(953 'EXPONENT' 326) #(953 'EXPORT' 327) #(953 'EXPORTING' 328) #(953 'EXTENDED' 329) #(953 'EXTENSION' 330) #(953 'EXTRACT' 331) #(953 'FAIL' 332) #(953 'FAILED' 333) #(953 'FEATURES' 334) #(953 'FETCH' 335) #(953 'FIELD' 336) #(953 'FIELDS' 340) #(953 'FILE' 341) #(953 'FILL' 342) #(953 'FILTER' 343) #(953 'FILTERS' 344) #(953 'FINAL' 345) #(953 'FIND' 346) #(953 'FIRST' 347) #(953 'FLOOR' 881) #(953 'FLTP' 350) #(953 'FLUSH' 351) #(953 'FONT' 352) #(953 'FOR' 353) #(953 'FORM' 354) #(953 'FORMAT' 355) #(953 'FORWARD' 356) #(953 'FOUND' 357) #(953 'FRAME' 358) #(953 'FRAMES' 359) #(953 'FREE' 360) #(953 'FRIENDS' 361) #(953 'FROM' 362) #(953 'FULL' 363) #(953 'FUNCTION' 364) #(953 'FURTHER' 366) #(953 'GE' 367) #(953 'GENERATE' 368) #(953 'GET' 369) #(953 'GIVING' 370) #(953 'GLOBAL' 371) #(953 'GRAPH' 372) #(953 'GROUP' 373) #(953 'GROUPS' 374) #(953 'GT' 375) #(953 'HANDLE' 376) #(953 'HANDLER' 377) #(953 'HARMLESS' 378) #(953 'HASHED' 379) #(953 'HAVING' 380) #(953 'HDB' 381) #(953 'HEADER' 382) #(953 'HEADERS' 383) #(953 'HEADING' 384) #(953 'HIDE' 387) #(953 'HIERARCHY' 388) #(953 'HIGH' 389) #(953 'HINT' 390) #(953 'HOLD' 391) #(953 'HOTSPOT' 392) #(953 'ICON' 393) #(953 'ID' 394) #(953 'IDENTIFICATION' 395) #(953 'IDENTIFIER' 396) #(953 'IDS' 397) #(953 'IF' 398) #(953 'IGNORE' 399) #(953 'IGNORING' 400) #(953 'IMMEDIATELY' 401) #(953 'IMPLEMENTATION' 402) #(953 'IMPLEMENTED' 403) #(953 'IMPLICIT' 404) #(953 'IMPORT' 405) #(953 'IMPORTING' 406) #(953 'IN' 407) #(953 'INACTIVE' 408) #(953 'INCL' 409) #(953 'INCLUDE' 410) #(953 'INCLUDES' 411) #(953 'INCREMENT' 412) #(953 'INDEX' 413) #(953 'INFORMIX' 415) #(953 'INFOTYPES' 416) #(953 'INHERITING' 417) #(953 'INIT' 418) #(953 'INITIAL' 419) #(953 'INITIALIZATION' 420) #(953 'INNER' 421) #(953 'INPUT' 422) #(953 'INSERT' 423) #(953 'INSTANCE' 424) #(953 'INSTANCES' 425) #(953 'INT2' 426) #(953 'INT4' 427) #(953 'INT8' 428) #(953 'INTENSIFIED' 429) #(953 'INTERFACE' 430) #(953 'INTERFACES' 431) #(953 'INTERNAL' 432) #(953 'INTERVALS' 433) #(953 'INTO' 434) #(953 'INVERSE' 435) #(953 'IS' 437) #(953 'ISO' 438) #(953 'JOB' 439) #(953 'JOIN' 440) #(953 'KEEP' 441) #(953 'KEEPING' 442) #(953 'KERNEL' 443) #(953 'KEY' 444) #(953 'KEYS' 445) #(953 'KEYWORDS' 446) #(953 'KIND' 447) #(953 'LANGUAGE' 448) #(953 'LAST' 449) #(953 'LATE' 450) #(953 'LAYOUT' 451) #(953 'LE' 452) #(953 'LEADING' 453) #(953 'LEAVE' 454) #(953 'LEFT' 455) #(953 'LEFTPLUS' 457) #(953 'LEFTSPACE' 458) #(953 'LEGACY' 459) #(953 'LENGTH' 460) #(953 'LET' 461) #(953 'LEVEL' 462) #(953 'LEVELS' 463) #(953 'LIKE' 464) #(953 'LINE' 465) #(953 'LINEFEED' 469) #(953 'LINES' 470) #(953 'LINK' 471) #(953 'LIST' 472) #(953 'LISTBOX' 474) #(953 'LOAD' 475) #(953 'LOCAL' 477) #(953 'LOCALE' 478) #(953 'LOCK' 479) #(953 'LOCKS' 480) #(953 'LOGFILE' 482) #(953 'LOGICAL' 483) #(953 'LONG' 484) #(953 'LOOP' 485) #(953 'LOW' 486) #(953 'LOWER' 487) #(953 'LPI' 488) #(953 'LT' 489) #(953 'LTRIM' 882) #(953 'MAIN' 491) #(953 'MAPPED' 492) #(953 'MAPPING' 493) #(953 'MARGIN' 494) #(953 'MARK' 495) #(953 'MASK' 496) #(953 'MATCH' 497) #(953 'MATCHCODE' 498) #(953 'MAX' 499) #(953 'MAXIMUM' 500) #(953 'MEDIUM' 501) #(953 'MEMBERS' 502) #(953 'MEMORY' 503) #(953 'MESH' 504) #(953 'MESSAGE' 505) #(953 'MESSAGES' 507) #(953 'MESSAGING' 508) #(953 'METHOD' 509) #(953 'METHODS' 510) #(953 'MIN' 511) #(953 'MM/DD/YY' 512) #(953 'MM/DD/YYYY' 513) #(953 'MMDDYY' 514) #(953 'MOD' 515) #(953 'MODE' 516) #(953 'MODIF' 517) #(953 'MODIFIER' 518) #(953 'MODIFY' 519) #(953 'MODULE' 520) #(953 'MOVE' 521) #(953 'MSSQLNT' 523) #(953 'MULTIPLY' 524) #(953 'NA' 526) #(953 'NAME' 527) #(953 'NAMETAB' 528) #(953 'NATIVE' 529) #(953 'NE' 530) #(953 'NESTED' 531) #(953 'NESTING' 532) #(953 'NEW' 533) #(953 'NEXT' 537) #(953 'NO' 538) #(953 'NODES' 550) #(953 'NOT' 553) #(953 'NP' 554) #(953 'NS' 555) #(953 'NULL' 556) #(953 'NUMBER' 557) #(953 'NUMBERING' 558) #(953 'NUMC' 559) #(953 'OBJECT' 561) #(953 'OBJECTS' 562) #(953 'OBJMGR' 563) #(953 'OBLIGATORY' 564) #(953 'OCCURENCE' 565) #(953 'OCCURENCES' 566) #(953 'OCCURRENCE' 567) #(953 'OCCURRENCES' 568) #(953 'OCCURS' 569) #(953 'OF' 570) #(953 'OFF' 571) #(953 'OFFSET' 572) #(953 'ON' 573) #(953 'ONE' 574) #(953 'ONLY' 575) #(953 'OPEN' 576) #(953 'OPTION' 577) #(953 'OPTIONAL' 578) #(953 'OPTIONS' 579) #(953 'OR' 580) #(953 'ORACLE' 581) #(953 'ORDER' 582) #(953 'OTHERS' 583) #(953 'OUT' 584) #(953 'OUTER' 585) #(953 'OUTPUT' 586) #(953 'OVERFLOW' 588) #(953 'OVERLAY' 589) #(953 'PACK' 590) #(953 'PACKAGE' 591) #(953 'PAD' 592) #(953 'PADDING' 593) #(953 'PAGE' 594) #(953 'PAGES' 595) #(953 'PARAMETER' 596) #(953 'PARAMETERS' 598) #(953 'PART' 599) #(953 'PARTIALLY' 600) #(953 'PCRE' 601) #(953 'PERCENTAGE' 602) #(953 'PERFORM' 603) #(953 'PERFORMING' 604) #(953 'PERMISSIONS' 605) #(953 'PLACES' 607) #(953 'POOL' 608) #(953 'POSITION' 609) #(953 'POS_HIGH' 610) #(953 'POS_LOW' 611) #(953 'PRAGMAS' 612) #(953 'PRECHECK' 613) #(953 'PRECOMPILED' 614) #(953 'PREFERRED' 615) #(953 'PRESERVING' 616) #(953 'PRIMARY' 617) #(953 'PRINT' 618) #(953 'PRIVATE' 620) #(953 'PRIVILEGED' 621) #(953 'PROCEDURE' 622) #(953 'PROGRAM' 623) #(953 'PROPERTY' 624) #(953 'PROTECTED' 625) #(953 'PROVIDE' 626) #(953 'PUBLIC' 627) #(953 'PUSH' 628) #(953 'PUSHBUTTON' 629) #(953 'PUT' 630) #(953 'QUEUEONLY' 632) #(953 'QUICKINFO' 633) #(953 'RADIOBUTTON' 634) #(953 'RAISE' 635) #(953 'RAISING' 636) #(953 'RANGE' 637) #(953 'RANGES' 638) #(953 'RAW' 639) #(953 'READ' 640) #(953 'RECEIVE' 642) #(953 'RECEIVED' 643) #(953 'RECEIVER' 644) #(953 'RECEIVING' 645) #(953 'REDEFINITION' 646) #(953 'REDUCE' 647) #(953 'REF' 648) #(953 'REFERENCE' 649) #(953 'REFRESH' 650) #(953 'REGEX' 651) #(953 'REJECT' 652) #(953 'RELATING' 653) #(953 'RENAMING' 654) #(953 'REPLACE' 655) #(953 'REPLACEMENT' 656) #(953 'REPLACING' 657) #(953 'REPORT' 658) #(953 'REPORTED' 659) #(953 'REQUEST' 660) #(953 'REQUESTED' 661) #(953 'REQUIRED' 662) #(953 'RESERVE' 663) #(953 'RESET' 664) #(953 'RESOLUTION' 665) #(953 'RESPECTING' 666) #(953 'RESPONSE' 667) #(953 'RESPONSES' 668) #(953 'RESULT' 669) #(953 'RESULTS' 670) #(953 'RESUMABLE' 671) #(953 'RESUME' 672) #(953 'RETRY' 673) #(953 'RETURN' 674) #(953 'RETURNCODE' 675) #(953 'RETURNING' 676) #(953 'RIGHT' 677) #(953 'RIGHTPLUS' 679) #(953 'RIGHTSPACE' 680) #(953 'RISK' 681) #(953 'ROLLBACK' 682) #(953 'ROUND' 683) #(953 'ROWS' 684) #(953 'RTRIM' 883) #(953 'RUN' 685) #(953 'SAP' 686) #(953 'SAVE' 688) #(953 'SAVING' 689) #(953 'SCALE_PRESERVING' 690) #(953 'SCALE_PRESERVING_SCIENTIFIC' 691) #(953 'SCAN' 692) #(953 'SCIENTIFIC' 693) #(953 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(953 'SCREEN' 695) #(953 'SCROLL' 696) #(953 'SCROLLING' 698) #(953 'SEARCH' 699) #(953 'SECONDARY' 700) #(953 'SECONDS' 701) #(953 'SECTION' 702) #(953 'SELECT' 703) #(953 'SELECTION' 705) #(953 'SELECTIONS' 710) #(953 'SEND' 711) #(953 'SEPARATE' 712) #(953 'SEPARATED' 713) #(953 'SESSION' 714) #(953 'SET' 715) #(953 'SHARED' 716) #(953 'SHIFT' 717) #(953 'SHORT' 718) #(953 'SHORTDUMP' 719) #(953 'SIGN' 721) #(953 'SIGN_AS_POSTFIX' 722) #(953 'SIMPLE' 723) #(953 'SIMULATION' 724) #(953 'SINGLE' 725) #(953 'SIZE' 726) #(953 'SKIP' 727) #(953 'SKIPPING' 728) #(953 'SMART' 729) #(953 'SOME' 730) #(953 'SORT' 731) #(953 'SORTABLE' 732) #(953 'SORTED' 733) #(953 'SOURCE' 734) #(953 'SPACE' 735) #(953 'SPECIFIED' 736) #(953 'SPLIT' 737) #(953 'SPOOL' 738) #(953 'SPOTS' 739) #(953 'SQL' 740) #(953 'SQLSCRIPT' 741) #(953 'STABLE' 742) #(953 'STAMP' 743) #(953 'STANDARD' 744) #(953 'STARTING' 746) #(953 'STATE' 747) #(953 'STATEMENT' 748) #(953 'STATEMENTS' 749) #(953 'STATIC' 750) #(953 'STATICS' 751) #(953 'STATUSINFO' 752) #(953 'STEP' 753) #(953 'STOP' 755) #(953 'STRUCTURE' 756) #(953 'STRUCTURES' 757) #(953 'STYLE' 758) #(953 'SUBKEY' 759) #(953 'SUBMATCHES' 760) #(953 'SUBMIT' 761) #(953 'SUBROUTINE' 762) #(953 'SUBSCREEN' 763) #(953 'SUBSTRING' 764) #(953 'SUBTRACT' 765) #(953 'SUFFIX' 767) #(953 'SUM' 768) #(953 'SUMMARY' 769) #(953 'SUPPLIED' 770) #(953 'SUPPLY' 771) #(953 'SUPPRESS' 772) #(953 'SWITCH' 773) #(953 'SYBASE' 774) #(953 'SYMBOL' 775) #(953 'T000' 779) #(953 'TAB' 780) #(953 'TABBED' 781) #(953 'TABLE' 782) #(953 'TABLES' 783) #(953 'TABLEVIEW' 784) #(953 'TABSTRIP' 785) #(953 'TARGET' 786) #(953 'TASK' 787) #(953 'TASKS' 788) #(953 'TEST' 789) #(953 'TESTING' 792) #(953 'TEXT' 793) #(953 'TEXTPOOL' 794) #(953 'THEN' 795) #(953 'THROW' 796) #(953 'TIME' 797) #(953 'TIMES' 798) #(953 'TIMESTAMP' 799) #(953 'TIMEZONE' 800) #(953 'TITLE' 801) #(953 'TITLEBAR' 802) #(953 'TO' 803) #(953 'TOKENIZATION' 804) #(953 'TOKENS' 805) #(953 'TRAILING' 810) #(953 'TRANSACTION' 811) #(953 'TRANSFER' 812) #(953 'TRANSFORMATION' 813) #(953 'TRANSLATE' 814) #(953 'TRANSPORTING' 815) #(953 'TRMAC' 816) #(953 'TRUNCATION' 817) #(953 'TRY' 818) #(953 'TYPE' 819) #(953 'TYPES' 822) #(953 'ULINE' 823) #(953 'UNASSIGN' 824) #(953 'UNDER' 825) #(953 'UNICODE' 826) #(953 'UNION' 827) #(953 'UNIQUE' 828) #(953 'UNIT' 829) #(953 'UNIX' 830) #(953 'UNPACK' 831) #(953 'UNTIL' 832) #(953 'UNWIND' 833) #(953 'UP' 834) #(953 'UPDATE' 835) #(953 'UPPER' 836) #(953 'USER' 837) #(953 'USING' 839) #(953 'UTCLONG' 840) #(953 'UUID' 884) #(953 'VALID' 842) #(953 'VALIDATE' 843) #(953 'VALUE' 844) #(953 'VALUES' 846) #(953 'VARY' 847) #(953 'VARYING' 848) #(953 'VERSION' 849) #(953 'VIA' 850) #(953 'VISIBLE' 851) #(953 'WAIT' 852) #(953 'WHEN' 853) #(953 'WHERE' 854) #(953 'WHILE' 855) #(953 'WIDTH' 856) #(953 'WINDOW' 857) #(953 'WINDOWS' 858) #(953 'WITH' 859) #(953 'WITHOUT' 862) #(953 'WORD' 863) #(953 'WORK' 864) #(953 'WORKSPACE' 865) #(953 'WRITE' 866) #(953 'WRITER' 867) #(953 'XML' 868) #(953 'XSD' 869) #(953 'XSDBOOL' 870) #(953 'YES' 871) #(953 'YYMMDD' 872) #(953 'ZERO' 874) #(953 'ZONE' 875) #(915 '%_FINAL' 2) #(915 '%_HINTS' 3) #(915 '%_PREDEFINED' 4) #(915 '**' 8) #(915 'ABS' 876) #(915 'ABSTRACT' 33) #(915 'ACCEPT' 34) #(915 'ACCEPTING' 35) #(915 'ACCESS' 36) #(915 'ACCORDING' 37) #(915 'ACTION' 38) #(915 'ACTIVATION' 39) #(915 'ACTUAL' 40) #(915 'ADABAS' 41) #(915 'ADD' 42) #(915 'ADJACENT' 44) #(915 'ALIAS' 45) #(915 'ALIASES' 46) #(915 'ALIGN' 47) #(915 'ALL' 48) #(915 'ALLOCATE' 49) #(915 'ALPHA' 50) #(915 'AMDP' 51) #(915 'ANALYSIS' 52) #(915 'ANALYZER' 53) #(915 'AND' 54) #(915 'ANY' 55) #(915 'APPEND' 56) #(915 'APPENDING' 57) #(915 'APPLICATION' 58) #(915 'ARCHIVE' 59) #(915 'AREA' 60) #(915 'ARITHMETIC' 61) #(915 'AS' 62) #(915 'AS400' 63) #(915 'ASCENDING' 64) #(915 'ASSERT' 65) #(915 'ASSIGN' 66) #(915 'ASSIGNED' 67) #(915 'ASSIGNING' 68) #(915 'ASSOCIATION' 69) #(915 'ASYNCHRONOUS' 70) #(915 'AT' 71) #(915 'ATTRIBUTES' 72) #(915 'AUGMENTING' 73) #(915 'AUTHORITY' 74) #(915 'AUTHORIZATION' 76) #(915 'AUTO' 77) #(915 'AVG' 78) #(915 'BACK' 79) #(915 'BACKGROUND' 80) #(915 'BACKWARD' 81) #(915 'BADI' 82) #(915 'BASE' 83) #(915 'BEFORE' 84) #(915 'BEGIN' 85) #(915 'BEHAVIOR' 86) #(915 'BETWEEN' 87) #(915 'BINARY' 88) #(915 'BIT' 89) #(915 'BLANK' 94) #(915 'BLANKS' 95) #(915 'BLOCK' 96) #(915 'BLOCKS' 97) #(915 'BOOLC' 98) #(915 'BOUND' 99) #(915 'BOUNDARIES' 100) #(915 'BOUNDS' 101) #(915 'BOXED' 102) #(915 'BREAK' 103) #(915 'BUFFER' 105) #(915 'BY' 106) #(915 'BYPASSING' 107) #(915 'BYTE' 108) #(915 'CA' 116) #(915 'CALL' 117) #(915 'CALLING' 118) #(915 'CASE' 119) #(915 'CAST' 120) #(915 'CASTING' 121) #(915 'CATCH' 122) #(915 'CDS' 123) #(915 'CEIL' 877) #(915 'CENTER' 124) #(915 'CENTERED' 125) #(915 'CHAIN' 126) #(915 'CHANGE' 129) #(915 'CHANGING' 130) #(915 'CHANNELS' 131) #(915 'CHAR' 132) #(915 'CHARACTER' 134) #(915 'CHECK' 135) #(915 'CHECKBOX' 136) #(915 'CID' 137) #(915 'CIRCULAR' 138) #(915 'CLASS' 139) #(915 'CLEANUP' 143) #(915 'CLEAR' 144) #(915 'CLIENT' 145) #(915 'CLIENTS' 146) #(915 'CLOCK' 147) #(915 'CLONE' 148) #(915 'CLOSE' 149) #(915 'CN' 150) #(915 'CO' 151) #(915 'COALESCE' 878) #(915 'CODE' 152) #(915 'COLLECT' 153) #(915 'COLOR' 154) #(915 'COLUMN' 155) #(915 'COLUMNS' 156) #(915 'COL_BACKGROUND' 157) #(915 'COL_GROUP' 158) #(915 'COL_HEADING' 159) #(915 'COL_KEY' 160) #(915 'COL_NEGATIVE' 161) #(915 'COL_NORMAL' 162) #(915 'COL_POSITIVE' 163) #(915 'COL_TOTAL' 164) #(915 'COMMENT' 165) #(915 'COMMENTS' 166) #(915 'COMMIT' 167) #(915 'COMMON' 168) #(915 'COMMUNICATION' 169) #(915 'COMPARING' 170) #(915 'COMPONENT' 171) #(915 'COMPONENTS' 172) #(915 'COMPRESSION' 173) #(915 'COMPUTE' 174) #(915 'CONCAT' 879) #(915 'CONCATENATE' 175) #(915 'CONCAT_WITH_SPACE' 880) #(915 'COND' 176) #(915 'CONDENSE' 177) #(915 'CONDITION' 178) #(915 'CONNECTION' 179) #(915 'CONSTANT' 180) #(915 'CONSTANTS' 181) #(915 'CONTEXT' 182) #(915 'CONTEXTS' 183) #(915 'CONTINUE' 184) #(915 'CONTROL' 185) #(915 'CONTROLS' 186) #(915 'CONV' 187) #(915 'CONVERSION' 188) #(915 'CONVERT' 189) #(915 'COPIES' 190) #(915 'COPY' 191) #(915 'CORRESPONDING' 192) #(915 'COUNT' 193) #(915 'COUNTRY' 194) #(915 'COVER' 195) #(915 'CP' 196) #(915 'CPI' 197) #(915 'CREATE' 198) #(915 'CRITICAL' 199) #(915 'CS' 200) #(915 'CURRENCY' 201) #(915 'CURRENT' 202) #(915 'CURSOR' 203) #(915 'DANGEROUS' 205) #(915 'DATA' 206) #(915 'DATABASE' 207) #(915 'DATAINFO' 208) #(915 'DATASET' 209) #(915 'DATE' 210) #(915 'DAYLIGHT' 211) #(915 'DB2' 212) #(915 'DB6' 213) #(915 'DDL' 216) #(915 'DDMMYY' 217) #(915 'DEALLOCATE' 218) #(915 'DEC' 219) #(915 'DECIMALS' 220) #(915 'DECLARATIONS' 221) #(915 'DEEP' 222) #(915 'DEFAULT' 223) #(915 'DEFERRED' 224) #(915 'DEFINE' 225) #(915 'DEFINITION' 226) #(915 'DELETE' 227) #(915 'DELETING' 228) #(915 'DEMAND' 229) #(915 'DEPARTMENT' 230) #(915 'DESCENDING' 231) #(915 'DESCRIBE' 232) #(915 'DESTINATION' 233) #(915 'DETAIL' 234) #(915 'DETERMINATION' 235) #(915 'DETERMINE' 236) #(915 'DIALOG' 237) #(915 'DID' 238) #(915 'DIRECTORY' 239) #(915 'DISCARDING' 240) #(915 'DISPLAY' 241) #(915 'DISTANCE' 243) #(915 'DISTINCT' 244) #(915 'DIV' 245) #(915 'DIVIDE' 246) #(915 'DO' 247) #(915 'DUMMY' 248) #(915 'DUPLICATE' 249) #(915 'DUPLICATES' 250) #(915 'DURATION' 251) #(915 'DURING' 252) #(915 'DYNPRO' 253) #(915 'EARLY' 254) #(915 'EDIT' 255) #(915 'ELSE' 257) #(915 'ELSEIF' 258) #(915 'EMPTY' 259) #(915 'ENABLED' 260) #(915 'ENABLING' 261) #(915 'ENCODING' 262) #(915 'END' 263) #(915 'ENDAT' 270) #(915 'ENDCASE' 271) #(915 'ENDCATCH' 272) #(915 'ENDCHAIN' 273) #(915 'ENDCLASS' 274) #(915 'ENDDO' 275) #(915 'ENDENHANCEMENT' 276) #(915 'ENDEXEC' 277) #(915 'ENDFORM' 278) #(915 'ENDFUNCTION' 279) #(915 'ENDIAN' 280) #(915 'ENDIF' 281) #(915 'ENDING' 282) #(915 'ENDINTERFACE' 283) #(915 'ENDLOOP' 284) #(915 'ENDMETHOD' 285) #(915 'ENDMODULE' 286) #(915 'ENDON' 287) #(915 'ENDPROVIDE' 288) #(915 'ENDSELECT' 289) #(915 'ENDTRY' 290) #(915 'ENDWHILE' 291) #(915 'ENDWITH' 292) #(915 'ENGINEERING' 293) #(915 'ENHANCEMENT' 294) #(915 'ENHANCEMENTS' 297) #(915 'ENTITIES' 298) #(915 'ENTITY' 299) #(915 'ENTRIES' 300) #(915 'ENTRY' 301) #(915 'ENUM' 302) #(915 'ENVIRONMENT' 303) #(915 'EQ' 304) #(915 'EQUIV' 305) #(915 'ERRORS' 306) #(915 'ESCAPE' 307) #(915 'ESCAPING' 308) #(915 'EVENT' 309) #(915 'EVENTS' 310) #(915 'EXACT' 311) #(915 'EXCEPT' 312) #(915 'EXCEPTION' 313) #(915 'EXCEPTIONS' 315) #(915 'EXCLUDE' 316) #(915 'EXCLUDING' 317) #(915 'EXEC' 318) #(915 'EXECUTE' 319) #(915 'EXISTS' 320) #(915 'EXIT' 321) #(915 'EXPANDING' 323) #(915 'EXPIRATION' 324) #(915 'EXPLICIT' 325) #(915 'EXPONENT' 326) #(915 'EXPORT' 327) #(915 'EXPORTING' 328) #(915 'EXTENDED' 329) #(915 'EXTENSION' 330) #(915 'EXTRACT' 331) #(915 'FAIL' 332) #(915 'FAILED' 333) #(915 'FEATURES' 334) #(915 'FETCH' 335) #(915 'FIELD' 336) #(915 'FIELDS' 340) #(915 'FILE' 341) #(915 'FILL' 342) #(915 'FILTER' 343) #(915 'FILTERS' 344) #(915 'FINAL' 345) #(915 'FIND' 346) #(915 'FIRST' 347) #(915 'FLOOR' 881) #(915 'FLTP' 350) #(915 'FLUSH' 351) #(915 'FONT' 352) #(915 'FOR' 353) #(915 'FORM' 354) #(915 'FORMAT' 355) #(915 'FORWARD' 356) #(915 'FOUND' 357) #(915 'FRAME' 358) #(915 'FRAMES' 359) #(915 'FREE' 360) #(915 'FRIENDS' 361) #(915 'FROM' 362) #(915 'FULL' 363) #(915 'FUNCTION' 364) #(915 'FURTHER' 366) #(915 'GE' 367) #(915 'GENERATE' 368) #(915 'GET' 369) #(915 'GIVING' 370) #(915 'GLOBAL' 371) #(915 'GRAPH' 372) #(915 'GROUP' 373) #(915 'GROUPS' 374) #(915 'GT' 375) #(915 'HANDLE' 376) #(915 'HANDLER' 377) #(915 'HARMLESS' 378) #(915 'HASHED' 379) #(915 'HAVING' 380) #(915 'HDB' 381) #(915 'HEADER' 382) #(915 'HEADERS' 383) #(915 'HEADING' 384) #(915 'HIDE' 387) #(915 'HIERARCHY' 388) #(915 'HIGH' 389) #(915 'HINT' 390) #(915 'HOLD' 391) #(915 'HOTSPOT' 392) #(915 'ICON' 393) #(915 'ID' 394) #(915 'IDENTIFICATION' 395) #(915 'IDENTIFIER' 396) #(915 'IDS' 397) #(915 'IF' 398) #(915 'IGNORE' 399) #(915 'IGNORING' 400) #(915 'IMMEDIATELY' 401) #(915 'IMPLEMENTATION' 402) #(915 'IMPLEMENTED' 403) #(915 'IMPLICIT' 404) #(915 'IMPORT' 405) #(915 'IMPORTING' 406) #(915 'IN' 407) #(915 'INACTIVE' 408) #(915 'INCL' 409) #(915 'INCLUDE' 410) #(915 'INCLUDES' 411) #(915 'INCREMENT' 412) #(915 'INDEX' 413) #(915 'INFORMIX' 415) #(915 'INFOTYPES' 416) #(915 'INHERITING' 417) #(915 'INIT' 418) #(915 'INITIAL' 419) #(915 'INITIALIZATION' 420) #(915 'INNER' 421) #(915 'INPUT' 422) #(915 'INSERT' 423) #(915 'INSTANCE' 424) #(915 'INSTANCES' 425) #(915 'INT2' 426) #(915 'INT4' 427) #(915 'INT8' 428) #(915 'INTENSIFIED' 429) #(915 'INTERFACE' 430) #(915 'INTERFACES' 431) #(915 'INTERNAL' 432) #(915 'INTERVALS' 433) #(915 'INTO' 434) #(915 'INVERSE' 435) #(915 'IS' 437) #(915 'ISO' 438) #(915 'JOB' 439) #(915 'JOIN' 440) #(915 'KEEP' 441) #(915 'KEEPING' 442) #(915 'KERNEL' 443) #(915 'KEY' 444) #(915 'KEYS' 445) #(915 'KEYWORDS' 446) #(915 'KIND' 447) #(915 'LANGUAGE' 448) #(915 'LAST' 449) #(915 'LATE' 450) #(915 'LAYOUT' 451) #(915 'LE' 452) #(915 'LEADING' 453) #(915 'LEAVE' 454) #(915 'LEFT' 455) #(915 'LEFTPLUS' 457) #(915 'LEFTSPACE' 458) #(915 'LEGACY' 459) #(915 'LENGTH' 460) #(915 'LET' 461) #(915 'LEVEL' 462) #(915 'LEVELS' 463) #(915 'LIKE' 464) #(915 'LINE' 465) #(915 'LINEFEED' 469) #(915 'LINES' 470) #(915 'LINK' 471) #(915 'LIST' 472) #(915 'LISTBOX' 474) #(915 'LOAD' 475) #(915 'LOCAL' 477) #(915 'LOCALE' 478) #(915 'LOCK' 479) #(915 'LOCKS' 480) #(915 'LOGFILE' 482) #(915 'LOGICAL' 483) #(915 'LONG' 484) #(915 'LOOP' 485) #(915 'LOW' 486) #(915 'LOWER' 487) #(915 'LPI' 488) #(915 'LT' 489) #(915 'LTRIM' 882) #(915 'MAIN' 491) #(915 'MAPPED' 492) #(915 'MAPPING' 493) #(915 'MARGIN' 494) #(915 'MARK' 495) #(915 'MASK' 496) #(915 'MATCH' 497) #(915 'MATCHCODE' 498) #(915 'MAX' 499) #(915 'MAXIMUM' 500) #(915 'MEDIUM' 501) #(915 'MEMBERS' 502) #(915 'MEMORY' 503) #(915 'MESH' 504) #(915 'MESSAGE' 505) #(915 'MESSAGES' 507) #(915 'MESSAGING' 508) #(915 'METHOD' 509) #(915 'METHODS' 510) #(915 'MIN' 511) #(915 'MMDDYY' 514) #(915 'MOD' 515) #(915 'MODE' 516) #(915 'MODIF' 517) #(915 'MODIFIER' 518) #(915 'MODIFY' 519) #(915 'MODULE' 520) #(915 'MOVE' 521) #(915 'MSSQLNT' 523) #(915 'MULTIPLY' 524) #(915 'NA' 526) #(915 'NAME' 527) #(915 'NAMETAB' 528) #(915 'NATIVE' 529) #(915 'NE' 530) #(915 'NESTED' 531) #(915 'NESTING' 532) #(915 'NEW' 533) #(915 'NEXT' 537) #(915 'NO' 538) #(915 'NODES' 550) #(915 'NOT' 553) #(915 'NP' 554) #(915 'NS' 555) #(915 'NULL' 556) #(915 'NUMBER' 557) #(915 'NUMBERING' 558) #(915 'NUMC' 559) #(915 'OBJECT' 561) #(915 'OBJECTS' 562) #(915 'OBJMGR' 563) #(915 'OBLIGATORY' 564) #(915 'OCCURENCE' 565) #(915 'OCCURENCES' 566) #(915 'OCCURRENCE' 567) #(915 'OCCURRENCES' 568) #(915 'OCCURS' 569) #(915 'OF' 570) #(915 'OFF' 571) #(915 'OFFSET' 572) #(915 'ON' 573) #(915 'ONE' 574) #(915 'ONLY' 575) #(915 'OPEN' 576) #(915 'OPTION' 577) #(915 'OPTIONAL' 578) #(915 'OPTIONS' 579) #(915 'OR' 580) #(915 'ORACLE' 581) #(915 'ORDER' 582) #(915 'OTHERS' 583) #(915 'OUT' 584) #(915 'OUTER' 585) #(915 'OUTPUT' 586) #(915 'OVERFLOW' 588) #(915 'OVERLAY' 589) #(915 'PACK' 590) #(915 'PACKAGE' 591) #(915 'PAD' 592) #(915 'PADDING' 593) #(915 'PAGE' 594) #(915 'PAGES' 595) #(915 'PARAMETER' 596) #(915 'PARAMETERS' 598) #(915 'PART' 599) #(915 'PARTIALLY' 600) #(915 'PCRE' 601) #(915 'PERCENTAGE' 602) #(915 'PERFORM' 603) #(915 'PERFORMING' 604) #(915 'PERMISSIONS' 605) #(915 'PLACES' 607) #(915 'POOL' 608) #(915 'POSITION' 609) #(915 'POS_HIGH' 610) #(915 'POS_LOW' 611) #(915 'PRAGMAS' 612) #(915 'PRECHECK' 613) #(915 'PRECOMPILED' 614) #(915 'PREFERRED' 615) #(915 'PRESERVING' 616) #(915 'PRIMARY' 617) #(915 'PRINT' 618) #(915 'PRIVATE' 620) #(915 'PRIVILEGED' 621) #(915 'PROCEDURE' 622) #(915 'PROGRAM' 623) #(915 'PROPERTY' 624) #(915 'PROTECTED' 625) #(915 'PROVIDE' 626) #(915 'PUBLIC' 627) #(915 'PUSH' 628) #(915 'PUSHBUTTON' 629) #(915 'PUT' 630) #(915 'QUEUEONLY' 632) #(915 'QUICKINFO' 633) #(915 'RADIOBUTTON' 634) #(915 'RAISE' 635) #(915 'RAISING' 636) #(915 'RANGE' 637) #(915 'RANGES' 638) #(915 'RAW' 639) #(915 'READ' 640) #(915 'RECEIVE' 642) #(915 'RECEIVED' 643) #(915 'RECEIVER' 644) #(915 'RECEIVING' 645) #(915 'REDEFINITION' 646) #(915 'REDUCE' 647) #(915 'REF' 648) #(915 'REFERENCE' 649) #(915 'REFRESH' 650) #(915 'REGEX' 651) #(915 'REJECT' 652) #(915 'RELATING' 653) #(915 'RENAMING' 654) #(915 'REPLACE' 655) #(915 'REPLACEMENT' 656) #(915 'REPLACING' 657) #(915 'REPORT' 658) #(915 'REPORTED' 659) #(915 'REQUEST' 660) #(915 'REQUESTED' 661) #(915 'REQUIRED' 662) #(915 'RESERVE' 663) #(915 'RESET' 664) #(915 'RESOLUTION' 665) #(915 'RESPECTING' 666) #(915 'RESPONSE' 667) #(915 'RESPONSES' 668) #(915 'RESULT' 669) #(915 'RESULTS' 670) #(915 'RESUMABLE' 671) #(915 'RESUME' 672) #(915 'RETRY' 673) #(915 'RETURN' 674) #(915 'RETURNCODE' 675) #(915 'RETURNING' 676) #(915 'RIGHT' 677) #(915 'RIGHTPLUS' 679) #(915 'RIGHTSPACE' 680) #(915 'RISK' 681) #(915 'ROLLBACK' 682) #(915 'ROUND' 683) #(915 'ROWS' 684) #(915 'RTRIM' 883) #(915 'RUN' 685) #(915 'SAP' 686) #(915 'SAVE' 688) #(915 'SAVING' 689) #(915 'SCALE_PRESERVING' 690) #(915 'SCALE_PRESERVING_SCIENTIFIC' 691) #(915 'SCAN' 692) #(915 'SCIENTIFIC' 693) #(915 'SCIENTIFIC_WITH_LEADING_ZERO' 694) #(915 'SCREEN' 695) #(915 'SCROLL' 696) #(915 'SCROLLING' 698) #(915 'SEARCH' 699) #(915 'SECONDARY' 700) #(915 'SECONDS' 701) #(915 'SECTION' 702) #(915 'SELECT' 703) #(915 'SELECTION' 705) #(915 'SELECTIONS' 710) #(915 'SEND' 711) #(915 'SEPARATE' 712) #(915 'SEPARATED' 713) #(915 'SESSION' 714) #(915 'SET' 715) #(915 'SHARED' 716) #(915 'SHIFT' 717) #(915 'SHORT' 718) #(915 'SHORTDUMP' 719) #(915 'SIGN' 721) #(915 'SIGN_AS_POSTFIX' 722) #(915 'SIMPLE' 723) #(915 'SIMULATION' 724) #(915 'SINGLE' 725) #(915 'SIZE' 726) #(915 'SKIP' 727) #(915 'SKIPPING' 728) #(915 'SMART' 729) #(915 'SOME' 730) #(915 'SORT' 731) #(915 'SORTABLE' 732) #(915 'SORTED' 733) #(915 'SOURCE' 734) #(915 'SPACE' 735) #(915 'SPECIFIED' 736) #(915 'SPLIT' 737) #(915 'SPOOL' 738) #(915 'SPOTS' 739) #(915 'SQL' 740) #(915 'SQLSCRIPT' 741) #(915 'STABLE' 742) #(915 'STAMP' 743) #(915 'STANDARD' 744) #(915 'STARTING' 746) #(915 'STATE' 747) #(915 'STATEMENT' 748) #(915 'STATEMENTS' 749) #(915 'STATIC' 750) #(915 'STATICS' 751) #(915 'STATUSINFO' 752) #(915 'STEP' 753) #(915 'STOP' 755) #(915 'STRUCTURE' 756) #(915 'STRUCTURES' 757) #(915 'STYLE' 758) #(915 'SUBKEY' 759) #(915 'SUBMATCHES' 760) #(915 'SUBMIT' 761) #(915 'SUBROUTINE' 762) #(915 'SUBSCREEN' 763) #(915 'SUBSTRING' 764) #(915 'SUBTRACT' 765) #(915 'SUFFIX' 767) #(915 'SUM' 768) #(915 'SUMMARY' 769) #(915 'SUPPLIED' 770) #(915 'SUPPLY' 771) #(915 'SUPPRESS' 772) #(915 'SWITCH' 773) #(915 'SYBASE' 774) #(915 'SYMBOL' 775) #(915 'T000' 779) #(915 'TAB' 780) #(915 'TABBED' 781) #(915 'TABLE' 782) #(915 'TABLES' 783) #(915 'TABLEVIEW' 784) #(915 'TABSTRIP' 785) #(915 'TARGET' 786) #(915 'TASK' 787) #(915 'TASKS' 788) #(915 'TEST' 789) #(915 'TESTING' 792) #(915 'TEXT' 793) #(915 'TEXTPOOL' 794) #(915 'THEN' 795) #(915 'THROW' 796) #(915 'TIME' 797) #(915 'TIMES' 798) #(915 'TIMESTAMP' 799) #(915 'TIMEZONE' 800) #(915 'TITLE' 801) #(915 'TITLEBAR' 802) #(915 'TO' 803) #(915 'TOKENIZATION' 804) #(915 'TOKENS' 805) #(915 'TRAILING' 810) #(915 'TRANSACTION' 811) #(915 'TRANSFER' 812) #(915 'TRANSFORMATION' 813) #(915 'TRANSLATE' 814) #(915 'TRANSPORTING' 815) #(915 'TRMAC' 816) #(915 'TRUNCATION' 817) #(915 'TRY' 818) #(915 'TYPE' 819) #(915 'TYPES' 822) #(915 'ULINE' 823) #(915 'UNASSIGN' 824) #(915 'UNDER' 825) #(915 'UNICODE' 826) #(915 'UNION' 827) #(915 'UNIQUE' 828) #(915 'UNIT' 829) #(915 'UNIX' 830) #(915 'UNPACK' 831) #(915 'UNTIL' 832) #(915 'UNWIND' 833) #(915 'UP' 834) #(915 'UPDATE' 835) #(915 'UPPER' 836) #(915 'USER' 837) #(915 'USING' 839) #(915 'UTCLONG' 840) #(915 'UUID' 884) #(915 'VALID' 842) #(915 'VALIDATE' 843) #(915 'VALUE' 844) #(915 'VALUES' 846) #(915 'VARY' 847) #(915 'VARYING' 848) #(915 'VERSION' 849) #(915 'VIA' 850) #(915 'VISIBLE' 851) #(915 'WAIT' 852) #(915 'WHEN' 853) #(915 'WHERE' 854) #(915 'WHILE' 855) #(915 'WIDTH' 856) #(915 'WINDOW' 857) #(915 'WINDOWS' 858) #(915 'WITH' 859) #(915 'WITHOUT' 862) #(915 'WORD' 863) #(915 'WORK' 864) #(915 'WORKSPACE' 865) #(915 'WRITE' 866) #(915 'WRITER' 867) #(915 'XML' 868) #(915 'XSD' 869) #(915 'XSDBOOL' 870) #(915 'YES' 871) #(915 'YYMMDD' 872) #(915 'ZERO' 874) #(915 'ZONE' 875))
		do: [ :each | 
			(keywordMap at: each first ifAbsentPut: [ Dictionary new ])
				at: (each at: 2)
				put: each last ].
	^ keywordMap
]

{ #category : #private }
ABAPScanner >> At [
	| before |
	before := start > 0 ifTrue: [ self peekAt: start - 1 ] ifFalse: [ $a ].
	before isSeparator
		ifTrue: [ ^ SmaCCToken
				value: outputStream contents
				start: start + 1
				ids: {self WAtId} , matchActions ].
	^ SmaCCToken
		value: outputStream contents
		start: start + 1
		ids: matchActions
]

{ #category : #private }
ABAPScanner >> BracketLeft [
	| after |
	after := stream peek ifNil: [ $a ].
	after isSeparator
		ifTrue: [ ^ SmaCCToken
				value: outputStream contents
				start: start + 1
				ids: {self BracketLeftWId} , matchActions ].
	^ SmaCCToken
		value: outputStream contents
		start: start + 1
		ids: matchActions
]

{ #category : #generated }
ABAPScanner >> BracketLeftWId [
	^ 2233
]

{ #category : #private }
ABAPScanner >> BracketRight [
	| after before |
	before := start > 0 ifTrue: [ self peekAt: start - 1 ] ifFalse: [ $a ].
	after := stream peek ifNil: [ $a ].
	before isSeparator
		ifTrue: [ after isSeparator
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WBracketRightWId.
								self WBracketRightId.
								self BracketRightWId} , matchActions ]
				ifFalse: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WBracketRightId} , matchActions ] ]
		ifFalse: [ after isSeparator
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self BracketRightWId} , matchActions ] ].
	^ SmaCCToken
		value: outputStream contents
		start: start + 1
		ids: matchActions
]

{ #category : #generated }
ABAPScanner >> BracketRightWId [
	^ 2234
]

{ #category : #generated }
ABAPScanner >> BreakId [
	^ 2235
]

{ #category : #private }
ABAPScanner >> Dash [
	| after before |
	before := start > 0 ifTrue: [ self peekAt: start - 1 ] ifFalse: [ $a ].
	after := stream peek ifNil: [ $a ].
	before isSeparator
		ifTrue: [ after isSeparator
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WDashWId.
								self WDashId.
								self DashWId} , matchActions ]
				ifFalse: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WDashId} , matchActions ] ]
		ifFalse: [ after isSeparator
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self DashWId} , matchActions ] ].
	^ SmaCCToken
		value: outputStream contents
		start: start + 1
		ids: matchActions
]

{ #category : #generated }
ABAPScanner >> DashWId [
	^ 2236
]

{ #category : #private }
ABAPScanner >> FieldSub1 [
	| ch contents |
	contents := outputStream contents.
	(contents first = $*
		and: [ start = 0
				or: [ ch := self peekAt: start - 1.
					ch = Character lf or: [ ch = Character cr ] ] ])
		ifTrue: [ [ stream atEnd not
				and: [ ch := stream peek.
					(ch = Character lf or: [ ch = Character cr ]) not ] ]
				whileTrue: [ stream next ].
			self recordMatch: #().
			^ self comment ].
	^ SmaCCToken
		value: contents
		start: start + 1
		ids: matchActions
]

{ #category : #private }
ABAPScanner >> ParenLeft [
	| after before |
	before := start > 0 ifTrue: [ self peekAt: start - 1 ] ifFalse: [ $a ].
	after := stream peek ifNil: [ $a ].
	before isSeparator
		ifTrue: [ (after isSeparator or: [ after = $. ])
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WParenLeftWId.
								self WParenLeftId.
								self ParenLeftWId} , matchActions ]
				ifFalse: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WParenLeftId} , matchActions ] ]
		ifFalse: [ (after isSeparator or: [ after = $. ])
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self ParenLeftWId} , matchActions ] ].
	^ SmaCCToken
		value: outputStream contents
		start: start + 1
		ids: matchActions
]

{ #category : #generated }
ABAPScanner >> ParenLeftWId [
	^ 2237
]

{ #category : #private }
ABAPScanner >> ParenRight [
	| after before |
	before := start > 0 ifTrue: [ self peekAt: start - 1 ] ifFalse: [ $a ].
	after := stream peek ifNil: [ $a ].
	before isSeparator
		ifTrue: [ (after isSeparator or: [ after = $. ])
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WParenRightWId.
								self WParenRightId.
								self ParenRightWId} , matchActions ]
				ifFalse: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WParenRightId} , matchActions ] ]
		ifFalse: [ (after isSeparator or: [ after = $. ])
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self ParenRightWId} , matchActions ] ].
	^ SmaCCToken
		value: outputStream contents
		start: start + 1
		ids: matchActions
]

{ #category : #generated }
ABAPScanner >> ParenRightWId [
	^ 2238
]

{ #category : #private }
ABAPScanner >> Plus [
	| after before |
	before := start > 0 ifTrue: [ self peekAt: start - 1 ] ifFalse: [ $a ].
	after := stream peek ifNil: [ $a ].
	before isSeparator
		ifTrue: [ after isSeparator
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WPlusWId.
								self WPlusId.
								self PlusWId} , matchActions ]
				ifFalse: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self WPlusId} , matchActions ] ]
		ifFalse: [ after isSeparator
				ifTrue: [ ^ SmaCCToken
						value: outputStream contents
						start: start + 1
						ids: {self PlusWId} , matchActions ] ].
	^ SmaCCToken
		value: outputStream contents
		start: start + 1
		ids: matchActions
]

{ #category : #generated }
ABAPScanner >> PlusWId [
	^ 2239
]

{ #category : #generated }
ABAPScanner >> SystemCallId [
	^ 2240
]

{ #category : #generated }
ABAPScanner >> WAtId [
	^ 2241
]

{ #category : #generated }
ABAPScanner >> WBracketRightId [
	^ 2242
]

{ #category : #generated }
ABAPScanner >> WBracketRightWId [
	^ 2243
]

{ #category : #generated }
ABAPScanner >> WDashId [
	^ 2244
]

{ #category : #generated }
ABAPScanner >> WDashWId [
	^ 2245
]

{ #category : #generated }
ABAPScanner >> WParenLeftId [
	^ 2246
]

{ #category : #generated }
ABAPScanner >> WParenLeftWId [
	^ 2247
]

{ #category : #generated }
ABAPScanner >> WParenRightId [
	^ 2248
]

{ #category : #generated }
ABAPScanner >> WParenRightWId [
	^ 2249
]

{ #category : #generated }
ABAPScanner >> WPlusId [
	^ 2250
]

{ #category : #generated }
ABAPScanner >> WPlusWId [
	^ 2251
]

{ #category : #generated }
ABAPScanner >> chainedId [
	^ 2252
]

{ #category : #generated }
ABAPScanner >> colonId [
	^ 934
]

{ #category : #generated }
ABAPScanner >> commaId [
	^ 935
]

{ #category : #generated }
ABAPScanner >> emptySymbolTokenId [
	^ 2255
]

{ #category : #generated }
ABAPScanner >> errorTokenId [
	^ 2256
]

{ #category : #generated }
ABAPScanner >> keywordFor: aString [
	^ aString asUppercase
]

{ #category : #private }
ABAPScanner >> next [
	| token |
	[ token := super next.
	(token value notEmpty and: [ token value first = $* ])
		ifTrue: [ | ch |
			(token startPosition = 1
				or: [ ch := self peekAt: token startPosition - 2.
					ch = Character lf or: [ ch = Character cr ] ])
				ifTrue: [ stream position: token stopPosition.
					[ stream atEnd not
						and: [ ch := stream peek.
							(ch = Character lf or: [ ch = Character cr ]) not ] ]
						whileTrue: [ stream next ].
					comments add: (Array with: token startPosition with: stream position).
					token := nil ] ].
	token isNil ] whileTrue.
	^ token
]

{ #category : #private }
ABAPScanner >> pragma [
	^ self comment
]

{ #category : #generated }
ABAPScanner >> pragmaId [
	^ 940
]

{ #category : #generated }
ABAPScanner >> scan1 [
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	currentCharacter == $& ifTrue: [ ^ self scan9 ].
	currentCharacter == $* ifTrue: [ ^ self scan11 ].
	currentCharacter == $/ ifTrue: [ ^ self scan16 ].
	currentCharacter == $? ifTrue: [ ^ self scan1X1 ].
	(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan3 ].
	currentCharacter isDigit ifTrue: [ ^ self scan25 ].
	^ self scan1X2
]

{ #category : #generated }
ABAPScanner >> scan10 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self step.
			currentCharacter == $/
				ifTrue: [ self step.
					((currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
						ifTrue: [ [ self recordMatch: #(916).
							self step.
							(currentCharacter between: $$ and: $%)
								or: [ currentCharacter == $*
										or: [ (currentCharacter between: $0 and: $9)
												or: [ (currentCharacter between: $A and: $Z)
														or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
								whileTrue ].
					^ self reportLastMatch ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan100 [
	self recordMatch: #(892 893 909 913 915 917 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	^ self scan100X1
]

{ #category : #generated }
ABAPScanner >> scan100X1 [
	currentCharacter == $$ ifTrue: [ ^ self scan96 ].
	currentCharacter == $% ifTrue: [ ^ self scan99 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan102 ].
	(currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan101 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan101 [
	[ self recordMatch: #(892 893 913 915 917 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	currentCharacter == $$ ifTrue: [ ^ self scan96 ].
	currentCharacter == $% ifTrue: [ ^ self scan99 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan102 ].
	currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan102 [
	self recordMatch: #(913 915).
	self step.
	('$/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	('%*~' includes: currentCharacter) ifTrue: [ ^ self scan56 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(913 915 952).
			self step.
			('$/' includes: currentCharacter)
				ifTrue: [ [ self recordMatch: #(913).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_
														or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			('%*~' includes: currentCharacter) ifTrue: [ ^ self scan56 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan103 [
	self recordMatch: #(913 928).
	self step.
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $~
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '*/' includes: currentCharacter ])
		ifTrue: [ ^ self scan37 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan104 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan104 [
	[ self recordMatch: #(913 928).
	self step.
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $/ ifTrue: [ ^ self scan105 ].
	currentCharacter == $~
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan37 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan105 [
	self recordMatch: #(913 928).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan106 ].
	currentCharacter == $% ifTrue: [ ^ self scan107 ].
	currentCharacter == $& ifTrue: [ ^ self scan105X4 ].
	currentCharacter == $* ifTrue: [ ^ self scan108 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $? ifTrue: [ ^ self scan105X3 ].
	currentCharacter == $~ ifTrue: [ ^ self scan105X1 ].
	currentCharacter isDigit ifTrue: [ ^ self scan109 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(907 908 910 913 916 927 928 952).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan15 ].
			currentCharacter == $% ifTrue: [ ^ self scan107 ].
			currentCharacter == $& ifTrue: [ ^ self scan105X2 ].
			currentCharacter == $/ ifTrue: [ ^ self scan37 ].
			currentCharacter == $? ifTrue: [ ^ self scan14 ].
			currentCharacter == $~ ifTrue: [ ^ self scan45 ].
			('$*' includes: currentCharacter) ifTrue: [ ^ self scan106 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan105X1 [
	[ self recordMatch: #(913).
	self step.
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_
										or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan105X2 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan105X3 [
	[ self recordMatch: #(916).
	self step.
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan105X4 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan106 [
	[ self recordMatch: #(907 908 913 916 927 928 952).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $% ifTrue: [ ^ self scan107 ].
	currentCharacter == $& ifTrue: [ ^ self scan106X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan45 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan106X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan107 [
	[ self recordMatch: #(907 908 913 916 927 928).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan39 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan108 [
	[ self recordMatch: #(913 928 952).
	self step.
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $~ ifTrue: [ ^ self scan98 ].
	('%/' includes: currentCharacter) ifTrue: [ ^ self scan37 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan109 [
	[ self recordMatch: #(910 913 928 952).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan110 ].
	currentCharacter == $% ifTrue: [ ^ self scan111 ].
	currentCharacter == $& ifTrue: [ ^ self scan109X2 ].
	currentCharacter == $* ifTrue: [ ^ self scan108 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $~ ifTrue: [ ^ self scan98 ].
	currentCharacter isDigit ] whileTrue.
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(907 908 910 913 927 928 952).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan15 ].
			currentCharacter == $% ifTrue: [ ^ self scan111 ].
			currentCharacter == $& ifTrue: [ ^ self scan109X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan37 ].
			currentCharacter == $? ifTrue: [ ^ self scan14 ].
			currentCharacter == $~ ifTrue: [ ^ self scan45 ].
			('$*' includes: currentCharacter) ifTrue: [ ^ self scan110 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan109X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan109X2 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan11 [
	[ self recordMatch: #(893 930).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan13 ].
	currentCharacter == $? ifTrue: [ ^ self scan11X1 ].
	(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan12 ].
	currentCharacter isDigit ] whileTrue.
	('#*' includes: currentCharacter) ifTrue: [ ^ self scan2 ].
	^ self scan11X2
]

{ #category : #generated }
ABAPScanner >> scan110 [
	[ self recordMatch: #(907 908 913 927 928 952).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $% ifTrue: [ ^ self scan111 ].
	currentCharacter == $& ifTrue: [ ^ self scan110X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan45 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan110X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan111 [
	[ self recordMatch: #(907 908 913 927 928).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan39 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan112 [
	[ self recordMatch: #(892 893 907 908 913 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan113 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan45 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan113 [
	[ self recordMatch: #(892 893 907 908 913 917 927 928 930 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan39 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan114 [
	[ self recordMatch: #(892 893 907 908 913 915 917 927 928 930 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $$ ifTrue: [ ^ self scan113 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan55 ].
	('%*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan115 [
	self recordMatch: #(913 928).
	self step.
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $~
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '*/' includes: currentCharacter ])
		ifTrue: [ ^ self scan37 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan116 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan116 [
	[ self recordMatch: #(913 928).
	self step.
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $/
		ifTrue: [ [ self recordMatch: #(913 928).
			self step.
			currentCharacter == $&
				ifTrue: [ [ self recordMatch: #(928).
					self step.
					(currentCharacter between: $$ and: $&)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			currentCharacter == $~
				ifTrue: [ [ self recordMatch: #(913).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_
														or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			currentCharacter isDigit ] whileTrue.
			('*/' includes: currentCharacter) ifTrue: [ ^ self scan37 ].
			((currentCharacter between: $$ and: $%)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ ^ self scan111 ].
			^ self reportLastMatch ].
	currentCharacter == $~
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan37 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan117 [
	[ self
		recordMatch: #(892 893 907 908 910 913 915 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $$ ifTrue: [ ^ self scan112 ].
	currentCharacter == $% ifTrue: [ ^ self scan114 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan118 ].
	currentCharacter == $/ ifTrue: [ ^ self scan115 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan118 [
	[ self
		recordMatch: #(892 893 907 908 913 915 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $$ ifTrue: [ ^ self scan112 ].
	currentCharacter == $% ifTrue: [ ^ self scan114 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan119 [
	self recordMatch: #(913 915).
	self step.
	('$/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	('%*~' includes: currentCharacter) ifTrue: [ ^ self scan56 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(907 908 913 915 927 952).
			self step.
			('$/' includes: currentCharacter)
				ifTrue: [ [ self recordMatch: #(913).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_
														or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			('%*~' includes: currentCharacter) ifTrue: [ ^ self scan56 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan11X1 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan11X2 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(893 907 908 927 930).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan4 ].
			currentCharacter == $/ ifTrue: [ ^ self scan13 ].
			currentCharacter == $? ifTrue: [ ^ self scan7 ].
			currentCharacter == $~ ifTrue: [ ^ self scan8 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan12 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan12 [
	[ self recordMatch: #(893 907 908 927 930).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $? ifTrue: [ ^ self scan7 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan120 [
	self
		recordMatch: #(892 893 907 908 909 913 915 916 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	^ self scan120X1
]

{ #category : #generated }
ABAPScanner >> scan120X1 [
	currentCharacter == $$ ifTrue: [ ^ self scan44 ].
	currentCharacter == $% ifTrue: [ ^ self scan54 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	(currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan121 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan121 [
	[ self
		recordMatch: #(892 893 907 908 913 915 916 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $$ ifTrue: [ ^ self scan44 ].
	currentCharacter == $% ifTrue: [ ^ self scan54 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan122 [
	self recordMatch: #(12 888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan136 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $= ifTrue: [ ^ self recordAndReportMatch: #(13) ].
	^ self scan122X1
]

{ #category : #generated }
ABAPScanner >> scan122X1 [
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan139 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan123 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan124 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan125 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan126 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan127 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan128 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan129 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan13 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self step.
			currentCharacter == $/
				ifTrue: [ [ self step.
					currentCharacter isDigit ] whileTrue.
					((currentCharacter between: $$ and: $%)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
						ifTrue: [ ^ self scan14 ].
					^ self reportLastMatch ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan130 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $/ ifTrue: [ ^ self scan131 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan131 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan132 [
	self recordMatch: #(922).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $/ ifTrue: [ ^ self scan131 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan133 [
	self recordMatch: #(888 913 921 922 928).
	self step.
	^ self scan133X2
]

{ #category : #generated }
ABAPScanner >> scan133X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan133X2 [
	currentCharacter == $& ifTrue: [ ^ self scan133X1 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $/ and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan40 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan134 [
	self recordMatch: #(888 913 922).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $/ and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ])
		ifTrue: [ ^ self scan41 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan135 [
	self recordMatch: #(922 928).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan135X1 ].
	^ self scan135X3
]

{ #category : #generated }
ABAPScanner >> scan135X1 [
	self recordMatch: #(922 928).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ self scan135X1X1 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan135X1X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue
]

{ #category : #generated }
ABAPScanner >> scan135X2 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue
]

{ #category : #generated }
ABAPScanner >> scan135X3 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $% and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ self scan135X2 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan136 [
	[ self recordMatch: #(888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $/ and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan137 [
	self recordMatch: #(922 926).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(926).
			self step.
			(currentCharacter between: $/ and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan138 [
	self step.
	('\_' includes: currentCharacter)
		ifTrue: [ self step.
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ ('\_' includes: currentCharacter)
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ])
				ifTrue: [ [ self recordMatch: #(929).
					self step.
					(currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ ('\_' includes: currentCharacter)
										or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ]
						whileTrue ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan139 [
	self recordMatch: #(888 913 921 922 925 926 928 948 954).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan140 ].
	^ self scan139X1
]

{ #category : #generated }
ABAPScanner >> scan139X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan194 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan14 [
	[ self recordMatch: #(907 908 927).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan140 [
	self recordMatch: #(888 892 893 913 921 922 926 928 948 953).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan141 ].
	currentCharacter == $$ ifTrue: [ ^ self scan145 ].
	currentCharacter == $% ifTrue: [ ^ self scan153 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan158 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan189 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan193 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan167 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self
				recordMatch: #(888 890 891 892 893 907 908 910 913 915 916 920 921 922 923 926 927 928 933 948 952 953 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan177 ].
			currentCharacter == $$ ifTrue: [ ^ self scan145 ].
			currentCharacter == $% ifTrue: [ ^ self scan153 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan192 ].
			currentCharacter == $/ ifTrue: [ ^ self scan161 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan183 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan184 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan141 [
	self recordMatch: #(893 922 923).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan142 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $* ifTrue: [ ^ self scan141X2 ].
	currentCharacter == $/ ifTrue: [ ^ self scan131 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan143 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $~ ifTrue: [ ^ self scan144 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self scan141X3
]

{ #category : #generated }
ABAPScanner >> scan141X1 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan141X2 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan141X3 [
	((currentCharacter between: $# and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(893 923).
			self step.
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
			currentCharacter == $~ ifTrue: [ ^ self scan29 ].
			('$*' includes: currentCharacter) ifTrue: [ ^ self scan141X1 ].
			(currentCharacter between: $# and: $%)
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan142 [
	self recordMatch: #(893 922).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ self scan142X1 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan142X1 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue
]

{ #category : #generated }
ABAPScanner >> scan143 [
	self recordMatch: #(922 923).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan144 [
	self recordMatch: #(922).
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan30 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan145 [
	self recordMatch: #(888 892 893 907 908 913 916 921 922 927 928 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $% ifTrue: [ ^ self scan146 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan149 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan150 ].
	currentCharacter == $~ ifTrue: [ ^ self scan152 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(888 892 893 907 908 913 916 921 927 928 952 953 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan19 ].
			currentCharacter == $% ifTrue: [ ^ self scan146 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $* ifTrue: [ ^ self scan149 ].
			currentCharacter == $/ ifTrue: [ ^ self scan40 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan148 ].
			currentCharacter == $~ ifTrue: [ ^ self scan46 ].
			currentCharacter == $$
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan146 [
	[ self recordMatch: #(888 892 893 907 908 913 916 921 927 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan147 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan42 ].
	(currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan147 [
	[ self recordMatch: #(892 893 907 908 913 916 927 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan39 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan148 [
	[ self recordMatch: #(892 907 908 927 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan149 [
	[ self recordMatch: #(892 893 907 908 913 916 927 928 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $% ifTrue: [ ^ self scan147 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan45 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan15 [
	[ self recordMatch: #(908).
	self step.
	currentCharacter == $~ ifTrue: [ ^ self scan6 ].
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan150 [
	self recordMatch: #(892 907 908 922 927 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	^ self scan150X1
]

{ #category : #generated }
ABAPScanner >> scan150X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self scan151 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ])
		ifTrue: [ ^ self scan148 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan151 [
	self recordMatch: #(922).
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(907 908 927).
			self step.
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan152 [
	self recordMatch: #(888 913 922).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '/~' includes: currentCharacter ])
		ifTrue: [ ^ self scan41 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan47 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan153 [
	[ self recordMatch: #(888 892 893 907 908 913 915 916 921 923 927 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan154 ].
	currentCharacter == $$ ifTrue: [ ^ self scan146 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan155 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923 956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan57 ].
	currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan154 [
	[ self recordMatch: #(893 908 923).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	currentCharacter == $? ifTrue: [ ^ self scan15 ].
	currentCharacter == $~ ifTrue: [ ^ self scan50 ].
	('$*' includes: currentCharacter) ifTrue: [ ^ self scan19 ].
	(currentCharacter between: $# and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan155 [
	[ self recordMatch: #(892 893 907 908 913 915 916 927 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $$ ifTrue: [ ^ self scan147 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan55 ].
	('%*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan156 [
	self recordMatch: #(922 928 956).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan156X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan156X3 ].
	^ self scan156X4
]

{ #category : #generated }
ABAPScanner >> scan156X1 [
	self recordMatch: #(922 928 956).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan156X1X1 ].
	^ self scan156X1X2
]

{ #category : #generated }
ABAPScanner >> scan156X1X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan156X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan157 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ ^ self scan34 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan156X2 [
	self recordMatch: #(922 956).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan156X3 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan156X4 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan156X2 ].
	currentCharacter == $? ifTrue: [ ^ self scan157 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $% and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ ^ self scan34 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan157 [
	self recordMatch: #(922 956).
	^ self scan157X1
]

{ #category : #generated }
ABAPScanner >> scan157X1 [
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ])
		ifTrue: [ ^ self scan35 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan158 [
	[ self recordMatch: #(892 893 913 915 928 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan158X3 ].
	currentCharacter == $$ ifTrue: [ ^ self scan158X2 ].
	currentCharacter == $% ifTrue: [ ^ self scan158X1 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan160 ].
	currentCharacter == $~ ifTrue: [ ^ self scan102 ].
	currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan158X1 [
	[ self recordMatch: #(892 893 913 915 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan158X1X1 ].
	currentCharacter == $$ ifTrue: [ ^ self scan159 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan160 ].
	currentCharacter == $~ ifTrue: [ ^ self scan56 ].
	('%*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan158X1X1 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan158X2 [
	[ self recordMatch: #(892 893 913 928 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan158X2X1 ].
	currentCharacter == $% ifTrue: [ ^ self scan159 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan160 ].
	currentCharacter == $~ ifTrue: [ ^ self scan98 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan158X2X1 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan158X3 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan159 [
	[ self recordMatch: #(892 893 913 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan159X2 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan160 ].
	currentCharacter == $~ ifTrue: [ ^ self scan159X1 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan159X1 [
	[ self recordMatch: #(913).
	self step.
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_
										or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan159X2 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan16 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan17 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan160 [
	[ self recordMatch: #(892 956).
	self step.
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan161 [
	self recordMatch: #(888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan136 ].
	^ self scan161X1
]

{ #category : #generated }
ABAPScanner >> scan161X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan162 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan162 [
	[ self recordMatch: #(888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan162X1 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan162X1 [
	self recordMatch: #(888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan163 ].
	currentCharacter == $$ ifTrue: [ ^ self scan164 ].
	currentCharacter == $% ifTrue: [ ^ self scan165 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan166 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(888 893 913 921 922 926 928 948).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan163 ].
			currentCharacter == $$ ifTrue: [ ^ self scan164 ].
			currentCharacter == $% ifTrue: [ ^ self scan165 ].
			currentCharacter == $& ifTrue: [ ^ self scan135 ].
			currentCharacter == $* ifTrue: [ ^ self scan166 ].
			currentCharacter == $/ ifTrue: [ ^ self scan161 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan129 ].
			currentCharacter == $? ifTrue: [ ^ self scan137 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan134 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan163 [
	self recordMatch: #(893 922).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan142 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $/ ifTrue: [ ^ self scan131 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	^ self scan163X2
]

{ #category : #generated }
ABAPScanner >> scan163X1 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue
]

{ #category : #generated }
ABAPScanner >> scan163X2 [
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ self scan163X1 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan164 [
	self recordMatch: #(888 893 913 921 922 928).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan164X2 ].
	currentCharacter == $& ifTrue: [ ^ self scan164X1 ].
	^ self scan164X3
]

{ #category : #generated }
ABAPScanner >> scan164X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan164X2 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan164X3 [
	currentCharacter == $* ifTrue: [ ^ self scan166 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan165 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan165 [
	[ self recordMatch: #(888 893 913 921 928).
	self step.
	currentCharacter == $#
		ifTrue: [ [ self recordMatch: #(893).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $* ifTrue: [ ^ self scan166 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $~ ifTrue: [ ^ self scan41 ].
	(currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan166 [
	[ self recordMatch: #(893 913 928).
	self step.
	currentCharacter == $#
		ifTrue: [ [ self recordMatch: #(893).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $~
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan167 [
	[ self
		recordMatch: #(888 890 891 892 893 910 913 915 920 921 922 923 926 928 933 948 952 953 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan141 ].
	currentCharacter == $$ ifTrue: [ ^ self scan168 ].
	currentCharacter == $% ifTrue: [ ^ self scan172 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan158 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan175 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan188 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ] whileTrue.
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self
				recordMatch: #(888 890 891 892 893 907 908 910 913 915 920 921 922 923 926 927 928 933 948 952 953 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan177 ].
			currentCharacter == $$ ifTrue: [ ^ self scan168 ].
			currentCharacter == $% ifTrue: [ ^ self scan172 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan182 ].
			currentCharacter == $/ ifTrue: [ ^ self scan161 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan183 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan184 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan168 [
	self recordMatch: #(888 892 893 907 908 913 921 922 927 928 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $% ifTrue: [ ^ self scan169 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan171 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan150 ].
	currentCharacter == $~ ifTrue: [ ^ self scan152 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(888 892 893 907 908 913 921 927 928 952 953 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan19 ].
			currentCharacter == $% ifTrue: [ ^ self scan169 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $* ifTrue: [ ^ self scan171 ].
			currentCharacter == $/ ifTrue: [ ^ self scan40 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan148 ].
			currentCharacter == $~ ifTrue: [ ^ self scan46 ].
			currentCharacter == $$
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan169 [
	[ self recordMatch: #(888 892 893 907 908 913 921 927 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan170 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan42 ].
	(currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan17 [
	[ self step.
	currentCharacter == $/ ifTrue: [ ^ self scan17X1 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan170 [
	[ self recordMatch: #(892 893 907 908 913 927 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan39 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan171 [
	[ self recordMatch: #(892 893 907 908 913 927 928 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $% ifTrue: [ ^ self scan170 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan45 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan172 [
	[ self recordMatch: #(888 892 893 907 908 913 915 921 923 927 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan154 ].
	currentCharacter == $$ ifTrue: [ ^ self scan169 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan173 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923 956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan57 ].
	currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan173 [
	[ self recordMatch: #(892 893 907 908 913 915 927 928 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $$ ifTrue: [ ^ self scan170 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan55 ].
	('%*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan174 [
	self recordMatch: #(922 923 956).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan124 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan127 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan175 [
	self recordMatch: #(892 922 926 956).
	self step.
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/ ifTrue: [ ^ self scan175X1 ].
	^ self scan175X2
]

{ #category : #generated }
ABAPScanner >> scan175X1 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan175X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan160 ].
	((currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan176 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan176 [
	[ self recordMatch: #(892 926 956).
	self step.
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/
		ifTrue: [ [ self recordMatch: #(926).
			self step.
			(currentCharacter between: $/ and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan160 ].
	(currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan177 [
	self recordMatch: #(893 908 922 923).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan178 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $* ifTrue: [ ^ self scan19 ].
	currentCharacter == $/ ifTrue: [ ^ self scan131 ].
	^ self scan177X1
]

{ #category : #generated }
ABAPScanner >> scan177X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan143 ].
	currentCharacter == $? ifTrue: [ ^ self scan179 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $~ ifTrue: [ ^ self scan181 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan154 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan178 [
	self recordMatch: #(893 908 922).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan179 ].
	currentCharacter == $~ ifTrue: [ ^ self scan180 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ ^ self scan19 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan179 [
	self recordMatch: #(908 922).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $~ ifTrue: [ ^ self scan180 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ])
		ifTrue: [ ^ self scan15 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan17X1 [
	self recordMatch: #(893).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan20 ].
	currentCharacter == $? ifTrue: [ ^ self scan17X1X2 ].
	(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan18 ].
	currentCharacter isDigit ifTrue: [ ^ self scan22 ].
	('#*' includes: currentCharacter) ifTrue: [ ^ self scan17X1X1 ].
	^ self scan17X1X3
]

{ #category : #generated }
ABAPScanner >> scan17X1X1 [
	[ self recordMatch: #(893).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan17X1X2 [
	[ self recordMatch: #(916).
	self step.
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan17X1X3 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(891 893 907 908 916 927).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan19 ].
			currentCharacter == $/ ifTrue: [ ^ self scan20 ].
			currentCharacter == $? ifTrue: [ ^ self scan14 ].
			currentCharacter == $~ ifTrue: [ ^ self scan8 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan18 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan18 [
	[ self recordMatch: #(893 907 908 916 927).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan180 [
	self recordMatch: #(922).
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(908).
			self step.
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan181 [
	self recordMatch: #(922).
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan51 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan182 [
	[ self recordMatch: #(892 893 907 908 913 915 927 928 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $$ ifTrue: [ ^ self scan171 ].
	currentCharacter == $% ifTrue: [ ^ self scan173 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan183 [
	self recordMatch: #(892 907 908 922 926 927 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/ ifTrue: [ ^ self scan183X2 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self scan151 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan148 ].
	((currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(892 907 908 926 927 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan15 ].
			currentCharacter == $& ifTrue: [ ^ self scan35 ].
			currentCharacter == $/ ifTrue: [ ^ self scan183X1 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $~ ifTrue: [ ^ self scan8 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan148 ].
			(currentCharacter between: $0 and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan183X1 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan183X2 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan184 [
	self recordMatch: #(888 913 915 922).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan41 ].
	^ self scan184X1
]

{ #category : #generated }
ABAPScanner >> scan184X1 [
	currentCharacter == $* ifTrue: [ ^ self scan185 ].
	currentCharacter == $/ ifTrue: [ ^ self scan186 ].
	('%~' includes: currentCharacter) ifTrue: [ ^ self scan58 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(888 890 907 908 913 915 920 923 927 931 933 952).
			self step.
			currentCharacter == $* ifTrue: [ ^ self scan56 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
			('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
			('%~' includes: currentCharacter) ifTrue: [ ^ self scan58 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan185 [
	self recordMatch: #(913 915 920 933).
	self step.
	('$/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(('%*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ])
		ifTrue: [ ^ self scan56 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan186 [
	self recordMatch: #(888 913).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '/~' includes: currentCharacter ])
		ifTrue: [ ^ self scan41 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan187 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan187 [
	[ self recordMatch: #(888 913).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $/
		ifTrue: [ self recordMatch: #(888 913).
			self step.
			currentCharacter == $*
				ifTrue: [ self recordMatch: #(913 920).
					self step.
					((currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_
														or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ])
						ifTrue: [ [ self recordMatch: #(913).
							self step.
							(currentCharacter between: $$ and: $%)
								or: [ currentCharacter == $*
										or: [ (currentCharacter between: $/ and: $9)
												or: [ (currentCharacter between: $A and: $Z)
														or: [ currentCharacter == $_
																or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
								whileTrue ].
					^ self reportLastMatch ].
			((currentCharacter between: $$ and: $%)
				or: [ '/~' includes: currentCharacter ]) ifTrue: [ ^ self scan41 ].
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ [ self recordMatch: #(888 913 920 931).
					self step.
					currentCharacter == $*
						ifTrue: [ [ self recordMatch: #(913).
							self step.
							(currentCharacter between: $$ and: $%)
								or: [ currentCharacter == $*
										or: [ (currentCharacter between: $/ and: $9)
												or: [ (currentCharacter between: $A and: $Z)
														or: [ currentCharacter == $_
																or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
								whileTrue.
							^ self reportLastMatch ].
					((currentCharacter between: $$ and: $%)
						or: [ '/~' includes: currentCharacter ]) ifTrue: [ ^ self scan41 ].
					(currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
						whileTrue ].
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $~ ])
		ifTrue: [ ^ self scan41 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan188 [
	self recordMatch: #(888 913 915 922).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan41 ].
	^ self scan188X1
]

{ #category : #generated }
ABAPScanner >> scan188X1 [
	currentCharacter == $* ifTrue: [ ^ self scan185 ].
	currentCharacter == $/ ifTrue: [ ^ self scan186 ].
	('%~' includes: currentCharacter) ifTrue: [ ^ self scan58 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(888 890 913 915 920 923 931 933 952).
			self step.
			currentCharacter == $* ifTrue: [ ^ self scan56 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
			('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
			('%~' includes: currentCharacter) ifTrue: [ ^ self scan58 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan189 [
	self recordMatch: #(892 916 922 926 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan190 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/ ifTrue: [ ^ self scan189X2 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan176 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self scan189X3
]

{ #category : #generated }
ABAPScanner >> scan189X1 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan189X2 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan189X3 [
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan191 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(892 916 926 956).
			self step.
			currentCharacter == $& ifTrue: [ ^ self scan35 ].
			currentCharacter == $/ ifTrue: [ ^ self scan189X1 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan176 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan191 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan19 [
	[ self recordMatch: #(893 908).
	self step.
	currentCharacter == $? ifTrue: [ ^ self scan15 ].
	currentCharacter == $~ ifTrue: [ ^ self scan6 ].
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan190 [
	self step.
	currentCharacter == $*
		ifTrue: [ self step.
			(('%*' includes: currentCharacter)
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_
										or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ])
				ifTrue: [ [ self recordMatch: #(915).
					self step.
					('%*' includes: currentCharacter)
						or: [ (currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ]
						whileTrue ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan191 [
	[ self recordMatch: #(892 916 956).
	self step.
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan160 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan192 [
	[ self recordMatch: #(892 893 907 908 913 915 916 927 928 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $$ ifTrue: [ ^ self scan149 ].
	currentCharacter == $% ifTrue: [ ^ self scan155 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan148 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan193 [
	self recordMatch: #(888 913 915 922).
	self step.
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	(currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ])
		ifTrue: [ ^ self scan58 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan194 [
	self recordMatch: #(888 913 921 922 925 926 928 948 954).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan140 ].
	^ self scan194X1
]

{ #category : #generated }
ABAPScanner >> scan194X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan195 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan195 [
	[ self recordMatch: #(888 913 921 922 925 926 928 948 954).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan196 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan196 [
	self recordMatch: #(888 892 893 913 921 922 926 928 948 953).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan141 ].
	currentCharacter == $$ ifTrue: [ ^ self scan145 ].
	currentCharacter == $% ifTrue: [ ^ self scan153 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan158 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan189 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan193 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan197 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self
				recordMatch: #(888 889 890 891 892 893 907 908 910 913 915 916 920 921 922 923 926 927 928 933 948 952 953 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan177 ].
			currentCharacter == $$ ifTrue: [ ^ self scan145 ].
			currentCharacter == $% ifTrue: [ ^ self scan153 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan192 ].
			currentCharacter == $/ ifTrue: [ ^ self scan161 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan183 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan184 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan197 [
	[ self
		recordMatch: #(888 889 890 891 892 893 910 913 915 920 921 922 923 926 928 933 948 952 953 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan141 ].
	currentCharacter == $$ ifTrue: [ ^ self scan168 ].
	currentCharacter == $% ifTrue: [ ^ self scan172 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan158 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan175 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan188 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ] whileTrue.
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self
				recordMatch: #(888 889 890 891 892 893 907 908 910 913 915 920 921 922 923 926 927 928 933 948 952 953 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan177 ].
			currentCharacter == $$ ifTrue: [ ^ self scan168 ].
			currentCharacter == $% ifTrue: [ ^ self scan172 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan182 ].
			currentCharacter == $/ ifTrue: [ ^ self scan161 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan183 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan184 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan198 [
	self recordMatch: #(893 922 923 930).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan198X1 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $* ifTrue: [ ^ self scan2 ].
	currentCharacter == $/ ifTrue: [ ^ self scan131 ].
	^ self scan198X2
]

{ #category : #generated }
ABAPScanner >> scan198X1 [
	self recordMatch: #(893 922 930).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan199 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ ^ self scan2 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan198X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan143 ].
	currentCharacter == $? ifTrue: [ ^ self scan199 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $~ ifTrue: [ ^ self scan144 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan28 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan199 [
	self recordMatch: #(922 930).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ])
		ifTrue: [ [ self recordMatch: #(930).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan1X1 [
	[ self recordMatch: #(916 930).
	self step.
	('#?' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(930).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan1X2 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(891 893 907 908 916 927 930).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan4 ].
			currentCharacter == $/ ifTrue: [ ^ self scan26 ].
			currentCharacter == $? ifTrue: [ ^ self scan7 ].
			currentCharacter == $~ ifTrue: [ ^ self scan8 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan3 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan2 [
	[ self recordMatch: #(893 930).
	self step.
	currentCharacter == $?
		ifTrue: [ [ self recordMatch: #(930).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan20 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan21 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan200 [
	self
		recordMatch: #(888 892 893 894 907 908 913 917 921 922 927 928 930 946 949 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan202 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan112 ].
	^ self scan200X1
]

{ #category : #generated }
ABAPScanner >> scan200X1 [
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan203 ].
	currentCharacter == $~ ifTrue: [ ^ self scan152 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan201 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan201 [
	[ self
		recordMatch: #(888 892 893 894 907 908 913 917 921 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan202 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan112 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan46 ].
	currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan202 [
	[ self
		recordMatch: #(888 892 893 894 907 908 913 917 921 927 928 930 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan113 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan42 ].
	(currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan203 [
	self recordMatch: #(892 907 908 922 927 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	^ self scan203X1
]

{ #category : #generated }
ABAPScanner >> scan203X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self scan151 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ])
		ifTrue: [ ^ self scan38 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan204 [
	self
		recordMatch: #(888 892 893 894 902 907 908 913 915 917 921 923 927 928 930 943 946 947 949 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan49 ].
	^ self scan204X1
]

{ #category : #generated }
ABAPScanner >> scan204X1 [
	currentCharacter == $$ ifTrue: [ ^ self scan202 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan114 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923 956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan57 ].
	(currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan205 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan205 [
	[ self
		recordMatch: #(888 892 893 894 902 907 908 913 915 917 921 923 927 928 930 943 947 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan49 ].
	currentCharacter == $$ ifTrue: [ ^ self scan202 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan114 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923 956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan57 ].
	currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan206 [
	self recordMatch: #(888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan136 ].
	^ self scan206X1
]

{ #category : #generated }
ABAPScanner >> scan206X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan207 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan207 [
	self recordMatch: #(888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan208 ].
	^ self scan207X1
]

{ #category : #generated }
ABAPScanner >> scan207X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan218 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan208 [
	self recordMatch: #(888 892 893 913 921 922 926 928 948 953).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan163 ].
	currentCharacter == $$ ifTrue: [ ^ self scan209 ].
	currentCharacter == $% ifTrue: [ ^ self scan210 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan213 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan214 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit
		ifTrue: [ [ self recordMatch: #(888 891 892 893 913 921 922 926 928 948 953).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan163 ].
			currentCharacter == $$ ifTrue: [ ^ self scan209 ].
			currentCharacter == $% ifTrue: [ ^ self scan210 ].
			currentCharacter == $& ifTrue: [ ^ self scan135 ].
			currentCharacter == $* ifTrue: [ ^ self scan213 ].
			currentCharacter == $/ ifTrue: [ ^ self scan161 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan129 ].
			currentCharacter == $? ifTrue: [ ^ self scan214 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan134 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			currentCharacter isDigit ] whileTrue ].
	^ self scan208X1
]

{ #category : #generated }
ABAPScanner >> scan208X1 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan215 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan209 [
	self recordMatch: #(888 892 893 907 908 913 921 922 927 928 953).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $& ifTrue: [ ^ self scan209X2 ].
	^ self scan209X3
]

{ #category : #generated }
ABAPScanner >> scan209X1 [
	self recordMatch: #(892 907 908 922 927).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $~ ifTrue: [ ^ self scan151 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ])
		ifTrue: [ ^ self scan81 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan209X2 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan209X3 [
	currentCharacter == $* ifTrue: [ ^ self scan211 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan209X1 ].
	currentCharacter == $~ ifTrue: [ ^ self scan212 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan210 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan21 [
	[ self step.
	currentCharacter == $/
		ifTrue: [ self step.
			currentCharacter == $/ ifTrue: [ ^ self scan20 ].
			((currentCharacter between: $# and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ [ self recordMatch: #(893).
					self step.
					(currentCharacter between: $# and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $0 and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ [ self recordMatch: #(893).
					self step.
					currentCharacter == $/ ifTrue: [ ^ self scan20 ].
					((currentCharacter between: $# and: $%) or: [ currentCharacter == $* ])
						ifTrue: [ [ self recordMatch: #(893).
							self step.
							(currentCharacter between: $# and: $%)
								or: [ currentCharacter == $*
										or: [ (currentCharacter between: $0 and: $9)
												or: [ (currentCharacter between: $A and: $Z)
														or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
								whileTrue.
							^ self reportLastMatch ].
					(currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
						whileTrue ].
			^ self reportLastMatch ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan210 [
	[ self recordMatch: #(888 892 893 907 908 913 921 927 928 953).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $* ifTrue: [ ^ self scan211 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $? ifTrue: [ ^ self scan81 ].
	currentCharacter == $~ ifTrue: [ ^ self scan42 ].
	(currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan211 [
	[ self recordMatch: #(892 893 907 908 913 927 928 953).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $? ifTrue: [ ^ self scan81 ].
	currentCharacter == $~ ifTrue: [ ^ self scan39 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan212 [
	self recordMatch: #(888 913 922).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '/~' includes: currentCharacter ])
		ifTrue: [ ^ self scan41 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan43 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan213 [
	[ self recordMatch: #(892 893 913 928 953).
	self step.
	currentCharacter == $#
		ifTrue: [ [ self recordMatch: #(893).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $?
		ifTrue: [ [ self recordMatch: #(892).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $~
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan214 [
	self recordMatch: #(892 922 926).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan214X4 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	^ self scan214X5
]

{ #category : #generated }
ABAPScanner >> scan214X1 [
	[ self recordMatch: #(892).
	self step.
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan214X2 [
	[ self recordMatch: #(892).
	self step.
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan214X3 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan214X4 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan214X5 [
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan214X2 ].
	((currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(892 926).
			self step.
			currentCharacter == $/ ifTrue: [ ^ self scan214X3 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan214X1 ].
			(currentCharacter between: $0 and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan215 [
	[ self recordMatch: #(888 891 892 893 907 908 913 921 922 926 927 928 948 953).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan216 ].
	currentCharacter == $$ ifTrue: [ ^ self scan209 ].
	currentCharacter == $% ifTrue: [ ^ self scan210 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan211 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan217 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan212 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan216 [
	self recordMatch: #(893 908 922).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan178 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $/ ifTrue: [ ^ self scan131 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	^ self scan216X1
]

{ #category : #generated }
ABAPScanner >> scan216X1 [
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan179 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $~ ifTrue: [ ^ self scan180 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ ^ self scan19 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan217 [
	self recordMatch: #(892 907 908 922 926 927).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $/ ifTrue: [ ^ self scan217X2 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $~ ifTrue: [ ^ self scan151 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self scan217X3
]

{ #category : #generated }
ABAPScanner >> scan217X1 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan217X2 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan217X3 [
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan81 ].
	((currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(892 907 908 926 927).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan15 ].
			currentCharacter == $/ ifTrue: [ ^ self scan217X1 ].
			currentCharacter == $~ ifTrue: [ ^ self scan8 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan81 ].
			(currentCharacter between: $0 and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan218 [
	self recordMatch: #(888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan208 ].
	^ self scan218X1
]

{ #category : #generated }
ABAPScanner >> scan218X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan219 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan219 [
	[ self recordMatch: #(888 913 921 922 926 928 948).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan130 ].
	currentCharacter == $$ ifTrue: [ ^ self scan133 ].
	currentCharacter == $% ifTrue: [ ^ self scan40 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $/ ifTrue: [ ^ self scan219X1 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan137 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan219X1 [
	self recordMatch: #(888 892 893 913 921 922 926 928 948 953).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan163 ].
	currentCharacter == $$ ifTrue: [ ^ self scan209 ].
	currentCharacter == $% ifTrue: [ ^ self scan210 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan213 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan214 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan134 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit
		ifTrue: [ [ self recordMatch: #(888 889 891 892 893 913 921 922 926 928 948 953).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan163 ].
			currentCharacter == $$ ifTrue: [ ^ self scan209 ].
			currentCharacter == $% ifTrue: [ ^ self scan210 ].
			currentCharacter == $& ifTrue: [ ^ self scan135 ].
			currentCharacter == $* ifTrue: [ ^ self scan213 ].
			currentCharacter == $/ ifTrue: [ ^ self scan161 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan129 ].
			currentCharacter == $? ifTrue: [ ^ self scan214 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan134 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			currentCharacter isDigit ] whileTrue ].
	^ self scan219X1X1
]

{ #category : #generated }
ABAPScanner >> scan219X1X1 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan220 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan22 [
	[ self recordMatch: #(891 893).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan20 ].
	(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan23 ].
	currentCharacter isDigit ] whileTrue.
	('#*' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(893).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan24 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan220 [
	[ self
		recordMatch: #(888 889 891 892 893 907 908 913 921 922 926 927 928 948 953).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan216 ].
	currentCharacter == $$ ifTrue: [ ^ self scan209 ].
	currentCharacter == $% ifTrue: [ ^ self scan210 ].
	currentCharacter == $& ifTrue: [ ^ self scan135 ].
	currentCharacter == $* ifTrue: [ ^ self scan211 ].
	currentCharacter == $/ ifTrue: [ ^ self scan161 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan129 ].
	currentCharacter == $? ifTrue: [ ^ self scan217 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan212 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan221 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan222 ].
	currentCharacter == $% ifTrue: [ ^ self scan205 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan100 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan221X1
]

{ #category : #generated }
ABAPScanner >> scan221X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan233 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan223 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan235 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan222 [
	self
		recordMatch: #(888 892 893 894 907 908 913 917 921 922 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan202 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan112 ].
	^ self scan222X1
]

{ #category : #generated }
ABAPScanner >> scan222X1 [
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan203 ].
	currentCharacter == $~ ifTrue: [ ^ self scan152 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan201 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan223 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 901 902 909 910 912 913 915 917 920 921 922 923 924 925 926 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan222 ].
	currentCharacter == $% ifTrue: [ ^ self scan205 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan101 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan233 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 901 902 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 944 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan198 ].
			currentCharacter == $$ ifTrue: [ ^ self scan222 ].
			currentCharacter == $% ifTrue: [ ^ self scan205 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan101 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan224 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan233 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			currentCharacter isDigit
				ifTrue: [ [ self
						recordMatch: #(887 888 889 890 891 892 893 894 901 902 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan198 ].
					currentCharacter == $$ ifTrue: [ ^ self scan222 ].
					currentCharacter == $% ifTrue: [ ^ self scan205 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan101 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan224 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan233 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
					currentCharacter isDigit ] whileTrue ] ].
	^ self scan223X1
]

{ #category : #generated }
ABAPScanner >> scan223X1 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan226 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan224 [
	self recordMatch: #(892 922 926 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan224X1 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/ ifTrue: [ ^ self scan224X2 ].
	^ self scan224X3
]

{ #category : #generated }
ABAPScanner >> scan224X1 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan224X2 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan224X3 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan68 ].
	((currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan225 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan225 [
	[ self recordMatch: #(892 926 930 956).
	self step.
	currentCharacter == $#
		ifTrue: [ [ self recordMatch: #(930).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/
		ifTrue: [ [ self recordMatch: #(926).
			self step.
			(currentCharacter between: $/ and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan68 ].
	(currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan226 [
	[ self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan222 ].
	currentCharacter == $% ifTrue: [ ^ self scan205 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan118 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan227 [
	self recordMatch: #(893 908 922 923 930).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $$ ifTrue: [ ^ self scan227X1 ].
	currentCharacter == $& ifTrue: [ ^ self scan128 ].
	currentCharacter == $* ifTrue: [ ^ self scan4 ].
	currentCharacter == $/ ifTrue: [ ^ self scan131 ].
	^ self scan227X2
]

{ #category : #generated }
ABAPScanner >> scan227X1 [
	self recordMatch: #(893 908 922 930).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $? ifTrue: [ ^ self scan228 ].
	currentCharacter == $~ ifTrue: [ ^ self scan180 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ ^ self scan4 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan227X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan143 ].
	currentCharacter == $? ifTrue: [ ^ self scan228 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $~ ifTrue: [ ^ self scan181 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan49 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan228 [
	self recordMatch: #(908 922 930).
	self step.
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $~ ifTrue: [ ^ self scan180 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ])
		ifTrue: [ ^ self scan5 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan229 [
	self recordMatch: #(892 907 908 922 926 927 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/ ifTrue: [ ^ self scan229X2 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self scan151 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan38 ].
	((currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(892 907 908 926 927 930 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan5 ].
			currentCharacter == $& ifTrue: [ ^ self scan35 ].
			currentCharacter == $/ ifTrue: [ ^ self scan229X1 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $~ ifTrue: [ ^ self scan8 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan38 ].
			(currentCharacter between: $0 and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan229X1 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan229X2 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan23 [
	[ self recordMatch: #(893 907 908 927).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan230 [
	self recordMatch: #(888 913 915 922 924).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan41 ].
	currentCharacter == $% ifTrue: [ ^ self scan58 ].
	currentCharacter == $* ifTrue: [ ^ self scan185 ].
	currentCharacter == $/ ifTrue: [ ^ self scan186 ].
	currentCharacter == $~ ifTrue: [ ^ self scan232 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan231 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan231 [
	[ self recordMatch: #(888 890 907 908 913 915 920 923 924 927 931 933 952).
	self step.
	currentCharacter == $% ifTrue: [ ^ self scan58 ].
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	currentCharacter == $~ ifTrue: [ ^ self scan232 ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan232 [
	[ self recordMatch: #(888 913 915 924).
	self step.
	currentCharacter == $% ifTrue: [ ^ self scan58 ].
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_
						or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan233 [
	self recordMatch: #(888 913 915 922 924).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan41 ].
	currentCharacter == $% ifTrue: [ ^ self scan58 ].
	currentCharacter == $* ifTrue: [ ^ self scan185 ].
	currentCharacter == $/ ifTrue: [ ^ self scan186 ].
	currentCharacter == $~ ifTrue: [ ^ self scan232 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan234 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan234 [
	[ self recordMatch: #(888 890 913 915 920 923 924 931 933 952).
	self step.
	currentCharacter == $% ifTrue: [ ^ self scan58 ].
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	currentCharacter == $~ ifTrue: [ ^ self scan232 ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan235 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan222 ].
	currentCharacter == $% ifTrue: [ ^ self scan205 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan118 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan235X1
]

{ #category : #generated }
ABAPScanner >> scan235X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan226 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan236 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 946 947 948 949 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan222 ].
	currentCharacter == $% ifTrue: [ ^ self scan205 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan100 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan236X1
]

{ #category : #generated }
ABAPScanner >> scan236X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan233 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan223 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan235 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan237 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan222 ].
	currentCharacter == $% ifTrue: [ ^ self scan205 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan237X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan237X2
]

{ #category : #generated }
ABAPScanner >> scan237X1 [
	self
		recordMatch: #(892 893 907 908 909 913 915 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	^ self scan237X1X1
]

{ #category : #generated }
ABAPScanner >> scan237X1X1 [
	currentCharacter == $$ ifTrue: [ ^ self scan112 ].
	currentCharacter == $% ifTrue: [ ^ self scan114 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	(currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan118 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan237X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan235 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan238 [
	self recordMatch: #(888 913 915 922 924 949).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan41 ].
	currentCharacter == $% ifTrue: [ ^ self scan58 ].
	currentCharacter == $* ifTrue: [ ^ self scan185 ].
	currentCharacter == $/ ifTrue: [ ^ self scan186 ].
	currentCharacter == $~ ifTrue: [ ^ self scan232 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan234 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan239 [
	[ self recordMatch: #(923).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	currentCharacter == $~ ifTrue: [ ^ self scan29 ].
	('#%' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan24 [
	[ self recordMatch: #(891 893 907 908 927).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan19 ].
	currentCharacter == $/ ifTrue: [ ^ self scan20 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan23 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan240 [
	[ self step.
	currentCharacter == $- ifTrue: [ ^ self scan241 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(918) ].
	currentCharacter == $? ifTrue: [ ^ self scan242 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan241 [
	self step.
	((currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ [ self step.
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(919) ].
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan242 [
	[ self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(918) ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan243 [
	[ self recordMatch: #(923).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan239 ].
	currentCharacter == $- ifTrue: [ ^ self scan241 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(918 923) ].
	currentCharacter == $? ifTrue: [ ^ self scan242 ].
	currentCharacter == $~ ifTrue: [ ^ self scan29 ].
	('$*/' includes: currentCharacter) ifTrue: [ ^ self scan240 ].
	currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan244 [
	self recordMatch: #(892 916 926 930 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan190 ].
	^ self scan244X4
]

{ #category : #generated }
ABAPScanner >> scan244X1 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan244X2 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan244X3 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan252 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan244X4 [
	currentCharacter == $# ifTrue: [ ^ self scan244X2 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $* ifTrue: [ ^ self scan247 ].
	currentCharacter == $/ ifTrue: [ ^ self scan249 ].
	currentCharacter == $= ifTrue: [ ^ self recordAndReportMatch: #(30) ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan225 ].
	(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan245 ].
	currentCharacter isDigit
		ifTrue: [ [ self recordMatch: #(892 916 926 930 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan244X1 ].
			currentCharacter == $& ifTrue: [ ^ self scan35 ].
			currentCharacter == $* ifTrue: [ ^ self scan89 ].
			currentCharacter == $/ ifTrue: [ ^ self scan249 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan225 ].
			(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan245 ].
			currentCharacter isDigit ] whileTrue ].
	^ self scan244X3
]

{ #category : #generated }
ABAPScanner >> scan245 [
	[ self recordMatch: #(892 908 916 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan246 ].
	currentCharacter == $~ ifTrue: [ ^ self scan6 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan246 [
	[ self recordMatch: #(892 908 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self scan6 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan247 [
	[ self recordMatch: #(892 916 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan247X1 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $* ifTrue: [ ^ self scan89 ].
	currentCharacter == $/ ifTrue: [ ^ self scan248 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan245 ].
	currentCharacter isDigit ] whileTrue.
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(892 908 916 930 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan5 ].
			currentCharacter == $& ifTrue: [ ^ self scan35 ].
			currentCharacter == $/ ifTrue: [ ^ self scan248 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan246 ].
			currentCharacter == $~ ifTrue: [ ^ self scan6 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan245 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan247X1 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan248 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self step.
			currentCharacter == $/
				ifTrue: [ [ self step.
					currentCharacter isDigit ] whileTrue.
					((currentCharacter between: $$ and: $%)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
						ifTrue: [ ^ self scan15 ].
					^ self reportLastMatch ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan249 [
	self recordMatch: #(926).
	self step.
	('/?' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(926).
			self step.
			(currentCharacter between: $/ and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan250 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan25 [
	[ self recordMatch: #(891 893 930).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan26 ].
	currentCharacter == $? ifTrue: [ ^ self scan25X1 ].
	(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan12 ].
	currentCharacter isDigit ] whileTrue.
	('#*' includes: currentCharacter) ifTrue: [ ^ self scan2 ].
	^ self scan25X2
]

{ #category : #generated }
ABAPScanner >> scan250 [
	[ self recordMatch: #(926).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan251 ].
	currentCharacter == $?
		ifTrue: [ [ self recordMatch: #(926).
			self step.
			(currentCharacter between: $/ and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan251 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan15 ].
	currentCharacter isDigit ] whileTrue.
	('/?' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(926).
			self step.
			(currentCharacter between: $/ and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(908 926).
			self step.
			currentCharacter == $/
				ifTrue: [ [ self recordMatch: #(926).
					self step.
					(currentCharacter between: $/ and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			currentCharacter == $~ ifTrue: [ ^ self scan6 ].
			((currentCharacter between: $# and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan15 ].
			(currentCharacter between: $0 and: $9)
				or: [ currentCharacter == $?
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan252 [
	[ self recordMatch: #(892 908 916 926 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/ ifTrue: [ ^ self scan249 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan252X1 ].
	currentCharacter == $~ ifTrue: [ ^ self scan6 ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan245 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan252X1 [
	[ self recordMatch: #(892 908 926 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $/ ifTrue: [ ^ self scan252X1X1 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self scan6 ].
	((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
		ifTrue: [ ^ self scan246 ].
	(currentCharacter between: $0 and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan252X1X1 [
	[ self recordMatch: #(926).
	self step.
	(currentCharacter between: $/ and: $9)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan253 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	^ self scan253X1
]

{ #category : #generated }
ABAPScanner >> scan253X1 [
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan256 ].
	('Bb' includes: currentCharacter) ifTrue: [ ^ self scan261 ].
	('Dd' includes: currentCharacter) ifTrue: [ ^ self scan262 ].
	('Uu' includes: currentCharacter) ifTrue: [ ^ self scan263 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan254 [
	self
		recordMatch: #(888 892 893 894 907 908 913 916 917 921 922 927 928 930 946 949 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan33 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan44 ].
	^ self scan254X1
]

{ #category : #generated }
ABAPScanner >> scan254X1 [
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan203 ].
	currentCharacter == $~ ifTrue: [ ^ self scan152 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan32 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan255 [
	self
		recordMatch: #(892 893 907 908 909 913 915 916 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	^ self scan255X1
]

{ #category : #generated }
ABAPScanner >> scan255X1 [
	currentCharacter == $$ ifTrue: [ ^ self scan44 ].
	currentCharacter == $% ifTrue: [ ^ self scan54 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	(currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan120 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan256 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan256X2
]

{ #category : #generated }
ABAPScanner >> scan256X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan256X1X2
]

{ #category : #generated }
ABAPScanner >> scan256X1X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 911 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan256X1X1X1
]

{ #category : #generated }
ABAPScanner >> scan256X1X1X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan256X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan256X1X1 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan256X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan256X1 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan257 [
	self
		recordMatch: #(888 892 893 894 907 908 913 916 917 921 922 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan33 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan44 ].
	^ self scan257X1
]

{ #category : #generated }
ABAPScanner >> scan257X1 [
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan203 ].
	currentCharacter == $~ ifTrue: [ ^ self scan152 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan32 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan258 [
	[ self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan259 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan259X1
]

{ #category : #generated }
ABAPScanner >> scan259X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan25X1 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan25X2 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(891 893 907 908 927 930).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan4 ].
			currentCharacter == $/ ifTrue: [ ^ self scan26 ].
			currentCharacter == $? ifTrue: [ ^ self scan7 ].
			currentCharacter == $~ ifTrue: [ ^ self scan8 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan12 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan26 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self step.
			currentCharacter == $/
				ifTrue: [ self recordMatch: #(893).
					self step.
					currentCharacter == $/ ifTrue: [ ^ self scan20 ].
					(currentCharacter between: $$ and: $%) ifTrue: [ ^ self scan23 ].
					currentCharacter isDigit ifTrue: [ ^ self scan22 ].
					('#*' includes: currentCharacter)
						ifTrue: [ [ self recordMatch: #(893).
							self step.
							(currentCharacter between: $# and: $%)
								or: [ currentCharacter == $*
										or: [ (currentCharacter between: $0 and: $9)
												or: [ (currentCharacter between: $A and: $Z)
														or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
								whileTrue.
							^ self reportLastMatch ].
					((currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
						ifTrue: [ ^ self scan24 ].
					^ self reportLastMatch ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan260 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan260X1
]

{ #category : #generated }
ABAPScanner >> scan260X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan261 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan261X2
]

{ #category : #generated }
ABAPScanner >> scan261X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan261X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan261X1X2
]

{ #category : #generated }
ABAPScanner >> scan261X1X1 [
	self step.
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Uu' includes: currentCharacter)
						ifTrue: [ self step.
							('Rr' includes: currentCharacter)
								ifTrue: [ self step.
									('Cc' includes: currentCharacter)
										ifTrue: [ self step.
											('Ee' includes: currentCharacter)
												ifTrue: [ ^ self recordAndReportMatch: #(32) ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan261X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan261X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan261X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan262 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan262X2
]

{ #category : #generated }
ABAPScanner >> scan262X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan262X1X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan262X1X2
]

{ #category : #generated }
ABAPScanner >> scan262X1X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Rr' includes: currentCharacter)
						ifTrue: [ self step.
							('Rr' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Pp' includes: currentCharacter)
														ifTrue: [ self step.
															('Oo' includes: currentCharacter)
																ifTrue: [ self step.
																	('Nn' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Dd' includes: currentCharacter)
																				ifTrue: [ self step.
																					('Ii' includes: currentCharacter)
																						ifTrue: [ self step.
																							('Nn' includes: currentCharacter)
																								ifTrue: [ self step.
																									('Gg' includes: currentCharacter)
																										ifTrue: [ ^ self recordAndReportMatch: #(43) ] ] ] ] ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan262X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan262X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Dd' includes: currentCharacter) ifTrue: [ ^ self scan262X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan263 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan263X1
]

{ #category : #generated }
ABAPScanner >> scan263X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan264 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan264 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan264X1
]

{ #category : #generated }
ABAPScanner >> scan264X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Hh' includes: currentCharacter) ifTrue: [ ^ self scan265 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan265 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan265X1
]

{ #category : #generated }
ABAPScanner >> scan265X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan266 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan266 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan266X1
]

{ #category : #generated }
ABAPScanner >> scan266X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan267 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan267 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan267X1
]

{ #category : #generated }
ABAPScanner >> scan267X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan268 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan268 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Yy' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan268X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan268X2
]

{ #category : #generated }
ABAPScanner >> scan268X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Hh' includes: currentCharacter)
				ifTrue: [ self step.
					('Ee' includes: currentCharacter)
						ifTrue: [ self step.
							('Cc' includes: currentCharacter)
								ifTrue: [ self step.
									('Kk' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(75) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan268X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan269 [
	self recordMatch: #(888 913 915 922 924 949).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scan41 ].
	currentCharacter == $% ifTrue: [ ^ self scan58 ].
	currentCharacter == $* ifTrue: [ ^ self scan185 ].
	currentCharacter == $/ ifTrue: [ ^ self scan186 ].
	currentCharacter == $~ ifTrue: [ ^ self scan232 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan231 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan27 [
	self recordMatch: #(1 893 923 930).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan27X1 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	currentCharacter == $? ifTrue: [ ^ self scan27X2 ].
	currentCharacter == $~ ifTrue: [ ^ self scan29 ].
	('$*' includes: currentCharacter) ifTrue: [ ^ self scan2 ].
	(currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan28 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan270 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	^ self scan270X1
]

{ #category : #generated }
ABAPScanner >> scan270X1 [
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan271 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan272 ].
	('Yy' includes: currentCharacter) ifTrue: [ ^ self scan274 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan271 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan271X2
]

{ #category : #generated }
ABAPScanner >> scan271X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan271X1X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan271X1X2
]

{ #category : #generated }
ABAPScanner >> scan271X1X1 [
	self step.
	('Aa' includes: currentCharacter)
		ifTrue: [ self step.
			('Nn' includes: currentCharacter)
				ifTrue: [ self step.
					('Dd' includes: currentCharacter)
						ifTrue: [ ^ self recordAndReportMatch: #(90) ] ].
			^ self reportLastMatch ].
	('Nn' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Tt' includes: currentCharacter)
						ifTrue: [ ^ self recordAndReportMatch: #(91) ] ].
			^ self reportLastMatch ].
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Rr' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(92) ].
			^ self reportLastMatch ].
	('Xx' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Rr' includes: currentCharacter)
						ifTrue: [ ^ self recordAndReportMatch: #(93) ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan271X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan271X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan271X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan272 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan272X1
]

{ #category : #generated }
ABAPScanner >> scan272X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan273 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan273 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan273X2
]

{ #category : #generated }
ABAPScanner >> scan273X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Kk' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan273X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan273X1X2
]

{ #category : #generated }
ABAPScanner >> scan273X1X1 [
	self step.
	('Pp' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Ii' includes: currentCharacter)
						ifTrue: [ self step.
							('Nn' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(104) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan273X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan273X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan273X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan274 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan274X1
]

{ #category : #generated }
ABAPScanner >> scan274X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan275 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan275 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan275X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan275X2
]

{ #category : #generated }
ABAPScanner >> scan275X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(109) ].
			('Nn' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(110) ].
			('Oo' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(111) ].
			('Ss' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(112) ].
			^ self reportLastMatch ].
	('Nn' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(113) ].
			('Ss' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(114) ].
			^ self reportLastMatch ].
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Rr' includes: currentCharacter)
				ifTrue: [ self step.
					('Dd' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ self step.
									('Rr' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(115) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan275X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan276 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	^ self scan276X1
]

{ #category : #generated }
ABAPScanner >> scan276X1 [
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Hh' includes: currentCharacter) ifTrue: [ ^ self scan277 ].
	('Ll' includes: currentCharacter) ifTrue: [ ^ self scan280 ].
	('Uu' includes: currentCharacter) ifTrue: [ ^ self scan283 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan277 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan277X1
]

{ #category : #generated }
ABAPScanner >> scan277X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan278 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan278 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan279 ].
	('Rr' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan278X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan278X2
]

{ #category : #generated }
ABAPScanner >> scan278X1 [
	self step.
	('Tt' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					currentCharacter == $-
						ifTrue: [ self step.
							('Hh' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Xx' includes: currentCharacter)
												ifTrue: [ ^ self recordAndReportMatch: #(133) ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan278X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan279 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan279X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan279X2
]

{ #category : #generated }
ABAPScanner >> scan279X1 [
	self step.
	('Ii' includes: currentCharacter)
		ifTrue: [ self step.
			('Nn' includes: currentCharacter)
				ifTrue: [ self step.
					('Pp' includes: currentCharacter)
						ifTrue: [ self step.
							('Uu' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(127) ] ] ] ].
			^ self reportLastMatch ].
	('Rr' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Qq' includes: currentCharacter)
						ifTrue: [ self step.
							('Uu' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Tt' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(128) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan279X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan27X1 [
	self recordMatch: #(893 923 930).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	currentCharacter == $? ifTrue: [ ^ self scan27X1X2 ].
	currentCharacter == $~ ifTrue: [ ^ self scan29 ].
	('#%' includes: currentCharacter) ifTrue: [ ^ self scan28 ].
	('$*' includes: currentCharacter) ifTrue: [ ^ self scan2 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(893 923 930 940).
			self step.
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
			currentCharacter == $? ifTrue: [ ^ self scan27X1X1 ].
			currentCharacter == $[ ifTrue: [ ^ self scan31 ].
			currentCharacter == $~ ifTrue: [ ^ self scan29 ].
			('#%' includes: currentCharacter) ifTrue: [ ^ self scan28 ].
			('$*' includes: currentCharacter) ifTrue: [ ^ self scan2 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan27X1X1 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan27X1X2 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan27X2 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan28 [
	[ self recordMatch: #(893 923 930).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	currentCharacter == $?
		ifTrue: [ [ self recordMatch: #(930).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $~ ifTrue: [ ^ self scan29 ].
	('$*' includes: currentCharacter) ifTrue: [ ^ self scan2 ].
	(currentCharacter between: $# and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan280 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan280X1
]

{ #category : #generated }
ABAPScanner >> scan280X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan281 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan281 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan281X1
]

{ #category : #generated }
ABAPScanner >> scan281X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan282 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan282 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan282X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan282X2
]

{ #category : #generated }
ABAPScanner >> scan282X1 [
	self step.
	('Dd' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Tt' includes: currentCharacter)
						ifTrue: [ self step.
							('Aa' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(140) ] ] ].
			^ self reportLastMatch ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self step.
			('Vv' includes: currentCharacter)
				ifTrue: [ self step.
					('Ee' includes: currentCharacter)
						ifTrue: [ self step.
							('Nn' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ ^ self recordAndReportMatch: #(141) ] ] ] ] ].
			^ self reportLastMatch ].
	('Mm' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Tt' includes: currentCharacter)
						ifTrue: [ self step.
							('Hh' includes: currentCharacter)
								ifTrue: [ self step.
									('Oo' includes: currentCharacter)
										ifTrue: [ self step.
											('Dd' includes: currentCharacter)
												ifTrue: [ self step.
													('Ss' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(142) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan282X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan283 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan283X1
]

{ #category : #generated }
ABAPScanner >> scan283X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan284 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan284 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan284X1
]

{ #category : #generated }
ABAPScanner >> scan284X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan285 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan285 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan285X1
]

{ #category : #generated }
ABAPScanner >> scan285X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan286 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan286 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan286X1
]

{ #category : #generated }
ABAPScanner >> scan286X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Mm' includes: currentCharacter) ifTrue: [ ^ self scan287 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan287 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Rr' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan287X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan287X2
]

{ #category : #generated }
ABAPScanner >> scan287X1 [
	self step.
	('Ff' includes: currentCharacter)
		ifTrue: [ self step.
			('Uu' includes: currentCharacter)
				ifTrue: [ self step.
					('Nn' includes: currentCharacter)
						ifTrue: [ self step.
							('Cc' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ self step.
											('Ii' includes: currentCharacter)
												ifTrue: [ self step.
													('Oo' includes: currentCharacter)
														ifTrue: [ self step.
															('Nn' includes: currentCharacter)
																ifTrue: [ ^ self recordAndReportMatch: #(204) ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan287X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan288 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan288X1
]

{ #category : #generated }
ABAPScanner >> scan288X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan289 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan289 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan289X1
]

{ #category : #generated }
ABAPScanner >> scan289X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan290 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan29 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan30 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan290 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan290X1
]

{ #category : #generated }
ABAPScanner >> scan290X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter) ifTrue: [ ^ self scan291 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan291 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan291X1
]

{ #category : #generated }
ABAPScanner >> scan291X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ll' includes: currentCharacter) ifTrue: [ ^ self scan292 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan292 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan292X2
]

{ #category : #generated }
ABAPScanner >> scan292X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Yy' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan292X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan292X1X2
]

{ #category : #generated }
ABAPScanner >> scan292X1X1 [
	self step.
	('Mm' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Dd' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(242) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan292X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan292X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan292X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan293 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	^ self scan293X1
]

{ #category : #generated }
ABAPScanner >> scan293X1 [
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan256 ].
	('Dd' includes: currentCharacter) ifTrue: [ ^ self scan294 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan297 ].
	('Xx' includes: currentCharacter) ifTrue: [ ^ self scan308 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan294 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan294X1
]

{ #category : #generated }
ABAPScanner >> scan294X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan295 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan295 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan295X1
]

{ #category : #generated }
ABAPScanner >> scan295X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan296 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan296 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Oo' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Rr' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan296X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan296X2
]

{ #category : #generated }
ABAPScanner >> scan296X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Ll' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(256) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan296X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan297 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan297X1
]

{ #category : #generated }
ABAPScanner >> scan297X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Dd' includes: currentCharacter) ifTrue: [ ^ self scan298 ].
	('Hh' includes: currentCharacter) ifTrue: [ ^ self scan300 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan298 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan299 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan298X1
]

{ #category : #generated }
ABAPScanner >> scan298X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan299 [
	self step.
	('Ee' includes: currentCharacter)
		ifTrue: [ self step.
			('Nn' includes: currentCharacter)
				ifTrue: [ self step.
					('Hh' includes: currentCharacter)
						ifTrue: [ self step.
							('Aa' includes: currentCharacter)
								ifTrue: [ self step.
									('Nn' includes: currentCharacter)
										ifTrue: [ self step.
											('Cc' includes: currentCharacter)
												ifTrue: [ self step.
													('Ee' includes: currentCharacter)
														ifTrue: [ self step.
															('Mm' includes: currentCharacter)
																ifTrue: [ self step.
																	('Ee' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Nn' includes: currentCharacter)
																				ifTrue: [ self step.
																					('Tt' includes: currentCharacter)
																						ifTrue: [ self step.
																							currentCharacter == $-
																								ifTrue: [ self step.
																									('Ss' includes: currentCharacter)
																										ifTrue: [ self step.
																											('Ee' includes: currentCharacter)
																												ifTrue: [ self step.
																													('Cc' includes: currentCharacter)
																														ifTrue: [ self step.
																															('Tt' includes: currentCharacter)
																																ifTrue: [ self step.
																																	('Ii' includes: currentCharacter)
																																		ifTrue: [ self step.
																																			('Oo' includes: currentCharacter)
																																				ifTrue: [ self step.
																																					('Nn' includes: currentCharacter)
																																						ifTrue: [ ^ self recordAndReportMatch: #(264) ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ].
			^ self reportLastMatch ].
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Ff' includes: currentCharacter)
				ifTrue: [ self step.
					currentCharacter == $-
						ifTrue: [ self step.
							('Dd' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ff' includes: currentCharacter)
												ifTrue: [ self step.
													('Ii' includes: currentCharacter)
														ifTrue: [ self step.
															('Nn' includes: currentCharacter)
																ifTrue: [ self step.
																	('Ii' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Tt' includes: currentCharacter)
																				ifTrue: [ self step.
																					('Ii' includes: currentCharacter)
																						ifTrue: [ self step.
																							('Oo' includes: currentCharacter)
																								ifTrue: [ self step.
																									('Nn' includes: currentCharacter)
																										ifTrue: [ ^ self recordAndReportMatch: #(265) ] ] ] ] ] ] ] ] ].
									^ self reportLastMatch ].
							('Pp' includes: currentCharacter)
								ifTrue: [ self step.
									('Aa' includes: currentCharacter)
										ifTrue: [ self step.
											('Gg' includes: currentCharacter)
												ifTrue: [ self step.
													('Ee' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(266) ] ] ].
									^ self reportLastMatch ].
							('Ss' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ll' includes: currentCharacter)
												ifTrue: [ self step.
													('Ee' includes: currentCharacter)
														ifTrue: [ self step.
															('Cc' includes: currentCharacter)
																ifTrue: [ self step.
																	('Tt' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Ii' includes: currentCharacter)
																				ifTrue: [ self step.
																					('Oo' includes: currentCharacter)
																						ifTrue: [ self step.
																							('Nn' includes: currentCharacter)
																								ifTrue: [ ^ self recordAndReportMatch: #(267) ] ] ] ] ] ] ] ] ] ] ].
			^ self reportLastMatch ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Ss' includes: currentCharacter)
						ifTrue: [ self step.
							('Tt' includes: currentCharacter)
								ifTrue: [ self step.
									currentCharacter == $-
										ifTrue: [ self step.
											('Ii' includes: currentCharacter)
												ifTrue: [ self step.
													('Nn' includes: currentCharacter)
														ifTrue: [ self step.
															('Jj' includes: currentCharacter)
																ifTrue: [ self step.
																	('Ee' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Cc' includes: currentCharacter)
																				ifTrue: [ self step.
																					('Tt' includes: currentCharacter)
																						ifTrue: [ self step.
																							('Ii' includes: currentCharacter)
																								ifTrue: [ self step.
																									('Oo' includes: currentCharacter)
																										ifTrue: [ self step.
																											('Nn' includes: currentCharacter)
																												ifTrue: [ ^ self recordAndReportMatch: #(268) ] ] ] ] ] ] ] ].
													^ self reportLastMatch ].
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Ee' includes: currentCharacter)
														ifTrue: [ self step.
															('Aa' includes: currentCharacter)
																ifTrue: [ self step.
																	('Mm' includes: currentCharacter)
																		ifTrue: [ ^ self recordAndReportMatch: #(269) ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan3 [
	[ self recordMatch: #(893 907 908 916 927 930).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $? ifTrue: [ ^ self scan7 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan30 [
	[ self recordMatch: #(923).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan300 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan300X1
]

{ #category : #generated }
ABAPScanner >> scan300X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan301 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan301 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan301X1
]

{ #category : #generated }
ABAPScanner >> scan301X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan302 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan302 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan302X1
]

{ #category : #generated }
ABAPScanner >> scan302X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Cc' includes: currentCharacter) ifTrue: [ ^ self scan303 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan303 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan303X1
]

{ #category : #generated }
ABAPScanner >> scan303X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan304 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan304 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan304X1
]

{ #category : #generated }
ABAPScanner >> scan304X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Mm' includes: currentCharacter) ifTrue: [ ^ self scan305 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan305 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan305X1
]

{ #category : #generated }
ABAPScanner >> scan305X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan306 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan306 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan306X1
]

{ #category : #generated }
ABAPScanner >> scan306X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan307 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan307 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan307X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan307X2
]

{ #category : #generated }
ABAPScanner >> scan307X1 [
	self step.
	('Pp' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Ii' includes: currentCharacter)
						ifTrue: [ self step.
							('Nn' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(295) ] ] ] ].
			^ self reportLastMatch ].
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Cc' includes: currentCharacter)
						ifTrue: [ self step.
							('Tt' includes: currentCharacter)
								ifTrue: [ self step.
									('Ii' includes: currentCharacter)
										ifTrue: [ self step.
											('Oo' includes: currentCharacter)
												ifTrue: [ self step.
													('Nn' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(296) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan307X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan308 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan308X2
]

{ #category : #generated }
ABAPScanner >> scan308X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan308X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan308X1X2
]

{ #category : #generated }
ABAPScanner >> scan308X1X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Mm' includes: currentCharacter)
						ifTrue: [ self step.
							('Mm' includes: currentCharacter)
								ifTrue: [ self step.
									('Aa' includes: currentCharacter)
										ifTrue: [ self step.
											('Nn' includes: currentCharacter)
												ifTrue: [ self step.
													('Dd' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(322) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan308X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan308X2 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Cc' includes: currentCharacter) ifTrue: [ ^ self scan309 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan308X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan309 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan309X1
]

{ #category : #generated }
ABAPScanner >> scan309X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan310 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan31 [
	[ self step.
	currentCharacter == $]
		ifTrue: [ self recordMatch: #(940).
			self step.
			currentCharacter == $[ ifTrue: [ ^ self scan31 ].
			^ self reportLastMatch ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan310 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan310X1
]

{ #category : #generated }
ABAPScanner >> scan310X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter) ifTrue: [ ^ self scan311 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan311 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan311X1
]

{ #category : #generated }
ABAPScanner >> scan311X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan312 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan312 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan312X1
]

{ #category : #generated }
ABAPScanner >> scan312X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan313 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan313 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Oo' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Nn' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan313X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan313X2
]

{ #category : #generated }
ABAPScanner >> scan313X1 [
	self step.
	('Tt' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Bb' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(314) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan313X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan314 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	^ self scan314X1
]

{ #category : #generated }
ABAPScanner >> scan314X1 [
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan315 ].
	('Uu' includes: currentCharacter) ifTrue: [ ^ self scan320 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan315 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	^ self scan315X1
]

{ #category : #generated }
ABAPScanner >> scan315X1 [
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan316 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan318 ].
	('Xx' includes: currentCharacter) ifTrue: [ ^ self scan319 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan316 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan316X1
]

{ #category : #generated }
ABAPScanner >> scan316X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ll' includes: currentCharacter) ifTrue: [ ^ self scan317 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan317 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Dd' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan317X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan317X2
]

{ #category : #generated }
ABAPScanner >> scan317X1 [
	self step.
	('Gg' includes: currentCharacter)
		ifTrue: [ self step.
			('Rr' includes: currentCharacter)
				ifTrue: [ self step.
					('Oo' includes: currentCharacter)
						ifTrue: [ self step.
							('Uu' includes: currentCharacter)
								ifTrue: [ self step.
									('Pp' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ ^ self recordAndReportMatch: #(337) ] ] ] ] ].
			^ self reportLastMatch ].
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Yy' includes: currentCharacter)
				ifTrue: [ self step.
					('Mm' includes: currentCharacter)
						ifTrue: [ self step.
							('Bb' includes: currentCharacter)
								ifTrue: [ self step.
									('Oo' includes: currentCharacter)
										ifTrue: [ self step.
											('Ll' includes: currentCharacter)
												ifTrue: [ self recordMatch: #(338).
													self step.
													('Ss' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(339) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan317X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan318 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Tt' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan318X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan318X2
]

{ #category : #generated }
ABAPScanner >> scan318X1 [
	self step.
	('Ll' includes: currentCharacter)
		ifTrue: [ self step.
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Nn' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(348) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan318X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan319 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Dd' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan319X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan319X2
]

{ #category : #generated }
ABAPScanner >> scan319X1 [
	self step.
	('Pp' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Ii' includes: currentCharacter)
						ifTrue: [ self step.
							('Nn' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(349) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan319X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan32 [
	[ self
		recordMatch: #(888 892 893 894 907 908 913 916 917 921 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan33 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan44 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan46 ].
	currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan320 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan320X1
]

{ #category : #generated }
ABAPScanner >> scan320X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan321 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan321 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan321X1
]

{ #category : #generated }
ABAPScanner >> scan321X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Cc' includes: currentCharacter) ifTrue: [ ^ self scan322 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan322 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan322X1
]

{ #category : #generated }
ABAPScanner >> scan322X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan323 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan323 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan323X1
]

{ #category : #generated }
ABAPScanner >> scan323X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan324 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan324 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Oo' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Nn' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan324X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan324X2
]

{ #category : #generated }
ABAPScanner >> scan324X1 [
	self step.
	('Pp' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Oo' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(365) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan324X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan325 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan325X1
]

{ #category : #generated }
ABAPScanner >> scan325X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan326 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan326 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan326X2
]

{ #category : #generated }
ABAPScanner >> scan326X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan326X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan326X1X2
]

{ #category : #generated }
ABAPScanner >> scan326X1X1 [
	self step.
	('Ii' includes: currentCharacter)
		ifTrue: [ self step.
			('Dd' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(385) ].
			^ self reportLastMatch ].
	('Rr' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Qq' includes: currentCharacter)
						ifTrue: [ self step.
							('Uu' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Tt' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(386) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan326X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan326X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ll' includes: currentCharacter) ifTrue: [ ^ self scan326X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan327 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan327X1
]

{ #category : #generated }
ABAPScanner >> scan327X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan256 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan328 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan328 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan328X1
]

{ #category : #generated }
ABAPScanner >> scan328X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Dd' includes: currentCharacter) ifTrue: [ ^ self scan329 ].
	('Vv' includes: currentCharacter) ifTrue: [ ^ self scan330 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan329 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Xx' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan329X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan329X2
]

{ #category : #generated }
ABAPScanner >> scan329X1 [
	self step.
	('Ll' includes: currentCharacter)
		ifTrue: [ self step.
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Nn' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(414) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan329X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan33 [
	[ self
		recordMatch: #(888 892 893 894 907 908 913 916 917 921 927 928 930 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan36 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan42 ].
	(currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan330 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan330X1
]

{ #category : #generated }
ABAPScanner >> scan330X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan331 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan331 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan331X1
]

{ #category : #generated }
ABAPScanner >> scan331X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan332 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan332 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan332X1
]

{ #category : #generated }
ABAPScanner >> scan332X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan333 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan333 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Dd' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan333X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan333X2
]

{ #category : #generated }
ABAPScanner >> scan333X1 [
	self step.
	('Dd' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Tt' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(436) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan333X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan334 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	^ self scan334X1
]

{ #category : #generated }
ABAPScanner >> scan334X1 [
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan335 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan336 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan338 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan335 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan335X2
]

{ #category : #generated }
ABAPScanner >> scan335X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan335X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan335X1X2
]

{ #category : #generated }
ABAPScanner >> scan335X1X1 [
	self step.
	('Jj' includes: currentCharacter)
		ifTrue: [ self step.
			('Uu' includes: currentCharacter)
				ifTrue: [ self step.
					('Ss' includes: currentCharacter)
						ifTrue: [ self step.
							('Tt' includes: currentCharacter)
								ifTrue: [ self step.
									('Ii' includes: currentCharacter)
										ifTrue: [ self step.
											('Ff' includes: currentCharacter)
												ifTrue: [ self step.
													('Ii' includes: currentCharacter)
														ifTrue: [ self step.
															('Ee' includes: currentCharacter)
																ifTrue: [ self step.
																	('Dd' includes: currentCharacter)
																		ifTrue: [ ^ self recordAndReportMatch: #(456) ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan335X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan335X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ff' includes: currentCharacter) ifTrue: [ ^ self scan335X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan336 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan336X2
]

{ #category : #generated }
ABAPScanner >> scan336X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan336X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan336X1X2
]

{ #category : #generated }
ABAPScanner >> scan336X1X1 [
	self step.
	('Pp' includes: currentCharacter)
		ifTrue: [ self step.
			('Rr' includes: currentCharacter)
				ifTrue: [ self step.
					('Oo' includes: currentCharacter)
						ifTrue: [ self step.
							('Cc' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Ss' includes: currentCharacter)
														ifTrue: [ self step.
															('Ii' includes: currentCharacter)
																ifTrue: [ self step.
																	('Nn' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Gg' includes: currentCharacter)
																				ifTrue: [ ^ self recordAndReportMatch: #(473) ] ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan336X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan336X2 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan337 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan336X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan337 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan337X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan337X2
]

{ #category : #generated }
ABAPScanner >> scan337X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Uu' includes: currentCharacter)
						ifTrue: [ self step.
							('Nn' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(466) ] ] ] ].
			^ self reportLastMatch ].
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Ll' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ self step.
									('Cc' includes: currentCharacter)
										ifTrue: [ self step.
											('Tt' includes: currentCharacter)
												ifTrue: [ self step.
													('Ii' includes: currentCharacter)
														ifTrue: [ self step.
															('Oo' includes: currentCharacter)
																ifTrue: [ self step.
																	('Nn' includes: currentCharacter)
																		ifTrue: [ ^ self recordAndReportMatch: #(467) ] ] ] ] ] ] ].
					^ self reportLastMatch ].
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Zz' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(468) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan337X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan338 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan338X3
]

{ #category : #generated }
ABAPScanner >> scan338X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Dd' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan338X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan338X1X2
]

{ #category : #generated }
ABAPScanner >> scan338X1X1 [
	self step.
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Ff' includes: currentCharacter)
				ifTrue: [ self step.
					currentCharacter == $-
						ifTrue: [ self step.
							('Pp' includes: currentCharacter)
								ifTrue: [ self step.
									('Rr' includes: currentCharacter)
										ifTrue: [ self step.
											('Oo' includes: currentCharacter)
												ifTrue: [ self step.
													('Gg' includes: currentCharacter)
														ifTrue: [ self step.
															('Rr' includes: currentCharacter)
																ifTrue: [ self step.
																	('Aa' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Mm' includes: currentCharacter)
																				ifTrue: [ ^ self recordAndReportMatch: #(476) ] ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan338X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan338X2 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan338X2X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan338X2X2
]

{ #category : #generated }
ABAPScanner >> scan338X2X1 [
	self step.
	('Pp' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Ii' includes: currentCharacter)
						ifTrue: [ self step.
							('Nn' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(481) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan338X2X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan338X3 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan338X1 ].
	('Gg' includes: currentCharacter) ifTrue: [ ^ self scan338X2 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan339 [
	self
		recordMatch: #(490 887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	^ self scan339X1
]

{ #category : #generated }
ABAPScanner >> scan339X1 [
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan340 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan344 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan34 [
	[ self recordMatch: #(928 956).
	self step.
	currentCharacter == $/
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan35 ].
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan340 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan340X1
]

{ #category : #generated }
ABAPScanner >> scan340X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan341 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan341 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan341X1
]

{ #category : #generated }
ABAPScanner >> scan341X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan342 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan342 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan342X1
]

{ #category : #generated }
ABAPScanner >> scan342X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan343 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan343 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Gg' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Ee' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan343X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan343X2
]

{ #category : #generated }
ABAPScanner >> scan343X1 [
	self step.
	('Ii' includes: currentCharacter)
		ifTrue: [ self step.
			('Dd' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(506) ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan343X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan344 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan344X1
]

{ #category : #generated }
ABAPScanner >> scan344X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Vv' includes: currentCharacter) ifTrue: [ ^ self scan345 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan345 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan345X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan345X2
]

{ #category : #generated }
ABAPScanner >> scan345X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Rr' includes: currentCharacter)
						ifTrue: [ self step.
							('Rr' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Pp' includes: currentCharacter)
														ifTrue: [ self step.
															('Oo' includes: currentCharacter)
																ifTrue: [ self step.
																	('Nn' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Dd' includes: currentCharacter)
																				ifTrue: [ self step.
																					('Ii' includes: currentCharacter)
																						ifTrue: [ self step.
																							('Nn' includes: currentCharacter)
																								ifTrue: [ self step.
																									('Gg' includes: currentCharacter)
																										ifTrue: [ ^ self recordAndReportMatch: #(522) ] ] ] ] ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan345X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan346 [
	self
		recordMatch: #(525 887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	^ self scan346X1
]

{ #category : #generated }
ABAPScanner >> scan346X1 [
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan347 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan348 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan347 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan347X2
]

{ #category : #generated }
ABAPScanner >> scan347X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan347X1X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan347X1X2
]

{ #category : #generated }
ABAPScanner >> scan347X1X1 [
	self step.
	('Ll' includes: currentCharacter)
		ifTrue: [ self step.
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Nn' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(534) ] ] ].
			^ self reportLastMatch ].
	('Pp' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Gg' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(535) ] ] ].
			^ self reportLastMatch ].
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Cc' includes: currentCharacter)
						ifTrue: [ self step.
							('Tt' includes: currentCharacter)
								ifTrue: [ self step.
									('Ii' includes: currentCharacter)
										ifTrue: [ self step.
											('Oo' includes: currentCharacter)
												ifTrue: [ self step.
													('Nn' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(536) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan347X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan347X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ww' includes: currentCharacter) ifTrue: [ ^ self scan347X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan348 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $- ifTrue: [ ^ self scan349 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan348X2
]

{ #category : #generated }
ABAPScanner >> scan348X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan348X1X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan348X1X2
]

{ #category : #generated }
ABAPScanner >> scan348X1X1 [
	self step.
	('Uu' includes: currentCharacter)
		ifTrue: [ self step.
			('Nn' includes: currentCharacter)
				ifTrue: [ self step.
					('Ii' includes: currentCharacter)
						ifTrue: [ self step.
							('Cc' includes: currentCharacter)
								ifTrue: [ self step.
									('Oo' includes: currentCharacter)
										ifTrue: [ self step.
											('Dd' includes: currentCharacter)
												ifTrue: [ self step.
													('Ee' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(551) ] ] ].
									^ self reportLastMatch ].
							('Qq' includes: currentCharacter)
								ifTrue: [ self step.
									('Uu' includes: currentCharacter)
										ifTrue: [ self step.
											('Ee' includes: currentCharacter)
												ifTrue: [ ^ self recordAndReportMatch: #(552) ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan348X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan348X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan348X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan349 [
	self step.
	('Dd' includes: currentCharacter)
		ifTrue: [ self step.
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Ss' includes: currentCharacter)
						ifTrue: [ self step.
							('Pp' includes: currentCharacter)
								ifTrue: [ self step.
									('Ll' includes: currentCharacter)
										ifTrue: [ self step.
											('Aa' includes: currentCharacter)
												ifTrue: [ self step.
													('Yy' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(539) ] ] ] ] ] ].
			^ self reportLastMatch ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self step.
			('Xx' includes: currentCharacter)
				ifTrue: [ self step.
					('Tt' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ self step.
									('Nn' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Ii' includes: currentCharacter)
														ifTrue: [ self step.
															('Oo' includes: currentCharacter)
																ifTrue: [ self step.
																	('Nn' includes: currentCharacter)
																		ifTrue: [ ^ self recordAndReportMatch: #(540) ] ] ] ] ] ] ] ].
			^ self reportLastMatch ].
	('Gg' includes: currentCharacter) ifTrue: [ ^ self scan349X1 ].
	('Hh' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Aa' includes: currentCharacter)
						ifTrue: [ self step.
							('Dd' includes: currentCharacter)
								ifTrue: [ self step.
									('Ii' includes: currentCharacter)
										ifTrue: [ self step.
											('Nn' includes: currentCharacter)
												ifTrue: [ self step.
													('Gg' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(544) ] ] ] ] ] ].
			^ self reportLastMatch ].
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Cc' includes: currentCharacter)
				ifTrue: [ self step.
					('Rr' includes: currentCharacter)
						ifTrue: [ self step.
							('Oo' includes: currentCharacter)
								ifTrue: [ self step.
									('Ll' includes: currentCharacter)
										ifTrue: [ self step.
											('Ll' includes: currentCharacter)
												ifTrue: [ self step.
													('Ii' includes: currentCharacter)
														ifTrue: [ self step.
															('Nn' includes: currentCharacter)
																ifTrue: [ self step.
																	('Gg' includes: currentCharacter)
																		ifTrue: [ ^ self recordAndReportMatch: #(545) ] ] ] ] ] ] ].
					^ self reportLastMatch ].
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Gg' includes: currentCharacter)
						ifTrue: [ self step.
							('Nn' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(546) ] ] ].
			^ self reportLastMatch ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan349X2 ].
	('Zz' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Rr' includes: currentCharacter)
						ifTrue: [ self step.
							('Oo' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(549) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan349X1 [
	self step.
	('Aa' includes: currentCharacter)
		ifTrue: [ self step.
			('Pp' includes: currentCharacter)
				ifTrue: [ self recordMatch: #(541).
					self step.
					('Ss' includes: currentCharacter)
						ifTrue: [ ^ self recordAndReportMatch: #(542) ] ].
			^ self reportLastMatch ].
	('Rr' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Uu' includes: currentCharacter)
						ifTrue: [ self step.
							('Pp' includes: currentCharacter)
								ifTrue: [ self step.
									('Ii' includes: currentCharacter)
										ifTrue: [ self step.
											('Nn' includes: currentCharacter)
												ifTrue: [ self step.
													('Gg' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(543) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan349X2 [
	self step.
	('Ii' includes: currentCharacter)
		ifTrue: [ self step.
			('Tt' includes: currentCharacter)
				ifTrue: [ self step.
					('Ll' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(547) ] ] ].
			^ self reportLastMatch ].
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Pp' includes: currentCharacter)
				ifTrue: [ self step.
					('Oo' includes: currentCharacter)
						ifTrue: [ self step.
							('Ff' includes: currentCharacter)
								ifTrue: [ self step.
									('Pp' includes: currentCharacter)
										ifTrue: [ self step.
											('Aa' includes: currentCharacter)
												ifTrue: [ self step.
													('Gg' includes: currentCharacter)
														ifTrue: [ self step.
															('Ee' includes: currentCharacter)
																ifTrue: [ ^ self recordAndReportMatch: #(548) ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan35 [
	[ self recordMatch: #(956).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan350 [
	self
		recordMatch: #(560 887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan350X1
]

{ #category : #generated }
ABAPScanner >> scan350X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Uu' includes: currentCharacter) ifTrue: [ ^ self scan351 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan351 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan351X1
]

{ #category : #generated }
ABAPScanner >> scan351X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan352 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan352 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan352X1
]

{ #category : #generated }
ABAPScanner >> scan352X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter) ifTrue: [ ^ self scan353 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan353 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Uu' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Tt' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan353X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan353X2
]

{ #category : #generated }
ABAPScanner >> scan353X1 [
	self step.
	('Ll' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Nn' includes: currentCharacter)
						ifTrue: [ self step.
							('Gg' includes: currentCharacter)
								ifTrue: [ self step.
									('Tt' includes: currentCharacter)
										ifTrue: [ self step.
											('Hh' includes: currentCharacter)
												ifTrue: [ ^ self recordAndReportMatch: #(587) ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan353X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan354 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	^ self scan354X1
]

{ #category : #generated }
ABAPScanner >> scan354X1 [
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan355 ].
	('Ff' includes: currentCharacter) ifTrue: [ ^ self scan361 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan362 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan355 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan355X1
]

{ #category : #generated }
ABAPScanner >> scan355X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan356 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan356 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan356X1
]

{ #category : #generated }
ABAPScanner >> scan356X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan357 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan357 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan357X1
]

{ #category : #generated }
ABAPScanner >> scan357X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Mm' includes: currentCharacter) ifTrue: [ ^ self scan358 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan358 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan358X1
]

{ #category : #generated }
ABAPScanner >> scan358X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan359 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan359 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan359X1
]

{ #category : #generated }
ABAPScanner >> scan359X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan360 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan36 [
	[ self recordMatch: #(892 893 907 908 913 916 917 927 928 930 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan39 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan360 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Rr' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan360X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan360X2
]

{ #category : #generated }
ABAPScanner >> scan360X1 [
	self step.
	('Tt' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Bb' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(597) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan360X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan361 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $- ifTrue: [ ^ self scan361X2 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan361X3
]

{ #category : #generated }
ABAPScanner >> scan361X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 945 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan361X1X2
]

{ #category : #generated }
ABAPScanner >> scan361X1X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 945 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan361X1X1X1
]

{ #category : #generated }
ABAPScanner >> scan361X1X1X1 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan361X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan361X1X1 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan361X2 [
	self step.
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Tt' includes: currentCharacter)
				ifTrue: [ self step.
					('Aa' includes: currentCharacter)
						ifTrue: [ self step.
							('Tt' includes: currentCharacter)
								ifTrue: [ self step.
									('Uu' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ ^ self recordAndReportMatch: #(606) ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan361X3 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan361X1 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan362 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan362X1
]

{ #category : #generated }
ABAPScanner >> scan362X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan363 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan363 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Tt' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan363X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan363X2
]

{ #category : #generated }
ABAPScanner >> scan363X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Nn' includes: currentCharacter)
						ifTrue: [ self step.
							('Tt' includes: currentCharacter)
								ifTrue: [ self step.
									('Rr' includes: currentCharacter)
										ifTrue: [ self step.
											('Oo' includes: currentCharacter)
												ifTrue: [ self step.
													('Ll' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(619) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan363X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan364 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan364X1
]

{ #category : #generated }
ABAPScanner >> scan364X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Uu' includes: currentCharacter) ifTrue: [ ^ self scan365 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan365 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan365X1
]

{ #category : #generated }
ABAPScanner >> scan365X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan366 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan366 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Uu' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Ee' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan366X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan366X2
]

{ #category : #generated }
ABAPScanner >> scan366X1 [
	self step.
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Nn' includes: currentCharacter)
				ifTrue: [ self step.
					('Ll' includes: currentCharacter)
						ifTrue: [ self step.
							('Yy' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(631) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan366X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan367 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	^ self scan367X1
]

{ #category : #generated }
ABAPScanner >> scan367X1 [
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan368 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan369 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan368 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan368X2
]

{ #category : #generated }
ABAPScanner >> scan368X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Dd' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan368X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan368X1X2
]

{ #category : #generated }
ABAPScanner >> scan368X1X1 [
	self step.
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Nn' includes: currentCharacter)
				ifTrue: [ self step.
					('Ll' includes: currentCharacter)
						ifTrue: [ self step.
							('Yy' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(641) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan368X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan368X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan368X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan369 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan369X1
]

{ #category : #generated }
ABAPScanner >> scan369X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Gg' includes: currentCharacter) ifTrue: [ ^ self scan370 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan37 [
	[ self recordMatch: #(913 928).
	self step.
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $~
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan370 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Hh' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Tt' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan370X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan370X2
]

{ #category : #generated }
ABAPScanner >> scan370X1 [
	self step.
	('Jj' includes: currentCharacter)
		ifTrue: [ self step.
			('Uu' includes: currentCharacter)
				ifTrue: [ self step.
					('Ss' includes: currentCharacter)
						ifTrue: [ self step.
							('Tt' includes: currentCharacter)
								ifTrue: [ self step.
									('Ii' includes: currentCharacter)
										ifTrue: [ self step.
											('Ff' includes: currentCharacter)
												ifTrue: [ self step.
													('Ii' includes: currentCharacter)
														ifTrue: [ self step.
															('Ee' includes: currentCharacter)
																ifTrue: [ self step.
																	('Dd' includes: currentCharacter)
																		ifTrue: [ ^ self recordAndReportMatch: #(678) ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan370X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan371 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	^ self scan371X3
]

{ #category : #generated }
ABAPScanner >> scan371X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan371X1X2
]

{ #category : #generated }
ABAPScanner >> scan371X1X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan371X1X1X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan371X1X1X2
]

{ #category : #generated }
ABAPScanner >> scan371X1X1X1 [
	self step.
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Pp' includes: currentCharacter)
				ifTrue: [ self step.
					('Oo' includes: currentCharacter)
						ifTrue: [ self step.
							('Oo' includes: currentCharacter)
								ifTrue: [ self step.
									('Ll' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(687) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan371X1X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan371X1X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter) ifTrue: [ ^ self scan371X1X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan371X2 [
	currentCharacter isDigit ifTrue: [ ^ self scan256 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan371X1 ].
	('Cc' includes: currentCharacter) ifTrue: [ ^ self scan372 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan375 ].
	('Hh' includes: currentCharacter) ifTrue: [ ^ self scan382 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan388 ].
	('Uu' includes: currentCharacter) ifTrue: [ ^ self scan391 ].
	('Yy' includes: currentCharacter) ifTrue: [ ^ self scan397 ].
	((currentCharacter between: $B and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan371X3 [
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	^ self scan371X2
]

{ #category : #generated }
ABAPScanner >> scan372 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan372X1
]

{ #category : #generated }
ABAPScanner >> scan372X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan373 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan373 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan373X1
]

{ #category : #generated }
ABAPScanner >> scan373X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan374 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan374 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ll' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Ll' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan374X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan374X2
]

{ #category : #generated }
ABAPScanner >> scan374X1 [
	self step.
	('Bb' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Uu' includes: currentCharacter)
						ifTrue: [ self step.
							('Nn' includes: currentCharacter)
								ifTrue: [ self step.
									('Dd' includes: currentCharacter)
										ifTrue: [ self step.
											('Aa' includes: currentCharacter)
												ifTrue: [ self step.
													('Rr' includes: currentCharacter)
														ifTrue: [ self step.
															('Yy' includes: currentCharacter)
																ifTrue: [ ^ self recordAndReportMatch: #(697) ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan374X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan375 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan375X1
]

{ #category : #generated }
ABAPScanner >> scan375X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ll' includes: currentCharacter) ifTrue: [ ^ self scan376 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan376 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan376X1
]

{ #category : #generated }
ABAPScanner >> scan376X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan377 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan377 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan377X1
]

{ #category : #generated }
ABAPScanner >> scan377X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Cc' includes: currentCharacter) ifTrue: [ ^ self scan378 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan378 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan378X1
]

{ #category : #generated }
ABAPScanner >> scan378X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan379 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan379 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan379X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan379X2
]

{ #category : #generated }
ABAPScanner >> scan379X1 [
	self step.
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Pp' includes: currentCharacter)
				ifTrue: [ self step.
					('Tt' includes: currentCharacter)
						ifTrue: [ self step.
							('Ii' includes: currentCharacter)
								ifTrue: [ self step.
									('Oo' includes: currentCharacter)
										ifTrue: [ self step.
											('Nn' includes: currentCharacter)
												ifTrue: [ self step.
													('Ss' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(704) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan379X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan380 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan38 [
	[ self recordMatch: #(892 907 908 927 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan380 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan380X1
]

{ #category : #generated }
ABAPScanner >> scan380X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan381 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan381 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan381X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan381X2
]

{ #category : #generated }
ABAPScanner >> scan381X1 [
	self step.
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Cc' includes: currentCharacter)
				ifTrue: [ self step.
					('Rr' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Nn' includes: currentCharacter)
												ifTrue: [ ^ self recordAndReportMatch: #(706) ] ] ] ].
					^ self reportLastMatch ].
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Tt' includes: currentCharacter)
						ifTrue: [ self recordMatch: #(707).
							self step.
							('Ss' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(708) ] ] ].
			^ self reportLastMatch ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Bb' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(709) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan381X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan382 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan382X1
]

{ #category : #generated }
ABAPScanner >> scan382X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan383 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan383 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan383X1
]

{ #category : #generated }
ABAPScanner >> scan383X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan384 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan384 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan384X1
]

{ #category : #generated }
ABAPScanner >> scan384X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan385 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan385 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan385X1
]

{ #category : #generated }
ABAPScanner >> scan385X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Dd' includes: currentCharacter) ifTrue: [ ^ self scan386 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan386 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan386X1
]

{ #category : #generated }
ABAPScanner >> scan386X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Uu' includes: currentCharacter) ifTrue: [ ^ self scan387 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan387 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Mm' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Pp' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan387X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan387X2
]

{ #category : #generated }
ABAPScanner >> scan387X1 [
	self step.
	('Ii' includes: currentCharacter)
		ifTrue: [ self step.
			('Dd' includes: currentCharacter)
				ifTrue: [ ^ self recordAndReportMatch: #(720) ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan387X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan388 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan388X2
]

{ #category : #generated }
ABAPScanner >> scan388X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan388X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan388X1X2
]

{ #category : #generated }
ABAPScanner >> scan388X1X1 [
	self step.
	('Ll' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Oo' includes: currentCharacter)
						ifTrue: [ self step.
							('Pp' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(754) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan388X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan388X2 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan389 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan388X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan389 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan389X1
]

{ #category : #generated }
ABAPScanner >> scan389X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan390 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan39 [
	self recordMatch: #(913).
	self step.
	((currentCharacter between: $$ and: $%)
		or: [ '*/~' includes: currentCharacter ])
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(907 908 913 927).
			self step.
			((currentCharacter between: $$ and: $%)
				or: [ '*/~' includes: currentCharacter ])
				ifTrue: [ [ self recordMatch: #(913).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_
														or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan390 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan390X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan390X2
]

{ #category : #generated }
ABAPScanner >> scan390X1 [
	self step.
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Ff' includes: currentCharacter)
				ifTrue: [ self step.
					currentCharacter == $-
						ifTrue: [ self step.
							('Ss' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ll' includes: currentCharacter)
												ifTrue: [ self step.
													('Ee' includes: currentCharacter)
														ifTrue: [ self step.
															('Cc' includes: currentCharacter)
																ifTrue: [ self step.
																	('Tt' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Ii' includes: currentCharacter)
																				ifTrue: [ self step.
																					('Oo' includes: currentCharacter)
																						ifTrue: [ self step.
																							('Nn' includes: currentCharacter)
																								ifTrue: [ ^ self recordAndReportMatch: #(745) ] ] ] ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan390X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan391 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan391X1
]

{ #category : #generated }
ABAPScanner >> scan391X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Bb' includes: currentCharacter) ifTrue: [ ^ self scan392 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan392 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan392X1
]

{ #category : #generated }
ABAPScanner >> scan392X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan393 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan393 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan393X1
]

{ #category : #generated }
ABAPScanner >> scan393X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan394 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan394 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan394X1
]

{ #category : #generated }
ABAPScanner >> scan394X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan395 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan395 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan395X1
]

{ #category : #generated }
ABAPScanner >> scan395X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Cc' includes: currentCharacter) ifTrue: [ ^ self scan396 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan396 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan396X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan396X2
]

{ #category : #generated }
ABAPScanner >> scan396X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Rr' includes: currentCharacter)
						ifTrue: [ self step.
							('Rr' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Pp' includes: currentCharacter)
														ifTrue: [ self step.
															('Oo' includes: currentCharacter)
																ifTrue: [ self step.
																	('Nn' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Dd' includes: currentCharacter)
																				ifTrue: [ self step.
																					('Ii' includes: currentCharacter)
																						ifTrue: [ self step.
																							('Nn' includes: currentCharacter)
																								ifTrue: [ self step.
																									('Gg' includes: currentCharacter)
																										ifTrue: [ ^ self recordAndReportMatch: #(766) ] ] ] ] ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan396X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan397 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan397X1
]

{ #category : #generated }
ABAPScanner >> scan397X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan398 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan400 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan398 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan398X1
]

{ #category : #generated }
ABAPScanner >> scan398X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan399 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan399 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan399X2
]

{ #category : #generated }
ABAPScanner >> scan399X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Xx' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan399X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan399X1X2
]

{ #category : #generated }
ABAPScanner >> scan399X1X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Hh' includes: currentCharacter)
				ifTrue: [ self step.
					('Ee' includes: currentCharacter)
						ifTrue: [ self step.
							('Cc' includes: currentCharacter)
								ifTrue: [ self step.
									('Kk' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(776) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan399X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan399X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan399X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan4 [
	[ self recordMatch: #(893 908 930).
	self step.
	currentCharacter == $? ifTrue: [ ^ self scan5 ].
	currentCharacter == $~ ifTrue: [ ^ self scan6 ].
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan40 [
	[ self recordMatch: #(888 913 921 928).
	self step.
	currentCharacter == $&
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $* ifTrue: [ ^ self scan37 ].
	currentCharacter == $~ ifTrue: [ ^ self scan41 ].
	(currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $/ and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan400 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan400X1
]

{ #category : #generated }
ABAPScanner >> scan400X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan401 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan401 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan401X1
]

{ #category : #generated }
ABAPScanner >> scan401X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan402 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan402 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Mm' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan402X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan402X2
]

{ #category : #generated }
ABAPScanner >> scan402X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Ll' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(777) ] ] ].
			^ self reportLastMatch ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self step.
			('Xx' includes: currentCharacter)
				ifTrue: [ self step.
					('Cc' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ self step.
									('Pp' includes: currentCharacter)
										ifTrue: [ self step.
											('Tt' includes: currentCharacter)
												ifTrue: [ self step.
													('Ii' includes: currentCharacter)
														ifTrue: [ self step.
															('Oo' includes: currentCharacter)
																ifTrue: [ self step.
																	('Nn' includes: currentCharacter)
																		ifTrue: [ self step.
																			('Ss' includes: currentCharacter)
																				ifTrue: [ ^ self recordAndReportMatch: #(778) ] ] ] ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan402X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan403 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	^ self scan403X2
]

{ #category : #generated }
ABAPScanner >> scan403X1 [
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan404 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan406 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan407 ].
	('Yy' includes: currentCharacter) ifTrue: [ ^ self scan409 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan403X2 [
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	^ self scan403X1
]

{ #category : #generated }
ABAPScanner >> scan404 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan404X1
]

{ #category : #generated }
ABAPScanner >> scan404X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan405 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan405 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan405X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan405X2
]

{ #category : #generated }
ABAPScanner >> scan405X1 [
	self step.
	('Ii' includes: currentCharacter)
		ifTrue: [ self step.
			('Nn' includes: currentCharacter)
				ifTrue: [ self step.
					('Jj' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ self step.
									('Cc' includes: currentCharacter)
										ifTrue: [ self step.
											('Tt' includes: currentCharacter)
												ifTrue: [ self step.
													('Ii' includes: currentCharacter)
														ifTrue: [ self step.
															('Oo' includes: currentCharacter)
																ifTrue: [ self step.
																	('Nn' includes: currentCharacter)
																		ifTrue: [ ^ self recordAndReportMatch: #(790) ] ] ] ] ] ] ] ].
			^ self reportLastMatch ].
	('Ss' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Aa' includes: currentCharacter)
						ifTrue: [ self step.
							('Mm' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(791) ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan405X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan406 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan406X2
]

{ #category : #generated }
ABAPScanner >> scan406X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan406X1X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan406X1X2
]

{ #category : #generated }
ABAPScanner >> scan406X1X1 [
	self step.
	('Ll' includes: currentCharacter)
		ifTrue: [ self step.
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Nn' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ self step.
									('Ss' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(806) ] ] ] ].
			^ self reportLastMatch ].
	('Oo' includes: currentCharacter)
		ifTrue: [ self step.
			('Ff' includes: currentCharacter)
				ifTrue: [ self step.
					currentCharacter == $-
						ifTrue: [ self step.
							('Pp' includes: currentCharacter)
								ifTrue: [ self step.
									('Aa' includes: currentCharacter)
										ifTrue: [ self step.
											('Gg' includes: currentCharacter)
												ifTrue: [ self step.
													('Ee' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(807) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan406X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan406X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter) ifTrue: [ ^ self scan406X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan407 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan407X1
]

{ #category : #generated }
ABAPScanner >> scan407X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan408 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan408 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Cc' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Ee' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan408X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan408X2
]

{ #category : #generated }
ABAPScanner >> scan408X1 [
	self step.
	('Ff' includes: currentCharacter)
		ifTrue: [ self step.
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Ll' includes: currentCharacter)
						ifTrue: [ self step.
							('Ee' includes: currentCharacter)
								ifTrue: [ ^ self recordAndReportMatch: #(808) ] ] ].
			^ self reportLastMatch ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self step.
			('Aa' includes: currentCharacter)
				ifTrue: [ self step.
					('Bb' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(809) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan408X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan409 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan409X2
]

{ #category : #generated }
ABAPScanner >> scan409X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan409X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan409X1X2
]

{ #category : #generated }
ABAPScanner >> scan409X1X1 [
	self step.
	('Pp' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Oo' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ self recordMatch: #(820).
									self step.
									('Ss' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(821) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan409X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan409X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Pp' includes: currentCharacter) ifTrue: [ ^ self scan409X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan41 [
	[ self recordMatch: #(888 913).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $/ and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan410 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	^ self scan410X2
]

{ #category : #generated }
ABAPScanner >> scan410X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan410X1X2
]

{ #category : #generated }
ABAPScanner >> scan410X1X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $- ifTrue: [ ^ self scan410X1X1X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	^ self scan410X1X1X2
]

{ #category : #generated }
ABAPScanner >> scan410X1X1X1 [
	self step.
	currentCharacter == $8 ifTrue: [ ^ self recordAndReportMatch: #(841) ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan410X1X1X2 [
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan410X1X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ff' includes: currentCharacter) ifTrue: [ ^ self scan410X1X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan410X2 [
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan411 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan410X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan411 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan411X2
]

{ #category : #generated }
ABAPScanner >> scan411X1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Rr' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan411X1X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan411X1X2
]

{ #category : #generated }
ABAPScanner >> scan411X1X1 [
	self step.
	('Cc' includes: currentCharacter)
		ifTrue: [ self step.
			('Oo' includes: currentCharacter)
				ifTrue: [ self step.
					('Mm' includes: currentCharacter)
						ifTrue: [ self step.
							('Mm' includes: currentCharacter)
								ifTrue: [ self step.
									('Aa' includes: currentCharacter)
										ifTrue: [ self step.
											('Nn' includes: currentCharacter)
												ifTrue: [ self step.
													('Dd' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(838) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan411X1X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan411X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan411X1 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan412 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan412X1
]

{ #category : #generated }
ABAPScanner >> scan412X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan413 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $B and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $b and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan413 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan413X1
]

{ #category : #generated }
ABAPScanner >> scan413X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Ll' includes: currentCharacter) ifTrue: [ ^ self scan414 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan414 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Uu' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			('Ee' includes: currentCharacter)
				ifTrue: [ self
						recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
					self step.
					currentCharacter == $! ifTrue: [ ^ self scan123 ].
					currentCharacter == $# ifTrue: [ ^ self scan227 ].
					currentCharacter == $$ ifTrue: [ ^ self scan257 ].
					currentCharacter == $% ifTrue: [ ^ self scan53 ].
					currentCharacter == $& ifTrue: [ ^ self scan156 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $- ifTrue: [ ^ self scan414X1 ].
					currentCharacter == $/ ifTrue: [ ^ self scan206 ].
					currentCharacter == $< ifTrue: [ ^ self scan125 ].
					currentCharacter == $> ifTrue: [ ^ self scan174 ].
					currentCharacter == $? ifTrue: [ ^ self scan229 ].
					currentCharacter == $@ ifTrue: [ ^ self scan132 ].
					currentCharacter == $\ ifTrue: [ ^ self scan138 ].
					currentCharacter == $~ ifTrue: [ ^ self scan230 ].
					currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ] ].
	^ self scan414X2
]

{ #category : #generated }
ABAPScanner >> scan414X1 [
	self step.
	('Rr' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Qq' includes: currentCharacter)
						ifTrue: [ self step.
							('Uu' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ self step.
											('Ss' includes: currentCharacter)
												ifTrue: [ self step.
													('Tt' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(845) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan414X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan415 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	^ self scan415X1
]

{ #category : #generated }
ABAPScanner >> scan415X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan256 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan416 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan416 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 946 947 948 949 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scan416X1
]

{ #category : #generated }
ABAPScanner >> scan416X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan417 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan259 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan417 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 932 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan257 ].
	currentCharacter == $% ifTrue: [ ^ self scan53 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan121 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $~ ifTrue: [ ^ self scan230 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	('Hh' includes: currentCharacter)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan257 ].
			currentCharacter == $% ifTrue: [ ^ self scan53 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $- ifTrue: [ ^ self scan417X1 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $~ ifTrue: [ ^ self scan230 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ] ].
	^ self scan417X2
]

{ #category : #generated }
ABAPScanner >> scan417X1 [
	self step.
	('Hh' includes: currentCharacter)
		ifTrue: [ self step.
			('Ee' includes: currentCharacter)
				ifTrue: [ self step.
					('Aa' includes: currentCharacter)
						ifTrue: [ self step.
							('Dd' includes: currentCharacter)
								ifTrue: [ self step.
									('Ii' includes: currentCharacter)
										ifTrue: [ self step.
											('Nn' includes: currentCharacter)
												ifTrue: [ self step.
													('Gg' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(860) ] ] ] ] ] ].
			^ self reportLastMatch ].
	('Tt' includes: currentCharacter)
		ifTrue: [ self step.
			('Ii' includes: currentCharacter)
				ifTrue: [ self step.
					('Tt' includes: currentCharacter)
						ifTrue: [ self step.
							('Ll' includes: currentCharacter)
								ifTrue: [ self step.
									('Ee' includes: currentCharacter)
										ifTrue: [ ^ self recordAndReportMatch: #(861) ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan417X2 [
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan258 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan418 [
	[ self step.
	currentCharacter == $`
		ifTrue: [ self recordMatch: #(904 906).
			self step.
			currentCharacter == $` ifTrue: [ ^ self scan418 ].
			^ self reportLastMatch ].
	true ] whileTrue
]

{ #category : #generated }
ABAPScanner >> scan419 [
	[ self step.
	currentCharacter == $\ ifTrue: [ ^ self scan420 ].
	currentCharacter == ${ ifTrue: [ ^ self recordAndReportMatch: #(936) ].
	currentCharacter == $| ifTrue: [ ^ self recordAndReportMatch: #(939) ].
	currentCharacter <= Character tab
		or: [ (currentCharacter between: Character pageUp and: Character newPage)
				or: [ currentCharacter >= (Character value: 14) ] ] ] whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan42 [
	self recordMatch: #(888 913).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '/~' includes: currentCharacter ])
		ifTrue: [ ^ self scan41 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan43 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan420 [
	[ self step.
	currentCharacter == $\ ] whileTrue.
	currentCharacter == ${
		ifTrue: [ self recordMatch: #(936).
			self step.
			currentCharacter == $\ ifTrue: [ ^ self scan420 ].
			currentCharacter == ${ ifTrue: [ ^ self recordAndReportMatch: #(936) ].
			currentCharacter == $| ifTrue: [ ^ self recordAndReportMatch: #(939) ].
			(currentCharacter <= Character tab
				or: [ (currentCharacter between: Character pageUp and: Character newPage)
						or: [ currentCharacter >= (Character value: 14) ] ])
				ifTrue: [ ^ self scan419 ].
			^ self reportLastMatch ].
	currentCharacter == $|
		ifTrue: [ self recordMatch: #(939).
			self step.
			currentCharacter == $\ ifTrue: [ ^ self scan420 ].
			currentCharacter == ${ ifTrue: [ ^ self recordAndReportMatch: #(936) ].
			currentCharacter == $| ifTrue: [ ^ self recordAndReportMatch: #(939) ] ].
	(currentCharacter <= Character tab
		or: [ (currentCharacter between: Character pageUp and: Character newPage)
				or: [ currentCharacter >= (Character value: 14) ] ])
		ifTrue: [ ^ self scan419 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan421 [
	[ self step.
	currentCharacter == $\ ifTrue: [ ^ self scan422 ].
	currentCharacter == ${ ifTrue: [ ^ self recordAndReportMatch: #(938) ].
	currentCharacter == $| ifTrue: [ ^ self recordAndReportMatch: #(937) ].
	currentCharacter <= Character tab
		or: [ (currentCharacter between: Character pageUp and: Character newPage)
				or: [ currentCharacter >= (Character value: 14) ] ] ] whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan422 [
	[ self step.
	currentCharacter == $\ ] whileTrue.
	currentCharacter == ${
		ifTrue: [ self recordMatch: #(938).
			self step.
			currentCharacter == $\ ifTrue: [ ^ self scan422 ].
			currentCharacter == ${ ifTrue: [ ^ self recordAndReportMatch: #(938) ].
			currentCharacter == $| ifTrue: [ ^ self recordAndReportMatch: #(937) ].
			(currentCharacter <= Character tab
				or: [ (currentCharacter between: Character pageUp and: Character newPage)
						or: [ currentCharacter >= (Character value: 14) ] ])
				ifTrue: [ ^ self scan421 ].
			^ self reportLastMatch ].
	currentCharacter == $|
		ifTrue: [ self recordMatch: #(937).
			self step.
			currentCharacter == $\ ifTrue: [ ^ self scan422 ].
			currentCharacter == ${ ifTrue: [ ^ self recordAndReportMatch: #(938) ].
			currentCharacter == $| ifTrue: [ ^ self recordAndReportMatch: #(937) ] ].
	(currentCharacter <= Character tab
		or: [ (currentCharacter between: Character pageUp and: Character newPage)
				or: [ currentCharacter >= (Character value: 14) ] ])
		ifTrue: [ ^ self scan421 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan43 [
	[ self recordMatch: #(888 907 908 913 927).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '/~' includes: currentCharacter ])
		ifTrue: [ ^ self scan41 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan44 [
	[ self
		recordMatch: #(892 893 907 908 913 916 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan36 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan45 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan45 [
	self recordMatch: #(913).
	self step.
	((currentCharacter between: $$ and: $%)
		or: [ '*/~' includes: currentCharacter ])
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(907 908 913 927 952).
			self step.
			((currentCharacter between: $$ and: $%)
				or: [ '*/~' includes: currentCharacter ])
				ifTrue: [ [ self recordMatch: #(913).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_
														or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan46 [
	self recordMatch: #(888 913).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '/~' includes: currentCharacter ])
		ifTrue: [ ^ self scan41 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan47 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan47 [
	[ self recordMatch: #(888 907 908 913 927 952).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '/~' includes: currentCharacter ])
		ifTrue: [ ^ self scan41 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan48 [
	self
		recordMatch: #(888 892 893 894 907 908 913 916 917 921 927 928 930 946 949 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	^ self scan48X1
]

{ #category : #generated }
ABAPScanner >> scan48X1 [
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan36 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan42 ].
	((currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan33 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan49 [
	[ self recordMatch: #(893 908 923 930).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	currentCharacter == $? ifTrue: [ ^ self scan5 ].
	currentCharacter == $~ ifTrue: [ ^ self scan50 ].
	('$*' includes: currentCharacter) ifTrue: [ ^ self scan4 ].
	(currentCharacter between: $# and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan5 [
	[ self recordMatch: #(908 930).
	self step.
	currentCharacter == $~ ifTrue: [ ^ self scan6 ].
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan50 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan51 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan51 [
	[ self recordMatch: #(908 923).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan52 [
	self
		recordMatch: #(888 892 893 894 902 907 908 913 915 916 917 921 923 927 928 930 943 946 947 949 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan49 ].
	^ self scan52X1
]

{ #category : #generated }
ABAPScanner >> scan52X1 [
	currentCharacter == $$ ifTrue: [ ^ self scan33 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan54 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923 956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan57 ].
	(currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan53 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan53 [
	[ self
		recordMatch: #(888 892 893 894 902 907 908 913 915 916 917 921 923 927 928 930 943 947 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan49 ].
	currentCharacter == $$ ifTrue: [ ^ self scan33 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan54 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923 956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan57 ].
	currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan54 [
	[ self
		recordMatch: #(892 893 907 908 913 915 916 917 927 928 930 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $$ ifTrue: [ ^ self scan36 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan55 ].
	('%*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan55 [
	self recordMatch: #(913 915).
	self step.
	('$/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	('%*~' includes: currentCharacter) ifTrue: [ ^ self scan56 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(907 908 913 915 927).
			self step.
			('$/' includes: currentCharacter)
				ifTrue: [ [ self recordMatch: #(913).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_
														or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			('%*~' includes: currentCharacter) ifTrue: [ ^ self scan56 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan56 [
	[ self recordMatch: #(913 915).
	self step.
	('$/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	('%*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan57 [
	self recordMatch: #(888 913 915).
	self step.
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	('%~' includes: currentCharacter) ifTrue: [ ^ self scan58 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan59 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan58 [
	[ self recordMatch: #(888 913 915).
	self step.
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan59 [
	[ self recordMatch: #(888 907 908 913 915 923 927).
	self step.
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923) ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	('%~' includes: currentCharacter) ifTrue: [ ^ self scan58 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan6 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(908).
			self step.
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan60 [
	self recordMatch: #(5 892 928 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan60X2 ].
	currentCharacter == $$ ifTrue: [ ^ self scan61 ].
	currentCharacter == $% ifTrue: [ ^ self scan62 ].
	currentCharacter == $& ifTrue: [ ^ self scan60X1 ].
	currentCharacter == $* ifTrue: [ ^ self scan64 ].
	currentCharacter == $/ ifTrue: [ ^ self scan77 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan89 ].
	currentCharacter isDigit ifTrue: [ ^ self scan86 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(892 907 908 916 927 928 930 952 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan5 ].
			currentCharacter == $% ifTrue: [ ^ self scan62 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $/ ifTrue: [ ^ self scan87 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan38 ].
			currentCharacter == $~ ifTrue: [ ^ self scan63 ].
			('$*' includes: currentCharacter) ifTrue: [ ^ self scan61 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan60X1 [
	self recordMatch: #(928 956).
	self step.
	currentCharacter == $/
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $= ifTrue: [ ^ self recordAndReportMatch: #(7) ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan35 ].
	((currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ])
		ifTrue: [ ^ self scan34 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan60X2 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan61 [
	[ self recordMatch: #(892 907 908 916 927 928 930 952 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $% ifTrue: [ ^ self scan62 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan61X1 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan63 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan61X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan62 [
	[ self recordMatch: #(892 907 908 916 927 928 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan62X1 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan62X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan63 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(907 908 927 952).
			self step.
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan64 [
	self recordMatch: #(892 928 930 952 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan64X2 ].
	currentCharacter == $$ ifTrue: [ ^ self scan65 ].
	currentCharacter == $% ifTrue: [ ^ self scan66 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan67 ].
	currentCharacter == $/ ifTrue: [ ^ self scan70 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan69 ].
	currentCharacter isDigit
		ifTrue: [ [ self recordMatch: #(892 928 930 952 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan64X1 ].
			currentCharacter == $$ ifTrue: [ ^ self scan65 ].
			currentCharacter == $% ifTrue: [ ^ self scan66 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $* ifTrue: [ ^ self scan67 ].
			currentCharacter == $/ ifTrue: [ ^ self scan75 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan68 ].
			currentCharacter == $~ ifTrue: [ ^ self scan69 ].
			currentCharacter isDigit ] whileTrue ].
	^ self scan64X3
]

{ #category : #generated }
ABAPScanner >> scan64X1 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan64X2 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan64X3 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan76 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan65 [
	[ self recordMatch: #(892 907 908 927 928 930 952 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $% ifTrue: [ ^ self scan66 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan65X1 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan63 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan65X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan66 [
	[ self recordMatch: #(892 907 908 927 928 930 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan66X1 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan66X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan67 [
	[ self recordMatch: #(892 928 930 952 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan67X2 ].
	currentCharacter == $% ifTrue: [ ^ self scan67X1 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan67X3 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan69 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan67X1 [
	[ self recordMatch: #(892 928 930 956).
	self step.
	currentCharacter == $#
		ifTrue: [ [ self recordMatch: #(930).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan67X2 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan67X3 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan68 [
	[ self recordMatch: #(892 930 956).
	self step.
	currentCharacter == $#
		ifTrue: [ [ self recordMatch: #(930).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan69 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(952).
			self step.
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan7 [
	[ self recordMatch: #(907 908 927 930).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan70 [
	self recordMatch: #(928).
	self step.
	((currentCharacter between: $$ and: $&) or: [ '*/' includes: currentCharacter ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan71 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan71 [
	[ self recordMatch: #(928).
	self step.
	currentCharacter == $/
		ifTrue: [ self recordMatch: #(928).
			self step.
			currentCharacter == $% ifTrue: [ ^ self scan73 ].
			currentCharacter == $* ifTrue: [ ^ self scan74 ].
			currentCharacter isDigit
				ifTrue: [ [ self recordMatch: #(928 952).
					self step.
					currentCharacter == $% ifTrue: [ ^ self scan73 ].
					currentCharacter == $* ifTrue: [ ^ self scan74 ].
					currentCharacter == $~ ifTrue: [ ^ self scan69 ].
					currentCharacter isDigit ] whileTrue ].
			('&/' includes: currentCharacter)
				ifTrue: [ [ self recordMatch: #(928).
					self step.
					(currentCharacter between: $$ and: $&)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			(currentCharacter == $$
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ ^ self scan72 ].
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $&) or: [ currentCharacter == $* ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan72 [
	[ self recordMatch: #(907 908 927 928 952).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $% ifTrue: [ ^ self scan73 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan63 ].
	('&/' includes: currentCharacter) ifTrue: [ ^ self scan72X1 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan72X1 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan73 [
	[ self recordMatch: #(907 908 927 928).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $? ifTrue: [ ^ self scan14 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	('&/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan74 [
	[ self recordMatch: #(928 952).
	self step.
	currentCharacter == $~ ifTrue: [ ^ self scan69 ].
	((currentCharacter between: $% and: $&) or: [ currentCharacter == $/ ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan75 [
	self recordMatch: #(928).
	self step.
	((currentCharacter between: $$ and: $&) or: [ '*/' includes: currentCharacter ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			currentCharacter == $/
				ifTrue: [ [ self recordMatch: #(928).
					self step.
					currentCharacter isDigit ] whileTrue.
					('&*/' includes: currentCharacter)
						ifTrue: [ [ self recordMatch: #(928).
							self step.
							(currentCharacter between: $$ and: $&)
								or: [ currentCharacter == $*
										or: [ (currentCharacter between: $/ and: $9)
												or: [ (currentCharacter between: $A and: $Z)
														or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
								whileTrue.
							^ self reportLastMatch ].
					((currentCharacter between: $$ and: $%)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
						ifTrue: [ ^ self scan73 ].
					^ self reportLastMatch ].
			((currentCharacter between: $$ and: $&) or: [ currentCharacter == $* ])
				ifTrue: [ [ self recordMatch: #(928).
					self step.
					(currentCharacter between: $$ and: $&)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan76 [
	[ self recordMatch: #(892 907 908 927 928 930 952 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan5 ].
	currentCharacter == $% ifTrue: [ ^ self scan66 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan75 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan63 ].
	('$*' includes: currentCharacter) ifTrue: [ ^ self scan65 ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan77 [
	self recordMatch: #(928).
	self step.
	((currentCharacter between: $$ and: $&) or: [ '*/' includes: currentCharacter ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan78 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan78 [
	[ self recordMatch: #(928).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan79 ].
	((currentCharacter between: $$ and: $&) or: [ currentCharacter == $* ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan79 [
	self recordMatch: #(892 928).
	self step.
	currentCharacter == $% ifTrue: [ ^ self scan80 ].
	currentCharacter == $* ifTrue: [ ^ self scan82 ].
	currentCharacter == $? ifTrue: [ ^ self scan79X1 ].
	currentCharacter isDigit ifTrue: [ ^ self scan84 ].
	('&/' includes: currentCharacter) ifTrue: [ ^ self scan79X3 ].
	^ self scan79X4
]

{ #category : #generated }
ABAPScanner >> scan79X1 [
	[ self recordMatch: #(892 916).
	self step.
	currentCharacter == $?
		ifTrue: [ [ self recordMatch: #(892).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan79X2 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan79X3 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan79X4 [
	(currentCharacter == $$
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(892 907 908 916 927 928 952).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan15 ].
			currentCharacter == $% ifTrue: [ ^ self scan80 ].
			currentCharacter == $? ifTrue: [ ^ self scan81 ].
			currentCharacter == $~ ifTrue: [ ^ self scan63 ].
			('&/' includes: currentCharacter) ifTrue: [ ^ self scan79X2 ].
			('$*' includes: currentCharacter)
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan8 [
	self step.
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(907 908 927).
			self step.
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan80 [
	[ self recordMatch: #(892 907 908 916 927 928).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $? ifTrue: [ ^ self scan81 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	('&/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan81 [
	[ self recordMatch: #(892 907 908 927).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan82 [
	[ self recordMatch: #(892 928 952).
	self step.
	currentCharacter == $% ifTrue: [ ^ self scan83 ].
	currentCharacter == $?
		ifTrue: [ [ self recordMatch: #(892).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $~ ifTrue: [ ^ self scan69 ].
	('&/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan83 [
	[ self recordMatch: #(892 928).
	self step.
	currentCharacter == $?
		ifTrue: [ [ self recordMatch: #(892).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	('&/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan84 [
	[ self recordMatch: #(892 928 952).
	self step.
	currentCharacter == $% ifTrue: [ ^ self scan85 ].
	currentCharacter == $* ifTrue: [ ^ self scan82 ].
	currentCharacter == $? ifTrue: [ ^ self scan84X1 ].
	currentCharacter == $~ ifTrue: [ ^ self scan69 ].
	currentCharacter isDigit ] whileTrue.
	('&/' includes: currentCharacter) ifTrue: [ ^ self scan84X3 ].
	^ self scan84X4
]

{ #category : #generated }
ABAPScanner >> scan84X1 [
	[ self recordMatch: #(892).
	self step.
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan84X2 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan84X3 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan84X4 [
	(currentCharacter == $$
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(892 907 908 927 928 952).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan15 ].
			currentCharacter == $% ifTrue: [ ^ self scan85 ].
			currentCharacter == $? ifTrue: [ ^ self scan81 ].
			currentCharacter == $~ ifTrue: [ ^ self scan63 ].
			('&/' includes: currentCharacter) ifTrue: [ ^ self scan84X2 ].
			('$*' includes: currentCharacter)
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan85 [
	[ self recordMatch: #(892 907 908 927 928).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan15 ].
	currentCharacter == $? ifTrue: [ ^ self scan81 ].
	currentCharacter == $~ ifTrue: [ ^ self scan8 ].
	('&/' includes: currentCharacter)
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan86 [
	[ self recordMatch: #(892 928 930 952 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan86X1 ].
	currentCharacter == $$ ifTrue: [ ^ self scan65 ].
	currentCharacter == $% ifTrue: [ ^ self scan66 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan67 ].
	currentCharacter == $/ ifTrue: [ ^ self scan87 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan69 ].
	currentCharacter isDigit ] whileTrue.
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ [ self recordMatch: #(892 907 908 927 928 930 952 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan5 ].
			currentCharacter == $% ifTrue: [ ^ self scan66 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $/ ifTrue: [ ^ self scan87 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan38 ].
			currentCharacter == $~ ifTrue: [ ^ self scan63 ].
			('$*' includes: currentCharacter) ifTrue: [ ^ self scan65 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan86X1 [
	[ self recordMatch: #(930).
	self step.
	(currentCharacter between: $# and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ currentCharacter == $?
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan87 [
	self recordMatch: #(928).
	self step.
	((currentCharacter between: $$ and: $&) or: [ '*/' includes: currentCharacter ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan88 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan88 [
	[ self recordMatch: #(928).
	self step.
	currentCharacter == $/
		ifTrue: [ [ self recordMatch: #(892 928).
			self step.
			currentCharacter == $* ifTrue: [ ^ self scan83 ].
			currentCharacter == $?
				ifTrue: [ [ self recordMatch: #(892).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $0 and: $9)
										or: [ currentCharacter == $?
												or: [ (currentCharacter between: $A and: $Z)
														or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			currentCharacter isDigit ] whileTrue.
			('&/' includes: currentCharacter)
				ifTrue: [ [ self recordMatch: #(928).
					self step.
					(currentCharacter between: $$ and: $&)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			((currentCharacter between: $$ and: $%)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ ^ self scan85 ].
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $&) or: [ currentCharacter == $* ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan89 [
	[ self recordMatch: #(892 916 930 956).
	self step.
	currentCharacter == $#
		ifTrue: [ [ self recordMatch: #(930).
			self step.
			(currentCharacter between: $# and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ currentCharacter == $?
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	currentCharacter == $& ifTrue: [ ^ self scan35 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan9 [
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan10 ].
	((currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(916).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan90 [
	[ self step.
	currentCharacter == $'
		ifTrue: [ self recordMatch: #(904 905).
			self step.
			currentCharacter == $' ifTrue: [ ^ self scan90 ].
			^ self reportLastMatch ].
	true ] whileTrue
]

{ #category : #generated }
ABAPScanner >> scan91 [
	self recordMatch: #(886 892 893 909 913 915 917 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan91X2 ].
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	currentCharacter == $$ ifTrue: [ ^ self scan44 ].
	currentCharacter == $% ifTrue: [ ^ self scan54 ].
	currentCharacter == $& ifTrue: [ ^ self scan92 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan103 ].
	currentCharacter == $= ifTrue: [ ^ self recordAndReportMatch: #(9) ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan89 ].
	currentCharacter == $~ ifTrue: [ ^ self scan102 ].
	currentCharacter isDigit ifTrue: [ ^ self scan91X1 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ self
				recordMatch: #(892 893 907 908 909 910 913 915 916 917 927 928 930 950 951 952 953 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan4 ].
			currentCharacter == $$ ifTrue: [ ^ self scan44 ].
			currentCharacter == $% ifTrue: [ ^ self scan54 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $* ifTrue: [ ^ self scan120 ].
			currentCharacter == $/ ifTrue: [ ^ self scan115 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan38 ].
			currentCharacter == $~ ifTrue: [ ^ self scan119 ].
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ self
						recordMatch: #(892 893 907 908 909 910 913 915 916 917 927 928 930 950 951 952 953 956).
					self step.
					currentCharacter == $# ifTrue: [ ^ self scan4 ].
					currentCharacter == $$ ifTrue: [ ^ self scan44 ].
					currentCharacter == $% ifTrue: [ ^ self scan54 ].
					currentCharacter == $& ifTrue: [ ^ self scan34 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $/ ifTrue: [ ^ self scan115 ].
					currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
					currentCharacter == $? ifTrue: [ ^ self scan38 ].
					currentCharacter == $~ ifTrue: [ ^ self scan119 ].
					((currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
						ifTrue: [ [ self
								recordMatch: #(892 893 907 908 910 913 915 916 917 927 928 930 950 951 952 953 956).
							self step.
							currentCharacter == $# ifTrue: [ ^ self scan4 ].
							currentCharacter == $$ ifTrue: [ ^ self scan44 ].
							currentCharacter == $% ifTrue: [ ^ self scan54 ].
							currentCharacter == $& ifTrue: [ ^ self scan34 ].
							currentCharacter == $* ifTrue: [ ^ self scan121 ].
							currentCharacter == $/ ifTrue: [ ^ self scan115 ].
							currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
							currentCharacter == $? ifTrue: [ ^ self scan38 ].
							currentCharacter == $~ ifTrue: [ ^ self scan119 ].
							(currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
								whileTrue ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan91X1 [
	self recordMatch: #(892 893 909 910 913 915 917 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	currentCharacter == $$ ifTrue: [ ^ self scan112 ].
	currentCharacter == $% ifTrue: [ ^ self scan114 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan100 ].
	currentCharacter == $/ ifTrue: [ ^ self scan115 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan102 ].
	currentCharacter isDigit ifTrue: [ ^ self scan91X1X1 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ self
				recordMatch: #(892 893 907 908 909 910 913 915 917 927 928 930 950 951 952 953 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan4 ].
			currentCharacter == $$ ifTrue: [ ^ self scan112 ].
			currentCharacter == $% ifTrue: [ ^ self scan114 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $* ifTrue: [ ^ self scan118 ].
			currentCharacter == $/ ifTrue: [ ^ self scan115 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan38 ].
			currentCharacter == $~ ifTrue: [ ^ self scan119 ].
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ ^ self scan117 ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan91X1X1 [
	self recordMatch: #(892 893 909 910 913 915 917 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	currentCharacter == $$ ifTrue: [ ^ self scan112 ].
	currentCharacter == $% ifTrue: [ ^ self scan114 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan101 ].
	currentCharacter == $/ ifTrue: [ ^ self scan115 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan102 ].
	currentCharacter isDigit
		ifTrue: [ [ self recordMatch: #(892 893 910 913 915 917 928 930 950 951 952 953 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan2 ].
			currentCharacter == $$ ifTrue: [ ^ self scan112 ].
			currentCharacter == $% ifTrue: [ ^ self scan114 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $* ifTrue: [ ^ self scan101 ].
			currentCharacter == $/ ifTrue: [ ^ self scan115 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan68 ].
			currentCharacter == $~ ifTrue: [ ^ self scan102 ].
			currentCharacter isDigit ] whileTrue ].
	^ self scan91X1X1X1
]

{ #category : #generated }
ABAPScanner >> scan91X1X1X1 [
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan117 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan91X2 [
	self step.
	currentCharacter == $& ifTrue: [ ^ self scan9 ].
	currentCharacter == $/ ifTrue: [ ^ self scan10 ].
	((currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $?
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ [ self recordMatch: #(916).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan92 [
	self recordMatch: #(928 956).
	self step.
	currentCharacter == $/ ifTrue: [ ^ self scan93 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan92X1 ].
	(currentCharacter isDigit or: [ '&*' includes: currentCharacter ])
		ifTrue: [ ^ self scan34 ].
	^ self scan92X3
]

{ #category : #generated }
ABAPScanner >> scan92X1 [
	[ self recordMatch: #(916 956).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	('&?' includes: currentCharacter) ifTrue: [ ^ self scan35 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan92X2 [
	[ self recordMatch: #(928).
	self step.
	(currentCharacter between: $$ and: $&)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan92X3 [
	((currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(916 928 956).
			self step.
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $/ ifTrue: [ ^ self scan92X2 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan35 ].
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $0 and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan93 [
	self recordMatch: #(928).
	self step.
	((currentCharacter between: $$ and: $&) or: [ '*/' includes: currentCharacter ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan94 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan94 [
	[ self recordMatch: #(928).
	self step.
	currentCharacter == $/
		ifTrue: [ self recordMatch: #(928).
			self step.
			currentCharacter == $?
				ifTrue: [ [ self recordMatch: #(916).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $0 and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			(currentCharacter isDigit or: [ '&*/' includes: currentCharacter ])
				ifTrue: [ [ self recordMatch: #(928).
					self step.
					(currentCharacter between: $$ and: $&)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			((currentCharacter between: $$ and: $%)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ [ self recordMatch: #(916 928).
					self step.
					('&/' includes: currentCharacter)
						ifTrue: [ [ self recordMatch: #(928).
							self step.
							(currentCharacter between: $$ and: $&)
								or: [ currentCharacter == $*
										or: [ (currentCharacter between: $/ and: $9)
												or: [ (currentCharacter between: $A and: $Z)
														or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
								whileTrue.
							^ self reportLastMatch ].
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $0 and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
						whileTrue ].
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $&) or: [ currentCharacter == $* ])
		ifTrue: [ [ self recordMatch: #(928).
			self step.
			(currentCharacter between: $$ and: $&)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	(currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan95 [
	self recordMatch: #(892 893 909 913 915 917 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	^ self scan95X1
]

{ #category : #generated }
ABAPScanner >> scan95X1 [
	currentCharacter == $$ ifTrue: [ ^ self scan96 ].
	currentCharacter == $% ifTrue: [ ^ self scan99 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan102 ].
	(currentCharacter == $*
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan100 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan96 [
	[ self recordMatch: #(892 893 913 917 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	currentCharacter == $% ifTrue: [ ^ self scan97 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan98 ].
	('$*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan97 [
	[ self recordMatch: #(892 893 913 917 928 930 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan97X1 ].
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan97X1 [
	[ self recordMatch: #(913).
	self step.
	(currentCharacter between: $$ and: $%)
		or: [ currentCharacter == $*
				or: [ (currentCharacter between: $/ and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_
										or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan98 [
	self recordMatch: #(913).
	self step.
	((currentCharacter between: $$ and: $%)
		or: [ '*/~' includes: currentCharacter ])
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(913 952).
			self step.
			((currentCharacter between: $$ and: $%)
				or: [ '*/~' includes: currentCharacter ])
				ifTrue: [ [ self recordMatch: #(913).
					self step.
					(currentCharacter between: $$ and: $%)
						or: [ currentCharacter == $*
								or: [ (currentCharacter between: $/ and: $9)
										or: [ (currentCharacter between: $A and: $Z)
												or: [ currentCharacter == $_
														or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
						whileTrue.
					^ self reportLastMatch ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scan99 [
	[ self recordMatch: #(892 893 913 915 917 928 930 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan2 ].
	currentCharacter == $$ ifTrue: [ ^ self scan97 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $/ ifTrue: [ ^ self scan37 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan68 ].
	currentCharacter == $~ ifTrue: [ ^ self scan56 ].
	('%*' includes: currentCharacter)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForToken [
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan1 ].
	currentCharacter == $" ifTrue: [ ^ self scanForTokenX22 ].
	currentCharacter == $# ifTrue: [ ^ self scan27 ].
	currentCharacter == $$ ifTrue: [ ^ self scanForTokenX14 ].
	currentCharacter == $% ifTrue: [ ^ self scanForTokenX15 ].
	currentCharacter == $& ifTrue: [ ^ self scan60 ].
	currentCharacter == $' ifTrue: [ ^ self scan90 ].
	currentCharacter == $( ifTrue: [ ^ self recordAndReportMatch: #(899) ].
	currentCharacter == $) ifTrue: [ ^ self recordAndReportMatch: #(900) ].
	currentCharacter == $* ifTrue: [ ^ self scan91 ].
	currentCharacter == $+ ifTrue: [ ^ self recordAndReportMatch: #(903) ].
	currentCharacter == $, ifTrue: [ ^ self recordAndReportMatch: #(935) ].
	currentCharacter == $- ifTrue: [ ^ self scanForTokenX25 ].
	currentCharacter == $. ifTrue: [ ^ self scanForTokenX21 ].
	currentCharacter == $/ ifTrue: [ ^ self scan122 ].
	currentCharacter == $0 ifTrue: [ ^ self scanForTokenX3 ].
	currentCharacter == $1 ifTrue: [ ^ self scanForTokenX13 ].
	currentCharacter == $2 ifTrue: [ ^ self scanForTokenX12 ].
	currentCharacter == $3 ifTrue: [ ^ self scanForTokenX11 ].
	currentCharacter == $4 ifTrue: [ ^ self scanForTokenX10 ].
	currentCharacter == $5 ifTrue: [ ^ self scanForTokenX9 ].
	currentCharacter == $6 ifTrue: [ ^ self scanForTokenX8 ].
	currentCharacter == $7 ifTrue: [ ^ self scanForTokenX7 ].
	currentCharacter == $8 ifTrue: [ ^ self scanForTokenX2 ].
	currentCharacter isDigit ifTrue: [ ^ self scanForTokenX6 ].
	currentCharacter == $: ifTrue: [ ^ self recordAndReportMatch: #(934) ].
	currentCharacter == $< ifTrue: [ ^ self scanForTokenX17 ].
	currentCharacter == $= ifTrue: [ ^ self scanForTokenX23 ].
	currentCharacter == $> ifTrue: [ ^ self scanForTokenX16 ].
	currentCharacter == $? ifTrue: [ ^ self scan244 ].
	currentCharacter == $@ ifTrue: [ ^ self recordAndReportMatch: #(957) ].
	currentCharacter == $[ ifTrue: [ ^ self recordAndReportMatch: #(941) ].
	currentCharacter == $\ ifTrue: [ ^ self scanForTokenX20 ].
	currentCharacter == $] ifTrue: [ ^ self recordAndReportMatch: #(942) ].
	currentCharacter == $^ ifTrue: [ ^ self scanForTokenX19 ].
	currentCharacter == $_ ifTrue: [ ^ self scanForTokenX1 ].
	currentCharacter == $` ifTrue: [ ^ self scan418 ].
	currentCharacter == $| ifTrue: [ ^ self scan419 ].
	currentCharacter == $} ifTrue: [ ^ self scan421 ].
	currentCharacter == $~ ifTrue: [ ^ self scanForTokenX18 ].
	('Aa' includes: currentCharacter) ifTrue: [ ^ self scan253 ].
	('Bb' includes: currentCharacter) ifTrue: [ ^ self scan270 ].
	('Cc' includes: currentCharacter) ifTrue: [ ^ self scan276 ].
	('Dd' includes: currentCharacter) ifTrue: [ ^ self scan288 ].
	('Ee' includes: currentCharacter) ifTrue: [ ^ self scan293 ].
	('Ff' includes: currentCharacter) ifTrue: [ ^ self scan314 ].
	('Hh' includes: currentCharacter) ifTrue: [ ^ self scan325 ].
	('Ii' includes: currentCharacter) ifTrue: [ ^ self scan327 ].
	('Ll' includes: currentCharacter) ifTrue: [ ^ self scan334 ].
	('Mm' includes: currentCharacter) ifTrue: [ ^ self scan339 ].
	('Nn' includes: currentCharacter) ifTrue: [ ^ self scan346 ].
	('Oo' includes: currentCharacter) ifTrue: [ ^ self scan350 ].
	('Pp' includes: currentCharacter) ifTrue: [ ^ self scan354 ].
	('Qq' includes: currentCharacter) ifTrue: [ ^ self scan364 ].
	('Rr' includes: currentCharacter) ifTrue: [ ^ self scan367 ].
	('Ss' includes: currentCharacter) ifTrue: [ ^ self scan371 ].
	('Tt' includes: currentCharacter) ifTrue: [ ^ self scan403 ].
	currentCharacter isVowel ifTrue: [ ^ self scan410 ].
	('Vv' includes: currentCharacter) ifTrue: [ ^ self scan412 ].
	('Ww' includes: currentCharacter) ifTrue: [ ^ self scan415 ].
	('Xx' includes: currentCharacter) ifTrue: [ ^ self scanForTokenX5 ].
	('Zz' includes: currentCharacter) ifTrue: [ ^ self scanForTokenX4 ].
	(currentCharacter isSeparator or: [ currentCharacter == Character pageUp ])
		ifTrue: [ ^ self scanForTokenX24 ].
	(currentCharacter between: $G and: $y)
		ifTrue: [ self
				recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan227 ].
			currentCharacter == $$ ifTrue: [ ^ self scan254 ].
			currentCharacter == $% ifTrue: [ ^ self scan52 ].
			currentCharacter == $& ifTrue: [ ^ self scan156 ].
			currentCharacter == $* ifTrue: [ ^ self scan255 ].
			currentCharacter == $/ ifTrue: [ ^ self scan206 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan174 ].
			currentCharacter == $? ifTrue: [ ^ self scan229 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $\ ifTrue: [ ^ self scan138 ].
			currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
			currentCharacter == $~ ifTrue: [ ^ self scan269 ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ ^ self scan260 ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX1 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scanForTokenX1X1 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX1X2
]

{ #category : #generated }
ABAPScanner >> scanForTokenX10 [
	self
		recordMatch: #(17 887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX10X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX10X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan236 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX11 [
	self
		recordMatch: #(16 887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX11X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX11X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan236 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX12 [
	self
		recordMatch: #(15 887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX12X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX12X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan236 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX13 [
	self
		recordMatch: #(14 887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX13X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX13X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan236 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX14 [
	self
		recordMatch: #(888 892 893 894 907 908 913 916 917 921 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $% ifTrue: [ ^ self scan48 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan44 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scanForTokenX14X1 ].
	(currentCharacter == $$
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ self
				recordMatch: #(888 892 893 894 907 908 913 916 917 921 927 928 930 946 949 950 951 952 953 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan4 ].
			currentCharacter == $% ifTrue: [ ^ self scan33 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $* ifTrue: [ ^ self scan44 ].
			currentCharacter == $/ ifTrue: [ ^ self scan40 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan38 ].
			currentCharacter == $~ ifTrue: [ ^ self scan46 ].
			(currentCharacter == $$
				or: [ (currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
				ifTrue: [ ^ self scan32 ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX14X1 [
	self recordMatch: #(888 913 949).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%) or: [ '/~' includes: currentCharacter ])
		ifTrue: [ ^ self scan41 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan47 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX15 [
	self
		recordMatch: #(888 892 893 894 902 907 908 913 915 916 917 921 923 927 928 930 943 947 950 951 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan49 ].
	currentCharacter == $$ ifTrue: [ ^ self scan48 ].
	^ self scanForTokenX15X2
]

{ #category : #generated }
ABAPScanner >> scanForTokenX15X1 [
	self recordMatch: #(888 913 915 949).
	self step.
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	('%~' includes: currentCharacter) ifTrue: [ ^ self scan58 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan59 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX15X2 [
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan54 ].
	currentCharacter == $/ ifTrue: [ ^ self scan40 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(923 956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scanForTokenX15X1 ].
	(currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan52 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX16 [
	self recordMatch: #(27).
	self step.
	currentCharacter == $< ifTrue: [ ^ self recordAndReportMatch: #(28) ].
	currentCharacter == $= ifTrue: [ ^ self recordAndReportMatch: #(29) ].
	((currentCharacter between: $/ and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self recordMatch: #(922).
			self step.
			currentCharacter == $! ifTrue: [ ^ self scan123 ].
			currentCharacter == $# ifTrue: [ ^ self scan130 ].
			currentCharacter == $$ ifTrue: [ ^ self scan124 ].
			currentCharacter == $& ifTrue: [ ^ self scan128 ].
			currentCharacter == $< ifTrue: [ ^ self scan125 ].
			currentCharacter == $> ifTrue: [ ^ self scan129 ].
			currentCharacter == $? ifTrue: [ ^ self scan127 ].
			currentCharacter == $@ ifTrue: [ ^ self scan132 ].
			currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(922) ].
			currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
			(currentCharacter between: $/ and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX17 [
	self recordMatch: #(21).
	^ self scanForTokenX17X2
]

{ #category : #generated }
ABAPScanner >> scanForTokenX17X1 [
	self step.
	currentCharacter == $- ifTrue: [ ^ self scan241 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(918) ].
	currentCharacter == $? ifTrue: [ ^ self scan242 ].
	((currentCharacter between: $$ and: $%) or: [ '*/' includes: currentCharacter ])
		ifTrue: [ ^ self scan240 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ [ self step.
			currentCharacter == $- ifTrue: [ ^ self scan241 ].
			currentCharacter == $/ ifTrue: [ ^ self scanForTokenX17X1X1 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(918) ].
			currentCharacter == $? ifTrue: [ ^ self scan242 ].
			((currentCharacter between: $$ and: $%) or: [ currentCharacter == $* ])
				ifTrue: [ ^ self scan240 ].
			(currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
				whileTrue ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX17X1X1 [
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan239 ].
	currentCharacter == $- ifTrue: [ ^ self scan241 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(918) ].
	currentCharacter == $? ifTrue: [ ^ self scan242 ].
	('$*/' includes: currentCharacter) ifTrue: [ ^ self scan240 ].
	(currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan243 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX17X2 [
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan239 ].
	currentCharacter == $/ ifTrue: [ ^ self scanForTokenX17X1 ].
	currentCharacter == $= ifTrue: [ ^ self recordAndReportMatch: #(22) ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(23) ].
	currentCharacter == $? ifTrue: [ ^ self scan242 ].
	('$*' includes: currentCharacter) ifTrue: [ ^ self scan240 ].
	(currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self scan243 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX18 [
	self recordMatch: #(888 913 915 924).
	self step.
	currentCharacter == $$ ifTrue: [ ^ self scanForTokenX18X2 ].
	^ self scanForTokenX18X3
]

{ #category : #generated }
ABAPScanner >> scanForTokenX18X1 [
	self recordMatch: #(888 913 915 949).
	self step.
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
	(currentCharacter == $%
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ])
		ifTrue: [ ^ self scan58 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX18X2 [
	self recordMatch: #(888 913 949).
	self step.
	currentCharacter == $*
		ifTrue: [ [ self recordMatch: #(913).
			self step.
			(currentCharacter between: $$ and: $%)
				or: [ currentCharacter == $*
						or: [ (currentCharacter between: $/ and: $9)
								or: [ (currentCharacter between: $A and: $Z)
										or: [ currentCharacter == $_
												or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ] ] ]
				whileTrue.
			^ self reportLastMatch ].
	((currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $/ and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ] ])
		ifTrue: [ ^ self scan41 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX18X3 [
	currentCharacter == $% ifTrue: [ ^ self scanForTokenX18X1 ].
	currentCharacter == $* ifTrue: [ ^ self scan56 ].
	currentCharacter == $/ ifTrue: [ ^ self scan41 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(949) ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_
						or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ])
		ifTrue: [ self recordMatch: #(888 913 915 924 949).
			self step.
			currentCharacter == $% ifTrue: [ ^ self scan58 ].
			currentCharacter == $* ifTrue: [ ^ self scan56 ].
			('$/' includes: currentCharacter) ifTrue: [ ^ self scan41 ].
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_
								or: [ (currentCharacter between: $a and: $z) or: [ currentCharacter == $~ ] ] ] ])
				ifTrue: [ ^ self scan232 ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX19 [
	self step.
	currentCharacter == $~ ifTrue: [ ^ self recordAndReportMatch: #(949) ].
	((currentCharacter between: $$ and: $%)
		or: [ (currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ (currentCharacter between: $^ and: $_)
								or: [ currentCharacter between: $a and: $z ] ] ] ])
		ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX1X1 [
	self
		recordMatch: #(892 893 907 908 909 913 915 916 917 927 928 930 950 951 952 953 956).
	self step.
	currentCharacter == $# ifTrue: [ ^ self scan4 ].
	currentCharacter == $$ ifTrue: [ ^ self scan44 ].
	currentCharacter == $% ifTrue: [ ^ self scan54 ].
	currentCharacter == $& ifTrue: [ ^ self scan34 ].
	currentCharacter == $* ifTrue: [ ^ self scan120 ].
	currentCharacter == $/ ifTrue: [ ^ self scan115 ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
	currentCharacter == $? ifTrue: [ ^ self scan38 ].
	currentCharacter == $~ ifTrue: [ ^ self scan119 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ self
				recordMatch: #(892 893 907 908 909 913 915 916 917 927 928 930 950 951 952 953 956).
			self step.
			currentCharacter == $# ifTrue: [ ^ self scan4 ].
			currentCharacter == $$ ifTrue: [ ^ self scan44 ].
			currentCharacter == $% ifTrue: [ ^ self scan54 ].
			currentCharacter == $& ifTrue: [ ^ self scan34 ].
			currentCharacter == $* ifTrue: [ ^ self scan121 ].
			currentCharacter == $/ ifTrue: [ ^ self scan115 ].
			currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
			currentCharacter == $? ifTrue: [ ^ self scan38 ].
			currentCharacter == $~ ifTrue: [ ^ self scan119 ].
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ [ self
						recordMatch: #(892 893 907 908 913 915 916 917 927 928 930 950 951 952 953 956).
					self step.
					currentCharacter == $# ifTrue: [ ^ self scan4 ].
					currentCharacter == $$ ifTrue: [ ^ self scan44 ].
					currentCharacter == $% ifTrue: [ ^ self scan54 ].
					currentCharacter == $& ifTrue: [ ^ self scan34 ].
					currentCharacter == $* ifTrue: [ ^ self scan121 ].
					currentCharacter == $/ ifTrue: [ ^ self scan115 ].
					currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(956) ].
					currentCharacter == $? ifTrue: [ ^ self scan38 ].
					currentCharacter == $~ ifTrue: [ ^ self scan119 ].
					(currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
						whileTrue ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX1X2 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX2 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	^ self scanForTokenX2X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX20 [
	self step.
	currentCharacter == $_
		ifTrue: [ self step.
			((currentCharacter between: $0 and: $9)
				or: [ (currentCharacter between: $A and: $Z)
						or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
				ifTrue: [ [ self recordMatch: #(914).
					self step.
					(currentCharacter between: $0 and: $9)
						or: [ (currentCharacter between: $A and: $Z)
								or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ] ]
						whileTrue ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX21 [
	self recordMatch: #(10).
	self step.
	currentCharacter == $.
		ifTrue: [ self step.
			('Mm' includes: currentCharacter)
				ifTrue: [ self step.
					('Ee' includes: currentCharacter)
						ifTrue: [ self step.
							('Mm' includes: currentCharacter)
								ifTrue: [ self step.
									('Oo' includes: currentCharacter)
										ifTrue: [ self step.
											('Rr' includes: currentCharacter)
												ifTrue: [ self step.
													('Yy' includes: currentCharacter)
														ifTrue: [ ^ self recordAndReportMatch: #(11) ] ] ] ] ] ] ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX22 [
	[ self recordMatch: #(898).
	self step.
	currentCharacter <= Character tab
		or: [ (currentCharacter between: Character pageUp and: Character newPage)
				or: [ currentCharacter >= (Character value: 14) ] ] ] whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX23 [
	self recordMatch: #(24).
	self step.
	currentCharacter == $< ifTrue: [ ^ self recordAndReportMatch: #(25) ].
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(26 896) ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX24 [
	[ self recordMatch: #(885).
	self step.
	currentCharacter isSeparator or: [ currentCharacter == Character pageUp ] ]
		whileTrue.
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX25 [
	self recordMatch: #(895).
	self step.
	currentCharacter == $> ifTrue: [ ^ self recordAndReportMatch: #(897) ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX2X1 [
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	(currentCharacter between: $0 and: $3) ifTrue: [ ^ self scan236 ].
	currentCharacter isDigit ifTrue: [ ^ self scan221 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX3 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $0 ifTrue: [ ^ self scan221 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX3X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX3X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan236 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX4 [
	self
		recordMatch: #(873 887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX4X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX4X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	((currentCharacter between: $0 and: $9)
		or: [ (currentCharacter between: $A and: $Z)
				or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX5 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 902 907 908 909 910 913 915 916 917 920 921 922 923 924 925 926 927 928 930 933 943 947 948 950 951 952 953 954 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan227 ].
	currentCharacter == $$ ifTrue: [ ^ self scan254 ].
	currentCharacter == $% ifTrue: [ ^ self scan52 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan255 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX5X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX5X1 [
	currentCharacter == $? ifTrue: [ ^ self scan229 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan269 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan256 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan260 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX6 [
	self
		recordMatch: #(887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX6X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX6X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan221 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX7 [
	self
		recordMatch: #(20 887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX7X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX7X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan236 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX8 [
	self
		recordMatch: #(19 887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX8X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX8X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan236 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #generated }
ABAPScanner >> scanForTokenX9 [
	self
		recordMatch: #(18 887 888 889 890 891 892 893 894 901 902 909 910 913 915 917 920 921 922 923 924 925 926 928 930 933 943 947 948 950 951 952 953 954 955 956).
	self step.
	currentCharacter == $! ifTrue: [ ^ self scan123 ].
	currentCharacter == $# ifTrue: [ ^ self scan198 ].
	currentCharacter == $$ ifTrue: [ ^ self scan200 ].
	currentCharacter == $% ifTrue: [ ^ self scan204 ].
	currentCharacter == $& ifTrue: [ ^ self scan156 ].
	currentCharacter == $* ifTrue: [ ^ self scan95 ].
	currentCharacter == $/ ifTrue: [ ^ self scan206 ].
	currentCharacter == $< ifTrue: [ ^ self scan125 ].
	currentCharacter == $> ifTrue: [ ^ self scan174 ].
	^ self scanForTokenX9X1
]

{ #category : #generated }
ABAPScanner >> scanForTokenX9X1 [
	currentCharacter == $? ifTrue: [ ^ self scan224 ].
	currentCharacter == $@ ifTrue: [ ^ self scan132 ].
	currentCharacter == $\ ifTrue: [ ^ self scan138 ].
	currentCharacter == $^ ifTrue: [ ^ self recordAndReportMatch: #(946 949) ].
	currentCharacter == $~ ifTrue: [ ^ self scan238 ].
	currentCharacter = (Character value: 167) ifTrue: [ ^ self scan126 ].
	currentCharacter isDigit ifTrue: [ ^ self scan236 ].
	((currentCharacter between: $A and: $Z)
		or: [ currentCharacter == $_ or: [ currentCharacter between: $a and: $z ] ])
		ifTrue: [ ^ self scan237 ].
	^ self reportLastMatch
]

{ #category : #private }
ABAPScanner >> star [
	| ch |
	(stream position = 1
		or: [ ch := self peekAt: self position - 2.
			ch = Character lf or: [ ch = Character cr ] ])
		ifTrue: [ [ stream atEnd not
				and: [ ch := stream peek.
					(ch = Character lf or: [ ch = Character cr ]) not ] ]
				whileTrue: [ stream next ].
			self recordMatch: #().
			^ self comment ].
	^ SmaCCToken
		value: outputStream contents
		start: start + 1
		ids: matchActions
]

{ #category : #generated }
ABAPScanner >> tokenActions [
	^ #(nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil #whitespace #star nil nil nil nil nil nil nil nil #Dash nil nil #comment #ParenLeft #ParenRight nil nil #Plus nil nil nil nil nil nil nil nil nil nil nil nil #FieldSub1 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil #pragma #BracketLeft #BracketRight nil nil nil nil nil nil nil nil nil nil nil nil nil nil #At)
]

{ #category : #generated }
ABAPScanner >> tokenClass [
	^SmaCCCaseInsensitiveToken
]
